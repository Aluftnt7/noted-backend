{"version":3,"sources":["assets/sound/sp-tune.mp3","assets/svg/loading.svg","assets/svg/friends.svg","assets/svg/ok.svg","assets/svg/edit.svg","assets/svg/cross.svg","assets/svg/arrow.svg","assets/svg/empty-star.svg","assets/svg/star.svg","assets/svg/paint.svg","assets/svg/splash-orange.svg","assets/svg/splash-pink.svg","assets/svg/splash-yellow.svg","assets/svg/splash-blue.svg","assets/svg/splash-green.svg","assets/svg/upload.svg","assets/png/petek-logo.png","services/SocketService.js","services/StorageService.js","services/HttpService.js","services/UserService.js","actions/UserActions.js","services/RoomService.js","actions/RoomActions.js","services/UtilService.js","services/ContactService.js","actions/ContactActions.js","cmps/Loading.jsx","cmps/User/AvatarEdit.jsx","cmps/ContactPreview.jsx","cmps/ContactList.jsx","cmps/Filter.jsx","services/CloudinaryService.js","pages/HomePage.jsx","cmps/Notification/NotificationFriend.jsx","cmps/Notification/NotificationResponse.jsx","cmps/Notification/NotificationNote.jsx","cmps/Notification/NotificationPreview.jsx","cmps/Notification/NotificationList.jsx","pages/InboxPage.jsx","pages/ContactPage.jsx","cmps/ButtonMenu.jsx","cmps/Note/NoteText.jsx","cmps/Note/NoteImg.jsx","cmps/Note/NoteVideo.jsx","cmps/Note/NoteTodo.jsx","cmps/Features.jsx","cmps/NotePreview.jsx","cmps/NoteList.jsx","cmps/InputText.jsx","cmps/InputImg.jsx","services/YoutubeApiService.js","cmps/InputVideo.jsx","cmps/InputTodo.jsx","pages/BoardPage.jsx","pages/SignUp.jsx","RoutePage.jsx","cmps/BurgerMenu.jsx","cmps/NavBar.jsx","App.jsx","serviceWorker.js","store/reducers/UserReducer.js","store/reducers/ContactReducer.js","store/reducers/RoomReducer.js","store/index.js","index.js","assets/svg/x-mark.svg","assets/svg/plus.svg","assets/png/user.png","assets/svg/save.svg"],"names":["module","exports","socket","setup","io","terminate","on","eventName","cb","off","emit","data","StorageService","save","key","value","item","JSON","stringify","localStorage","setItem","load","getItem","parse","axios","Axios","create","withCredentials","HttpService","endpoint","ajax","a","method","url","res","response","status","KEY","USER","console","log","_id","credentials","userName","fullName","password","pinnedNotes","notifications","imgUrl","avatarImg","Date","now","removeItem","msg","user","updatedUser","UserService","getById","signUp","update","login","logout","getMinimalUser","dispatch","type","getUser","updateUser","room","prm","RoomService","query","critirea","params","URLSearchParams","filterBy","queryParams","property","set","remove","id","loadRoomById","saveRoom","notes","isEdit","UtilService","makeId","length","txt","possible","i","charAt","Math","floor","random","getRandomChuck","get","contacts","ContactService","getContactById","Promise","resolve","reject","contact","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","push","_addContact","getEmptyContact","loadContacts","Loading","src","loading","alt","className","AvatarEdit","props","isLoading","onChange","ev","onUploadImg","hidden","resizeMode","onAddFriend","loggedinUser","moveToRoom","useState","isFriendSent","setIsFriendSent","isFriend","setIsFriend","roomId","setRoomId","useEffect","friend","friends","toggleIsFriend","preventDefault","onClick","friendReqSent","addFriendImg","handelClick","onMoveToRoom","map","ContactPreview","Filter","state","term","onChangeHandler","target","name","setState","onFilter","onKeyHandler","keyCode","moveToContact","placeHolder","this","minLength","debounceTimeout","placeholder","onKeyDown","Component","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","secure","then","json","catch","err","error","HomePage","CloudinaryService","userImgUrl","Object","assign","secure_url","friendId","SocketService","onFilterHandler","prevState","stopPropagation","history","capitalize","toUpperCase","slice","ContactList","mapDispatchToProps","connect","notification","onApprove","onDecline","isApproved","onDeleteNotification","to","NotificationType","NotificationFriend","NotificationResponse","NotificationNote","fromNow","createdAt","xMark","NotificationPreview","currRoom","idx","currNotification","NotificationList","ContactPage","handleKeyPress","setNoteType","setNoteInputType","setNoteData","isOpen","setIsOpen","slideSpeed","direction","spacing","iconResting","style","fontSize","nativecolor","iconActive","backgroundColor","size","icon","fill","note","header","width","allow","title","userId","currTodoIdx","setCurrTodoIdx","setIsNewTodo","isNewTodo","editedTodo","setEditedTodo","newTodo","setNewTodo","editInputRef","createRef","newTodoInputRef","toggleIsDone","isDone","current","focus","text","PlusIcon","todo","xmark","removeTodo","ref","e","ArrowIcon","todoToAdd","addTodo","togglePinned","setNoteColor","isPalleteOpen","setIsPalleteOpen","star","emptyStar","colorPallete","splashOrange","splashPink","splashYellow","splashBlue","splashGreen","removeNote","saveRoomChanges","isPinned","setIsEdit","NoteType","NoteText","NoteImg","NoteVideo","NoteTodo","noteRef","paintNote","bgColor","createdBy","editIcon","saveIcon","format","Features","color","notesForDisplay","setNotesForDisplay","fixedNotes","unshift","NotePreview","setNoteHeader","handleSubmit","onSubmit","inputRef","click","API_KEY","YoutubeApiService","youtubeQuery","items","addVideo","videos","setVideos","searchYoutubeVideos","queryStr","youtubeVideos","video","videoId","snippet","thumbnails","default","noteData","currTodo","setCurrTodo","textInput","React","useRef","todoIdx","filter","resetCurrRoom","noteType","noteHeader","noteInputType","isUploading","setIsUploading","setfilterBy","newNote","InputType","InputText","InputImg","InputVideo","InputTodo","loadRoom","match","onHandleSubmit","minimalUser","noteId","ButtonMenu","NoteList","currNote","SignUp","newUser","isSignUp","getLoggedinUser","resetInput","toggleSignUp","Swal","fire","confirmButtonText","confirmButtonColor","padding","background","backdrop","connectSockets","onConnectSocket","label","RoutePage","isInSignupPage","prevProps","location","path","exact","render","routerProps","component","BoardPage","InboxPage","pathname","withRouter","BurgerMenu","menuOpen","chuckJoke","closeMenu","handleLogout","onOpenMenu","right","onStateChange","handleStateChange","activeClassName","toggleClick","logo","setTimeout","createBrowserHistory","updatedRoom","audio","Audio","audioNotification","play","NavBar","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","currContact","rooms","composeEnhancers","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d142d00d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sp-tune.a3eeb710.mp3\";","module.exports = __webpack_public_path__ + \"static/media/loading.ecf90307.svg\";","module.exports = __webpack_public_path__ + \"static/media/friends.e8f88cde.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.251fc800.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.70454fa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.21df9a01.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.15b12873.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-star.d1d08460.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.7dc6e5d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/paint.7eefbfe1.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-orange.9f89683d.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-pink.5dca2b20.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-yellow.5bd94ad1.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-blue.edf66db8.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-green.d3c3573a.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.926d5c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/petek-logo.e7a6391d.png\";","import io from 'socket.io-client';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/' :\r\n    '//localhost:3030'\r\nvar socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit,\r\n}\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb)\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb)\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    \r\n    socket.emit(eventName, data)\r\n}\r\n\r\n","function save(key, value) {\r\n    let item = JSON.stringify(value);\r\n    localStorage.setItem(key, item);\r\n}\r\nfunction load(key) {\r\n    let item = localStorage.getItem(key)\r\n    let value = JSON.parse(item);\r\n    return value;\r\n}\r\n\r\n\r\nexport const StorageService = {\r\n    save,\r\n    load\r\n}","// import router from '@/router'\r\n// import store from '@/store'\r\n\r\nimport Axios from 'axios';\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nconst BASE_URL = process.env.NODE_ENV !== 'development'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nexport const HttpService =  {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        const res = await axios({\r\n            method,\r\n            url: `${BASE_URL}${endpoint}`,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            return false\r\n            // throw new Error('error:  http.service page')\r\n            // router.push('/');\r\n        }\r\n    }\r\n}\r\n\r\n","// import { UtilService } from './UtilService'\r\nimport { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\nimport avatarImg from '../assets/png/user.png'\r\n\r\n\r\n// var USER = { userName: 'Ramus', fullName: 'Rami Davidov', password: '123456', friends: [] };\r\nconst KEY = 'user';\r\n\r\n//if func will stay like that we should change the name (getById)\r\nasync function getById() { \r\n    var USER = StorageService.load(KEY);\r\n    console.log('in service? dono');\r\n    \r\n    if(!USER) return\r\n    USER = await HttpService.get(`user/${USER._id}`)\r\n    return USER \r\n\r\n}\r\nasync function signUp(credentials) {\r\n    let USER = {\r\n        userName: credentials.userName,\r\n        fullName: credentials.fullName,\r\n        password: credentials.password,\r\n        pinnedNotes: [],\r\n        notifications: [],\r\n        pinnedNotes : [],\r\n        imgUrl: credentials.imgUrl ? credentials.imgUrl : avatarImg,\r\n        joinedAt: Date.now(),\r\n        friends:[]\r\n    };\r\n    console.log('USER', USER);\r\n    \r\n    USER = await HttpService.post('auth/signup', USER)\r\n    StorageService.save(KEY, USER);\r\n    // getUser()\r\n    return USER;\r\n}\r\n\r\nasync function login(credentials) {\r\n    const USER = await HttpService.post('auth/login', credentials)\r\n    if (!USER) return\r\n    StorageService.save(KEY, USER);\r\n    return USER;\r\n}\r\n\r\n\r\nasync function logout() {\r\n    localStorage.removeItem(KEY)\r\n    const msg = await HttpService.post('auth/logout');\r\n    return (msg)\r\n}\r\n\r\nasync function update(user) {\r\n    const updatedUser = await HttpService.put(`user/${user._id}`, user)\r\n    StorageService.save(KEY, updatedUser);\r\n    return updatedUser\r\n}\r\n\r\nasync function getMinimalUser(_id, imgUrl){\r\n    return{\r\n        _id,\r\n        imgUrl\r\n    }\r\n}\r\n\r\nexport const UserService = {\r\n    getById,\r\n    signUp,\r\n    update,\r\n    login,\r\n    logout,\r\n    getMinimalUser\r\n}","import { UserService } from '../services/UserService'\r\n\r\nexport function signUp(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.signUp(user);\r\n        dispatch({ type: 'SET_USER', newUser })\r\n    }\r\n}\r\nexport function login(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.login(user);\r\n        dispatch({ type: 'SET_USER', newUser })\r\n    }\r\n}\r\nexport function logout() {\r\n    const user = null\r\n    return async dispatch => {\r\n        await UserService.logout();\r\n        dispatch({ type: 'SET_USER', user })\r\n    }\r\n}\r\n\r\nexport function getUser() {\r\n    return async dispatch => {\r\n        const user = await UserService.getById();\r\n        dispatch({ type: 'GET_USER', user })\r\n    }\r\n}\r\nexport function updateUser(user) {\r\n    console.log('user in actions', user);\r\n\r\n    return async dispatch => {\r\n        const updatedUser = await UserService.update(user);\r\n        dispatch({ type: 'SET_USER', user: updatedUser })\r\n    }\r\n}\r\n\r\n\r\n//ADD Move\r\n// export function addMove(contact, amount){\r\n//     return async dispatch => {\r\n//       const user = await UserService.addMove(contact,amount);\r\n//       dispatch({ type: 'SET_USER', user })\r\n//     }\r\n// }","\r\nimport { HttpService } from './HttpService';\r\n// import { StorageService } from './StorageService';\r\n\r\n\r\n// const ROOM_KEY = 'notes';\r\n\r\n\r\n\r\nfunction query(critirea) {\r\n    const params = new URLSearchParams(critirea);\r\n    return HttpService.get(`room?${params}`);\r\n}\r\n\r\n\r\nfunction getById(filterBy) {\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]){\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        } \r\n        return HttpService.get(`room?${queryParams}`);\r\n    }\r\n}\r\n\r\n\r\n\r\n// function getById(filterBy) {\r\n//     console.log(id);\r\n//     return HttpService.get(`room/${id}`);\r\n// }\r\n\r\n\r\n\r\n\r\nfunction remove(id) {\r\n    return HttpService.delete(`room/${id}`);\r\n}\r\n\r\nasync function save(room) {\r\n    let prm;\r\n\r\n    if (room._id) prm = HttpService.put(`room/${room._id}`, room);\r\n    else {\r\n        prm = HttpService.post('room', room);\r\n    }\r\n    const res = await prm;\r\n    return res;\r\n}\r\n\r\n// function getEmptyRoom() {\r\n//     return {\r\n//         roomId: '',\r\n//         notes: [],\r\n//         createdAt: ''\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport const RoomService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n}\r\n\r\n\r\n// function getEmptyCritirea() {\r\n//     return {\r\n//         txt: '',\r\n//         searchIn: '',\r\n//         page: '',\r\n//         sortBy: ''\r\n//     }\r\n// }\r\n\r\n\r\n","import { RoomService } from '../services/RoomService'\r\n\r\n// LIST\r\nexport function loadRooms(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            const rooms = await RoomService.query(filterBy);\r\n            dispatch({ type: 'SET_ROOMS', rooms })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadRoomById(filterBy) {\r\n    console.log('filterBy in actions',filterBy);\r\n    \r\n    return async dispatch => {\r\n        try {\r\n            const room = await RoomService.getById(filterBy);\r\n            dispatch({ type: 'SET_CURR_ROOM', room })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrRoom() {\r\n    console.log('made it');\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const room = null\r\n            dispatch({ type: 'SET_CURR_ROOM', room })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveRoom(room) {\r\nconsole.log(room.notes);\r\n\r\n    return async dispatch => {\r\n        const isEdit = !!room._id;\r\n        room = await RoomService.save(room);\r\n        if (isEdit) dispatch({ type: 'SET_CURR_ROOM', room })\r\n        // dispatch({ type: 'UPDATE_ROOM', room }) \r\n        else dispatch({ type: 'ADD_ROOM', room })\r\n        return room;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteRoom(id) {\r\n    return async dispatch => {\r\n        await RoomService.remove(id);\r\n        dispatch({ type: 'DELETE_ROOM', id })\r\n    }\r\n}","import axios from 'axios';\r\n\r\n\r\n\r\nexport const UtilService = {\r\n    makeId,\r\n    getRandomChuck\r\n    // getRandomMeme\r\n}\r\n\r\nfunction makeId(length = 12) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nasync function getRandomChuck(){\r\n    const res = await axios.get(`https://api.chucknorris.io/jokes/random`);\r\n    return res.data.value\r\n}\r\n// async function getRandomMeme(){\r\n//     const res = await axios.get(`https://meme-api.herokuapp.com/gimme/dankmemes/1`);\r\n//      let imgObj = {imgUrl:res.data.memes[0].url, imgHeader:res.data.memes[0].title }\r\n//      return imgObj\r\n// }","import { UtilService } from './UtilService'\r\nimport { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\n\r\n\r\nconst CONTACT_KEY = 'contacts';\r\n\r\nvar contacts = [\r\n    {\r\n        \"_id\": \"aa56640269f443a5d64b32ca\",\r\n        \"fullName\": \"Eyal Golan\",\r\n        \"userName\": \"Eyalush\",\r\n        \"friends\": []\r\n    },\r\n    {\r\n        \"_id\": \"ba56640269f443a5d64b32cb\",\r\n        \"fullName\": \"Omer Adam\",\r\n        \"userName\": \"Omerush\",\r\n        \"friends\": []\r\n    },\r\n    {\r\n        \"_id\": \"ca56640269f443a5d64b32cc\",\r\n        \"fullName\": \"Zohar Argov\",\r\n        \"userName\": \"Ha Melech\",\r\n        \"friends\": []\r\n    }\r\n];\r\n\r\n// function sort(arr) {\r\n//     return arr.sort((a, b) => {\r\n//         if (a.userName.toLocaleLowerCase() < b.userName.toLocaleLowerCase()) {\r\n//             return -1;\r\n//         }\r\n//         if (a.userName.toLocaleLowerCase() > b.userName.toLocaleLowerCase()) {\r\n//             return 1;\r\n//         }\r\n\r\n//         return 0;\r\n//     })\r\n// }\r\n\r\n// function query(filterBy = null) {\r\n//     return new Promise((resolve, reject) => {\r\n//         var contactsToReturn = StorageService.load(CONTACT_KEY);\r\n//         if (!contactsToReturn || !contactsToReturn.length) {\r\n//             contactsToReturn = [...contacts]\r\n//             StorageService.save(CONTACT_KEY, contactsToReturn)\r\n//         }\r\n//         contacts = [...contactsToReturn]\r\n//         if (filterBy && filterBy.term) {\r\n//             contactsToReturn = filter(filterBy.term)\r\n//         }\r\n//         contactsToReturn ? resolve(sort(contactsToReturn)) : reject(`Contacts not found!`)\r\n//     })\r\n// }\r\nfunction query(filterBy) {\r\n    // if (!filterBy.term) return []\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]) {\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        }\r\n        return HttpService.get(`user?${queryParams}`);\r\n    }\r\n    // return HttpService.get('user');\r\n}\r\n\r\n\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        // console.log('(edit)Contacts after replace ', contacts)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    // console.log('add contact')\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = UtilService.makeId()\r\n        contacts.push(contact)\r\n        // console.log('(ADD)Contacts after push ', contacts)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    // console.log('save contact', contact)\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        fullName: '',\r\n        userName: '',\r\n    }\r\n}\r\n\r\n// function filter(term) {\r\n//     term = term.toLocaleLowerCase()\r\n//     return contacts.filter(contact => {\r\n//         return contact.userName.toLocaleLowerCase().includes(term) ||\r\n//             contact.fullName.toLocaleLowerCase().includes(term)\r\n//     })\r\n// }\r\n\r\nexport const ContactService = {\r\n    query,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}\r\n","import { ContactService } from '../services/ContactService'\r\n\r\n// LIST\r\nexport function loadContacts(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            const contacts = await ContactService.query(filterBy);\r\n            dispatch({ type: 'SET_CONTACTS', contacts })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadContactById(id) {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = await ContactService.getContactById(id);\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrContact() {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = null\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveContact(contact) {\r\n    return async dispatch => {\r\n        const isEdit = !!contact._id\r\n        contact = await ContactService.saveContact(contact);\r\n        if (isEdit) dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        else dispatch({ type: 'ADD_CONTACT', contact })\r\n        return contact;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', id })\r\n    }\r\n}\r\n","import loading from \"../assets/svg/loading.svg\";\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst Loading = () => {\r\n    return <div>\r\n         <img src={loading} alt=\"loading\" className=\"loading\"/>\r\n    </div>;\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport avatarImg from '../../assets/png/user.png'\r\nimport Loading from \"../Loading\";\r\n\r\n\r\nexport const AvatarEdit = (props) => {\r\n\r\n  // var [{imgUrl}] = useState(props)\r\n  const { imgUrl, isLoading } = props\r\n  return <div className=\"avatar-edit\">\r\n    <label>\r\n      <input type=\"file\" onChange={(ev) => props.onUploadImg(ev)} hidden />\r\n      {isLoading ? <Loading /> : <img src={imgUrl ? imgUrl : avatarImg} alt=\"\" className=\"avatar avatar-m\" resizeMode=\"contain\" />}\r\n    </label>\r\n  </div>;\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport addFriendImg from '../assets/svg/friends.svg'\r\nimport friendReqSent from '../assets/svg/ok.svg'\r\n\r\n\r\nexport default ({ contact, onAddFriend, loggedinUser, moveToRoom }) => {\r\n\r\n\r\n    const [isFriendSent, setIsFriendSent] = useState(false)\r\n    const [isFriend, setIsFriend] = useState(false)\r\n    const [roomId, setRoomId] = useState('')\r\n\r\n    useEffect(() => {\r\n        // console.log('cmon',roomId);\r\n        if (!loggedinUser) return\r\n        let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n        if (friend) {\r\n            setIsFriend(true)\r\n            setRoomId(friend.roomId)\r\n        } else {\r\n            setIsFriend(false)\r\n        }\r\n    },[loggedinUser, contact._id]);\r\n\r\n    const toggleIsFriend = (ev) => {\r\n        ev.preventDefault()\r\n        setIsFriendSent(true)\r\n\r\n    }\r\n\r\n    const handelClick = (ev) => {\r\n        onAddFriend(ev, contact._id);\r\n        toggleIsFriend(ev)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) moveToRoom(ev,roomId) }}>\r\n            <img src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" />\r\n            <div className=\"user-name-container\">\r\n                <span>Full Name: {contact.fullName}</span>\r\n                <span>User Name: {contact.userName}</span>\r\n            </div>\r\n            {!contact.roomId &&\r\n                <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n                    alt=\"\"\r\n                    className=\"add-friend-img\"\r\n                    onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}\r\n        </div>\r\n    );\r\n};","import React from 'react'\r\n\r\nimport ContactPreview from './ContactPreview'\r\nexport default (props) => {\r\n    const { onAddFriend, loggedinUser, onMoveToRoom } = props\r\n\r\n    // const getRoomId = () => {\r\n    //     const roomId = contact.friends.find(friend => friend._id === loggedinUser._id).roomId\r\n    //     console.log(roomId);\r\n    //     return roomId\r\n    // }\r\n\r\n    return (\r\n        <div className=\"contact-list\">\r\n            {props.contacts.map(contact => {\r\n                return (\r\n                    <ContactPreview\r\n                        contact={contact}\r\n                        onAddFriend={onAddFriend}\r\n                        loggedinUser={loggedinUser}\r\n                        key={contact._id}\r\n                        moveToRoom={onMoveToRoom}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nexport default class Filter extends Component {\r\n    state = { term: '' };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...props.filterBy };\r\n    }\r\n\r\n    onChangeHandler = (ev) => {\r\n        \r\n        const { value, name } = ev.target;\r\n        \r\n        this.setState({ [name]: value }, () => {\r\n            this.props.onFilter({ ...this.state });\r\n        });\r\n    };\r\n    onKeyHandler = (ev) => {\r\n        if (ev.keyCode === 13) {\r\n            ev.preventDefault()\r\n            this.props.moveToContact()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {placeHolder} = this.props\r\n        \r\n        return (\r\n            <form>\r\n                <DebounceInput\r\n                    minLength={0}\r\n                    className=\"filter-input\"\r\n                    debounceTimeout={300}\r\n                    type=\"text\"\r\n                    placeholder={placeHolder ? placeHolder: 'Search Contacts'}\r\n                    onChange={this.onChangeHandler}\r\n                    name=\"term\"\r\n                    value={this.state.term}\r\n                    onKeyDown={this.onKeyHandler}\r\n                     />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","function uploadImg(ev) {\r\n    const CLOUD_NAME = \"tamir\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n        if (ev.target) {\r\n            formData.append('file', ev.target.files[0])\r\n        } else {\r\n            formData.append('file', ev)\r\n        }\r\n    formData.append('upload_preset', 'u1inrfbp'); // second parameter is the upload preset\r\n\r\n    return fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData,\r\n            secure:true\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport default {\r\n    uploadImg\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUser } from '../actions/UserActions';\r\nimport { updateUser } from '../actions/UserActions';\r\nimport { loadContacts } from '../actions/ContactActions';\r\n\r\nimport {AvatarEdit} from '../cmps/User/AvatarEdit'\r\nimport ContactList from '../cmps/ContactList'\r\nimport Filter from '../cmps/Filter'\r\n\r\nimport SocketService from '../services/SocketService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    filterBy: { term: '' },\r\n    isLoading: false\r\n  }\r\n  componentDidMount() {\r\n    if (!this.props.user) this.props.history.push(\"/signup\")\r\n    this.loadContacts()\r\n  }\r\n  loadContacts = async () => {\r\n    await this.props.loadContacts(this.state.filterBy);\r\n  };\r\n\r\n  onUploadImg = async (ev) => {\r\n    let user = this.props.user\r\n    this.setState({ isLoading: true })\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n    this.props.updateUser(updatedUser)\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\nonAddFriend = (ev,friendId) => {\r\n  \r\n  ev.preventDefault()\r\n  const {user} = this.props\r\n  SocketService.emit('Add Friend', {friendId, _id: user._id, userName:user.userName, fullName:user.fullName, type:'NotificationFriend',imgUrl:user.imgUrl })\r\n}\r\n\r\n  onFilterHandler = (filterBy) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        filterBy: {\r\n          ...prevState.filterBy,\r\n          ...filterBy,\r\n        },\r\n      };\r\n    }, this.loadContacts);\r\n\r\n  };\r\n\r\n  onMoveToRoom = (ev,roomId) => {   \r\n    console.log(ev);    \r\n    ev.stopPropagation()\r\n    this.props.history.push(`/board/${roomId}`);\r\n}\r\n\r\n  capitalize = (name) => {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n  };\r\n\r\n  render() {\r\n    const { user, contacts } = this.props;\r\n    const { isLoading } = this.state\r\n\r\n    return (\r\n      <div>\r\n        {user &&\r\n          <div className=\"home-page\">\r\n            {user.userName && <h2>Hi There {this.capitalize(user.userName)}</h2>}\r\n            <AvatarEdit imgUrl={user.imgUrl} onUploadImg={this.onUploadImg} isLoading={isLoading} />\r\n            <h6>Let's add contacts veze</h6>\r\n            <Filter filterBy={this.state.filterBy} onFilter={this.onFilterHandler} />\r\n            {contacts && <ContactList onMoveToRoom={this.onMoveToRoom} contacts={contacts} onAddFriend={this.onAddFriend} loggedinUser={user} />}\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  updateUser,\r\n  loadContacts,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ notification,onApprove,onDecline }) => {    \r\n    return (\r\n        <div className=\"notification-friend\">\r\n            <p>{notification.fullName} wants to start a board with you</p>\r\n            <button onClick={()=>onApprove(notification)}>Approve</button>\r\n            <button onClick={()=>onDecline(notification)}>Decline</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ notification }) => {\r\n    return (\r\n        <div className=\"notification-response\">\r\n            <p>{notification.fullName} has {notification.isApproved ? 'Approved' : 'Declined'} your request</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default ({ notification, onDeleteNotification }) => {\r\n\r\n    const {userName, roomId} = notification\r\n\r\n    return (\r\n        <Link to={`/board/${roomId}`} >\r\n        <div className=\"notification-note\" onClick={onDeleteNotification}>\r\n            <p>{userName} just Added A note! go check it out</p>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationFriend from './NotificationFriend'\r\nimport NotificationResponse from './NotificationResponse'\r\nimport NotificationNote from './NotificationNote'\r\nimport Moment from 'react-moment';\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\n\r\n\r\n\r\nexport default ({ notification,onApprove, onDecline, onDeleteNotification }) => {\r\n    const cmps = {\r\n        NotificationFriend,\r\n        NotificationResponse,\r\n        NotificationNote\r\n    }\r\n  \r\n\r\n    const NotificationType = cmps[notification.type];\r\n    return (\r\n        <div className=\"notification-preview\">\r\n            <div className=\"notification-header\">\r\n                <img src={notification.imgUrl} className=\"avatar avatar-xs\" alt=\"User Avatar\"/>\r\n                <div>\r\n            <NotificationType notification={notification} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}/>\r\n            <Moment fromNow>{notification.createdAt}</Moment>\r\n                </div>\r\n            <img src={xMark} onClick={()=> onDeleteNotification(notification)} className=\"x-mark\" alt=\"Close\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationPreview from './NotificationPreview'\r\n\r\nexport default ({notifications, onApprove, onDecline,onDeleteNotification}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"notification-list\">\r\n            {notifications.map(notification => {\r\n                return (\r\n                    <NotificationPreview notification={notification} key={notification._id} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}  />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport SocketService from '../services/SocketService'\r\n\r\n\r\nimport NotificationList from '../cmps/Notification/NotificationList';\r\n\r\nconst InboxPage = (props) => {\r\n  \r\n  const { user } = props\r\n\r\n  const onApprove = (notification) => {\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"approve\", { notification,user });\r\n\r\n  }\r\n  const onDecline = (notification) => {\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"decline\", { notification, user });\r\n  }\r\n\r\n  const onDeleteNotification = (notification) => {\r\n    const idx = user.notifications.findIndex(\r\n      currNotification => currNotification._id === notification._id\r\n    );\r\n    user.notifications.splice(idx, 1);\r\n      props.updateUser(user)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    (!user) ? <h1>Inbox is empty</h1> :\r\n      <div>\r\n        {user && <div>\r\n          {!!user.notifications.length && <NotificationList notifications={user.notifications} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification} ></NotificationList>}\r\n        </div>\r\n        }\r\n      </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    room: state.room.currRoom,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxPage);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadContacts } from '../actions/ContactActions';\r\n\r\nimport Filter from '../cmps/Filter'\r\nimport ContactList from '../cmps/ContactList'\r\n\r\nclass ContactPage extends Component {\r\n    state = {\r\n        filterBy: { term: '', roomId: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.loadContacts()\r\n    }\r\n\r\n    onMoveToRoom = (ev,roomId) => {   \r\n        console.log(ev);    \r\n        ev.stopPropagation()\r\n        this.props.history.push(`/board/${roomId}`);\r\n    }\r\n    loadContacts = async () => {\r\n        await this.props.loadContacts(this.state.filterBy);\r\n    };\r\n\r\n    onFilterHandler = (filterBy) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                filterBy: {\r\n                    ...prevState.filterBy,\r\n                    ...filterBy,\r\n                },\r\n            };\r\n        }, this.loadContacts);\r\n    };\r\n\r\n    handleKeyPress = () => {\r\n        if (this.props.contacts.length === 1) {\r\n            let id = this.props.contacts[0]._id\r\n            this.props.history.push(`/board/${id}`);\r\n        }\r\n    }\r\n\r\n \r\n\r\n    render() {\r\n        const { contacts, user } = this.props\r\n        return (\r\n            <div>\r\n                {user && <div>\r\n                    <Filter\r\n                        filterBy={this.state.filterBy}\r\n                        onFilter={this.onFilterHandler}\r\n                        moveToContact={this.handleKeyPress}/>\r\n                    {!!contacts && <ContactList onMoveToRoom={this.onMoveToRoom} loggedinUser={user} contacts={user.friends}></ContactList>}\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage);","import React, { useState } from 'react';\r\nimport {\r\n    FloatingMenu,\r\n    MainButton,\r\n    ChildButton,\r\n} from 'react-floating-button-menu';\r\nimport MdAdd from '@material-ui/icons/Add';\r\nimport MdClose from '@material-ui/icons/Clear';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\n// import SvgIcon from '@material-ui/core/SvgIcon';    //PROBABLY NOT NEEDED\r\n// import styled from 'styled-components' //PROBABLY NOT NEEDED\r\n\r\nexport default ({ setNoteType, setNoteInputType, setNoteData }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    return (\r\n        <FloatingMenu\r\n            slideSpeed={500}\r\n            direction=\"up\"\r\n            spacing={8}\r\n            isOpen={isOpen}\r\n            className=\"button-menu\"\r\n        >\r\n            <MainButton\r\n                iconResting={<MdAdd style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                iconActive={<MdClose style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                backgroundColor=\"black\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                size={56}\r\n            />\r\n            <ChildButton\r\n                icon={<TextFieldsIcon style={{ fontSize: 20, fill: '#51a255' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteText'); setIsOpen(!isOpen); setNoteInputType('InputText') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ImageIcon style={{ fontSize: 20, fill: '#28b5f2' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteImg'); setIsOpen(!isOpen); setNoteInputType('InputImg') }}\r\n            />\r\n            <ChildButton\r\n                icon={<VideocamIcon style={{ fontSize: 20, fill: '#ff0000' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteVideo'); setIsOpen(!isOpen); setNoteInputType('InputVideo') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ListIcon style={{ fontSize: 20, fill: '#ffa350' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteTodo'); setIsOpen(!isOpen); setNoteInputType('InputTodo'); setNoteData([])}}\r\n            />\r\n        </FloatingMenu>\r\n    )\r\n}\r\n\r\n\r\n// export default class ButtonMenu extends Component {\r\n//     state = {\r\n//         isOpen: false,\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <FloatingMenu\r\n//                 slideSpeed={500}\r\n//                 direction=\"down\"\r\n//                 spacing={8}\r\n//                 isOpen={this.state.isOpen}\r\n//             >\r\n//                 <MainButton\r\n//                     iconResting={<MdAdd style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n//                     iconActive={<MdClose style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n//                     backgroundColor=\"black\"\r\n//                     onClick={() => this.setState({ isOpen: !this.state.isOpen })}\r\n//                     size={56}\r\n//                 />\r\n//                 <ChildButton\r\n//                     icon={<TextFieldsIcon style={{ fontSize: 20, fill: '#51a255' }} nativecolor=\"black\" />}\r\n//                     backgroundColor=\"white\"\r\n//                     size={40}\r\n//                     onClick={() => console.log('First button clicked')}\r\n//                 />\r\n//                 <ChildButton\r\n//                     icon={<ImageIcon style={{ fontSize: 20, fill: '#28b5f2' }} nativecolor=\"black\" />}\r\n//                     backgroundColor=\"white\"\r\n//                     size={40}\r\n//                 />\r\n//                 <ChildButton\r\n//                     icon={<VideocamIcon style={{ fontSize: 20, fill: '#ff0000'}} nativecolor=\"black\" />}\r\n//                     backgroundColor=\"white\"\r\n//                     size={40}\r\n//                 />\r\n//                 <ChildButton\r\n//                     icon={<ListIcon style={{ fontSize: 20, fill: '#ffa350' }} nativecolor=\"black\" />}\r\n//                     backgroundColor=\"white\"\r\n//                     size={40}\r\n//                 />\r\n//             </FloatingMenu>\r\n//         )\r\n//     }\r\n// }\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-text\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <p>{note.data}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-img\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <img src={note.data} alt={note.data} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    const formattedVidLink = () => {\r\n        return 'https://www.youtube.com/embed/' + note.data\r\n    }\r\n    return (\r\n        <div className=\"note-video\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <iframe width=\"100%\" allow=\"fullscreen\" src={formattedVidLink()} title=\"Video Player\"></iframe>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, createRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport xmark from '../../assets/svg/cross.svg'\r\nimport ArrowIcon from '../../assets/svg/arrow.svg'\r\n\r\nimport { saveRoom } from '../../actions/RoomActions';\r\n//TODO: IMPROVE EDIT INPUT AND MINUS UI +++ reflect trough socket\r\n\r\nconst NoteTodo = ({ note, saveRoom, room, userId, isEdit, currTodoIdx, setCurrTodoIdx, setIsNewTodo, isNewTodo }) => {\r\n    const [editedTodo, setEditedTodo] = useState('');\r\n    const [newTodo, setNewTodo] = useState('');\r\n    const editInputRef = createRef();\r\n    const newTodoInputRef = createRef()\r\n\r\n    const toggleIsDone = async (idx) => {\r\n        if (isEdit) return\r\n        note.data[idx].isDone = !note.data[idx].isDone\r\n        await saveRoom(room)\r\n        SocketService.emit(\"roomUpdated\", { room, userId });\r\n    }\r\n\r\n\r\n    const addTodo =  () => {\r\n        \r\n        let todoToAdd = { text: newTodo, isDone: false }\r\n        \r\n         note.data.push(todoToAdd);\r\n        setIsNewTodo(false)\r\n        setNewTodo('')\r\n        newTodoInputRef.current.value = ''\r\n    };\r\n    \r\n    const removeTodo = (idx) => {\r\n        note.data.splice(idx, 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (editInputRef.current) editInputRef.current.focus()\r\n        if (currTodoIdx !== '' && editInputRef.current) note.data[currTodoIdx].text = editedTodo\r\n    }, [editedTodo, currTodoIdx],)\r\n\r\n    return (\r\n        <div className=\"note-todo\">\r\n            <div className=\"todo-header\">\r\n                {note.header && <h4>{note.header}</h4>}\r\n                {isEdit && <img src={PlusIcon} className=\"new-todo-btn\" onClick={() => { setIsNewTodo(true) }} />}\r\n            </div>\r\n            <ul>\r\n                {!!note.data.length && note.data.map((todo, idx) => {\r\n                    return (\r\n                        <li key={todo.text} onClick={() => {\r\n                            if (isEdit) {\r\n                                setCurrTodoIdx(idx);\r\n                                setEditedTodo(todo.text)\r\n                            }\r\n                        }}>\r\n                            {(currTodoIdx !== idx) && <span className={todo.isDone ? 'done' : ''} onClick={(ev) => toggleIsDone(idx)}>{todo.text}</span>}\r\n                            {isEdit && <img src={xmark} className=\"remove-todo-btn\" onClick={() => removeTodo(idx)} />}\r\n                            {(isEdit && currTodoIdx === idx) && <input type=\"text\" value={editedTodo} ref={editInputRef} onChange={(e) => { setEditedTodo(e.target.value); }} />\r\n                            }\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            {isNewTodo && <div>\r\n                <input type=\"text\" placeholder=\"New Todo\" ref={newTodoInputRef} onChange={e => setNewTodo(e.target.value)} />\r\n                <img src={ArrowIcon} className=\"add-todo-btn\" onClick={() =>  addTodo() } />\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    saveRoom,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTodo);","import React, { useState, useEffect } from 'react';\r\nimport emptyStar from '../assets/svg/empty-star.svg'\r\nimport star from '../assets/svg/star.svg'\r\nimport colorPallete from '../assets/svg/paint.svg'\r\nimport splashOrange from '../assets/svg/splash-orange.svg'\r\nimport splashPink from '../assets/svg/splash-pink.svg'\r\nimport splashYellow from '../assets/svg/splash-yellow.svg'\r\nimport splashBlue from '../assets/svg/splash-blue.svg'\r\nimport splashGreen from '../assets/svg/splash-green.svg'\r\n\r\nexport default ({ togglePinned, note, user, setNoteColor }) => {\r\n    const [isPalleteOpen, setIsPalleteOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n    }, [note])\r\n\r\n    return (\r\n        <div className=\"features-container\">\r\n            <img className=\"pin-btn\" src={user.pinnedNotes.find(id => { return id === note._id }) ? star : emptyStar} alt=\"Pin Note\" onClick={() => togglePinned(note)} />\r\n            <div className=\"color-pallete\">\r\n                <img src={colorPallete} alt=\"Change Color\" className=\"color-pallete-icon\" onClick={() => setIsPalleteOpen(!isPalleteOpen)} />\r\n                {isPalleteOpen && <div className=\"colors-container\">\r\n                    <img src={splashOrange} className=\"color1\" onClick={() => { setNoteColor('#ffa350'); setIsPalleteOpen(false) }} />\r\n                    <img src={splashPink} className=\"color2\" onClick={() => { setNoteColor('#f78888'); setIsPalleteOpen(false) }} />\r\n                    <img src={splashYellow} className=\"color3\" onClick={() => { setNoteColor('#f3d250'); setIsPalleteOpen(false) }} />\r\n                    <img src={splashBlue} className=\"color4\" onClick={() => { setNoteColor('#90ccf4'); setIsPalleteOpen(false) }} />\r\n                    <img src={splashGreen} className=\"color5\" onClick={() => { setNoteColor('#4caf50'); setIsPalleteOpen(false) }} />\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//save button is a temp solution to onSubmit with enter key","import React, { useEffect, useState, createRef } from 'react'\r\nimport Moment from 'react-moment';\r\n\r\nimport xMark from '../assets/svg/x-mark.svg'\r\nimport editIcon from '../assets/svg/edit.svg'\r\nimport saveIcon from '../assets/svg/save.svg'\r\n\r\nimport NoteText from './Note/NoteText'\r\nimport NoteImg from './Note/NoteImg'\r\nimport NoteVideo from './Note/NoteVideo'\r\nimport NoteTodo from './Note/NoteTodo'\r\nimport Features from '../cmps/Features'\r\n\r\n\r\nexport default ({ note, user, removeNote, saveRoomChanges, togglePinned, isPinned }) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [isNewTodo, setIsNewTodo] = useState(false);\r\n    const [currTodoIdx, setCurrTodoIdx] = useState('');\r\n\r\n    const cmps = {\r\n        NoteText,\r\n        NoteImg,\r\n        NoteVideo,\r\n        NoteTodo\r\n    }\r\n    const NoteType = cmps[note.type];\r\n\r\n    const noteRef = createRef();\r\n\r\n    const setNoteColor = (color) => {\r\n        note.bgColor = color\r\n        saveRoomChanges()\r\n    }\r\n\r\n    const paintNote = () => {\r\n        if (note.bgColor) noteRef.current.style.backgroundColor = note.bgColor\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        paintNote()\r\n        if(note.createdBy._id !== user._id) return\r\n        if (note.createdBy.imgUrl !== user.imgUrl){\r\n            note.createdBy.imgUrl = user.imgUrl\r\n            saveRoomChanges()\r\n        } \r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        paintNote()\r\n    }, [note.bgColor]);\r\n\r\n    return (\r\n        <div className=\"note-preview\" >\r\n            <div className={user._id === note.createdBy._id ? 'user-container' : 'friend-container'}>\r\n                <img src={note.createdBy.imgUrl} alt=\"Note creator avatar\" className=\"avatar avatar-s\" />\r\n                <div className=\"note-container\" ref={noteRef}>\r\n                    <div className=\"note-header\">\r\n                        <div>\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && !isEdit) && <img src={editIcon} alt=\"Edit note\" className=\"edit-btn\" onClick={() => setIsEdit(true)} />}\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && isEdit) && <img src={saveIcon} alt=\"Save changes\" className=\"save-btn\" onClick={() => { setIsEdit(false); saveRoomChanges(); setCurrTodoIdx('') }} />}\r\n                            <img src={xMark} className=\"remove-btn\" onClick={() => removeNote(note._id)} alt=\"Delete\" />\r\n                        </div>\r\n                        <Moment format=\"MM/DD/YY ,HH:mm\">{note.createdAt}</Moment>\r\n                    </div>\r\n                    <NoteType note={note} user={user} isEdit={isEdit} currTodoIdx={currTodoIdx} setCurrTodoIdx={setCurrTodoIdx} setIsNewTodo={setIsNewTodo} isNewTodo={isNewTodo} />\r\n                    <Features togglePinned={togglePinned} isPinned={isPinned} note={note} user={user} setNoteColor={setNoteColor} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport NotePreview from './NotePreview'\r\nimport Loading from '../cmps/Loading'\r\n\r\nexport default ({ notes, user, removeNote,  saveRoomChanges, togglePinned, isPinned, setNoteType }) => {\r\n    \r\n    const [notesForDisplay, setNotesForDisplay] = useState([])\r\n\r\n    useEffect(() => {\r\n        \r\n        const fixedNotes = []\r\n        notes.map(note =>{\r\n            user.pinnedNotes.find(id =>{return id === note._id })  ? \r\n            fixedNotes.unshift(note) : fixedNotes.push(note)       \r\n        })\r\n     \r\n        setNotesForDisplay(fixedNotes)\r\n        }, [notes])\r\n\r\n    return (\r\n        \r\n        <div className=\"note-list\" onClick={()=>setNoteType('')}>\r\n            {notesForDisplay.length ? notesForDisplay.map(note => {\r\n                return (\r\n                    <NotePreview note={note} key={note._id} user={user} removeNote={removeNote} saveRoomChanges={saveRoomChanges} togglePinned={togglePinned} isPinned={isPinned} />\r\n                )\r\n            }) : <Loading/>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default ({ setNoteData, setNoteHeader, handleSubmit }) => {\r\n\r\n\r\n    return (\r\n        <form className=\"input-text\" onSubmit={handleSubmit}>\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input className=\"input-data\" placeholder=\"Say Something\" type=\"text\" onChange={e => setNoteData(e.target.value)} />\r\n            <button hidden>Save</button>\r\n        </form>\r\n    )\r\n}\r\n//save button is a temp solution to onSubmit with enter key","import React, { createRef } from 'react';\r\n\r\nimport uploadImg from '../assets/svg/upload.svg'\r\n\r\nexport default ({ setNoteHeader, onUploadImg }) => {\r\n\r\n    const inputRef = createRef();\r\n\r\n\r\n    const onUploadImgHandler = () => {\r\n        inputRef.current.click()\r\n        // setNoteType('NoteImg');\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-img\">\r\n            <input className=\"input-header\" placeholder=\"Img Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input type=\"file\" onChange={(ev) => { onUploadImg(ev); }} ref={inputRef} hidden />\r\n            <img src={uploadImg} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { onUploadImgHandler() }} />\r\n        </section >\r\n    );\r\n};\r\n\r\n","import axios from 'axios';\r\n//AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM RAN'S KEY\r\n//AIzaSyD09tfK-pjT-G6kEZmXRfeicoKR-neGKNU alt key\r\nconst API_KEY = 'AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM' \r\nconst limit = 15;\r\n\r\n\r\nexport const YoutubeApiService = {\r\n    youtubeQuery\r\n}\r\n\r\n\r\nasync function youtubeQuery(query) {\r\n    try {\r\n        const res = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&videoEmbeddable=true&type=video&key=${API_KEY}&q=${query}&maxResults=${limit}`);\r\n        return res.data.items;\r\n    } catch (err) {\r\n        console.log('Error while fetching videos',err); \r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { YoutubeApiService } from '../services/YoutubeApiService'\r\n\r\nimport PlusIcon from '../assets/svg/plus.svg'\r\n\r\nexport default ({ addVideo, setNoteHeader }) => {\r\n    const [videos, setVideos] = useState([]);\r\n\r\n    const searchYoutubeVideos = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setVideos([])\r\n            return\r\n        }\r\n        const youtubeVideos = await YoutubeApiService.youtubeQuery(queryStr);\r\n        setVideos(youtubeVideos)\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-video\">\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n            className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Video\"\r\n                onChange={e => searchYoutubeVideos(e.target.value)}\r\n            />\r\n            {!!videos.length &&<h1>Add video!</h1>}\r\n            {!!videos.length && videos.map(video => {\r\n                return (\r\n                    <div className=\"video-card\" key={video.id.videoId}>\r\n                        <img src={video.snippet.thumbnails.default.url} alt=\"Video Thumbnail\" />\r\n                        <h6>{video.snippet.title}</h6>\r\n                        <img src={PlusIcon} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { addVideo(video.id.videoId); setVideos([]) }} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </section >\r\n    );\r\n};","import React, { useState } from 'react'\r\n\r\nimport xMark from '../assets/svg/x-mark.svg'\r\nimport PlusIcon from '../assets/svg/plus.svg'\r\nimport saveIcon from '../assets/svg/save.svg'\r\n\r\n\r\nexport default ({ setNoteHeader, setNoteData, handleSubmit, noteData }) => {\r\n    const [currTodo, setCurrTodo] = useState('');\r\n\r\n    const textInput = React.useRef();\r\n\r\n    const addTodo = () => {\r\n        setNoteData([\r\n            ...noteData, {\r\n                text: currTodo,\r\n                isDone: false\r\n            }])\r\n        setCurrTodo('')\r\n        textInput.current.value = ''\r\n    };\r\n\r\n    const handleRemoveTodo = (todoIdx) => {\r\n        setNoteData(noteData.filter((todo, idx) => todoIdx !== idx))\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-todo\">\r\n            <input type=\"text\" placeholder=\"Header?\" className=\"input-header\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <ul>\r\n                {!noteData.length && <h5>No Todo's Added</h5>}\r\n                {!!noteData.length && noteData.map((todo, idx) => {\r\n                    return (\r\n                        <li className=\"todo\" key={todo.text}>\r\n                            <span>{todo.text}</span>\r\n                            <img src={xMark} onClick={() => handleRemoveTodo(idx)} className=\"x-mark\" alt=\"Remove Todo\" />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <div className=\"add-todo-container\">\r\n                <input type=\"text\" placeholder=\"task?\" className=\"input-task\" ref={textInput} onChange={e => setCurrTodo(e.target.value)} />\r\n                <img src={PlusIcon} className=\"add-button\" onClick={() => addTodo()} alt=\"Add todo\" />\r\n            </div>\r\n            <img src={saveIcon} className=\"add-button\" onClick={handleSubmit} alt=\"Save\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { UtilService } from '../services/UtilService'\r\nimport SocketService from '../services/SocketService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\nimport { loadRoomById, saveRoom, resetCurrRoom } from '../actions/RoomActions';\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport ButtonMenu from '../cmps/ButtonMenu'\r\nimport NoteList from '../cmps/NoteList'\r\nimport Filter from '../cmps/Filter'\r\nimport Loading from '../cmps/Loading'\r\nimport SplashIcon from '../cmps/icons/SplashIcon'\r\n\r\nimport InputText from '../cmps/InputText'\r\nimport InputImg from '../cmps/InputImg'\r\nimport InputVideo from '../cmps/InputVideo'\r\nimport InputTodo from '../cmps/InputTodo'\r\n\r\nimport { UserService } from '../services/UserService';\r\n\r\nconst BoardPage = (props) => {\r\n    const [noteType, setNoteType] = useState('');\r\n    const [noteHeader, setNoteHeader] = useState('');\r\n    const [noteData, setNoteData] = useState('');\r\n    const [noteInputType, setNoteInputType] = useState('InputText');\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [isPinned, setIsPinned] = useState(false);\r\n    const [filterBy, setfilterBy] = useState('');\r\n\r\n\r\n    const newNote = {\r\n        header: noteHeader,\r\n        data: noteData,\r\n        type: noteType,\r\n    }\r\n\r\n    const cmps = {\r\n        InputText,\r\n        InputImg,\r\n        InputVideo,\r\n        InputTodo\r\n    }\r\n\r\n    const InputType = cmps[noteInputType];\r\n\r\n\r\n    const loadRoom = async () => {\r\n        const roomId = props.match.params.id;\r\n        await props.loadRoomById({ term: filterBy.term, roomId });\r\n    }\r\n\r\n\r\n    const saveRoomChanges = async () => {\r\n        await props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n\r\n    }\r\n\r\n\r\n    const onUploadImg = async (ev) => {\r\n        if (noteType === 'NoteImg') {\r\n            const imgUrl = await CloudinaryService.uploadImg(ev)\r\n            setNoteData(imgUrl.secure_url)\r\n            setIsUploading(true)\r\n        }\r\n\r\n    }\r\n\r\n    const onAddVideo = (videoId) => {\r\n        setNoteData(videoId)\r\n        setIsUploading(true)\r\n    }\r\n\r\n    const onFilterHandler = (filterBy) => {\r\n        setfilterBy(filterBy)\r\n    };\r\n\r\n\r\n    const onHandleSubmit = async (ev) => {\r\n        const { user } = props\r\n        if (ev) ev.preventDefault()\r\n        newNote._id = UtilService.makeId(24)\r\n        newNote.createdAt = Date.now() //maybe server side should handle it\r\n        let minimalUser = await UserService.getMinimalUser(user._id, user.imgUrl)\r\n        newNote.createdBy = minimalUser\r\n        const friend = user.friends.find(friend => { return friend.roomId === props.match.params.id })\r\n        props.room.notes.unshift(newNote)\r\n        props.saveRoom(props.room)\r\n        SocketService.emit(\"added note\", ({ room: props.room, user: props.user, friendId: friend._id }));\r\n        setNoteHeader('')\r\n        setNoteData('')\r\n        setNoteType('')\r\n        setIsUploading(false)\r\n    }\r\n\r\n    const togglePinned = (note) => {\r\n        let choosenNote = props.user.pinnedNotes.find(id => note._id === id)\r\n        !choosenNote ? props.user.pinnedNotes.push(note._id) : props.user.pinnedNotes.splice(note._id, 1)\r\n        let idx = props.room.notes.findIndex(currNote => note._id === currNote._id)\r\n        props.room.notes.splice(idx, 1, note)\r\n        props.saveRoom(props.room)\r\n        props.updateUser(props.user)\r\n    }\r\n\r\n\r\n    const removeNote = async (noteId) => {\r\n        let idx = props.room.notes.findIndex(note => note._id === noteId)\r\n        props.room.notes.splice(idx, 1)\r\n        await props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadRoom()\r\n        return () => { props.resetCurrRoom() };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if ((noteData && noteType === 'NoteImg') || noteType === 'NoteVideo') {\r\n            onHandleSubmit()\r\n        }\r\n    }, [isUploading]);\r\n\r\n    useEffect(() => {\r\n        loadRoom()\r\n    }, [filterBy]);\r\n\r\n\r\n    if (props.room) var { notes } = props.room\r\n\r\n    return (\r\n        <div className=\"board-page\">\r\n            {notes ? <div className=\"note-add\">\r\n                <Filter filterBy={filterBy} onFilter={onFilterHandler} placeHolder={\"Search for notes\"} />\r\n                {noteType && <InputType\r\n                    addVideo={onAddVideo}\r\n                    onUploadImg={onUploadImg}\r\n                    handleSubmit={onHandleSubmit}\r\n                    setNoteHeader={setNoteHeader}\r\n                    setNoteData={setNoteData}\r\n                    noteData={noteData} />}\r\n                <ButtonMenu setNoteType={setNoteType} setNoteInputType={setNoteInputType} setNoteData={setNoteData} />\r\n            </div> : <Loading />}\r\n            {notes && <div>\r\n                {!!notes.length && <NoteList notes={notes} user={props.user} removeNote={removeNote} saveRoomChanges={saveRoomChanges} togglePinned={togglePinned} setNoteType={setNoteType} isPinned={isPinned} />}\r\n            </div>}\r\n            {/* <SplashIcon className=\"splash-icon\" /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n        user: state.user.loggedinUser,\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadRoomById,\r\n    saveRoom,\r\n    resetCurrRoom,\r\n    updateUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardPage);","import React, { Component } from \"react\";\r\nimport { MDBInput } from \"mdbreact\";\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\n// import SocketService from '../services/SocketService'\r\n\r\nimport { signUp } from '../actions/UserActions'\r\nimport { login } from '../actions/UserActions'\r\nimport { getUser } from '../actions/UserActions'\r\nimport { connect } from \"react-redux\";\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n  state = {\r\n    newUser: {\r\n      userName: '',\r\n      fullName: '',\r\n      password: '',\r\n      imgUrl: '',\r\n    },\r\n    isSignUp: false,\r\n    isLoading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLoggedinUser();\r\n  }\r\n\r\n  getLoggedinUser = async () => {\r\n    await this.props.getUser()\r\n\r\n    if (this.props.user) this.props.history.push('/')\r\n  }\r\n\r\n  onChangeHandler = (ev) => {\r\n    const { value, name } = ev.target;\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        [name]: value\r\n      }\r\n    })\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({\r\n      newUser: {\r\n        userName: '',\r\n        password: ''\r\n      }\r\n    })\r\n  }\r\n\r\n  onUploadImg = async (ev) => {\r\n    this.setState({ isLoading: true })\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        imgUrl: userImgUrl.secure_url\r\n      }\r\n    })\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\n  connectSockets(id) {\r\n    this.props.onConnectSocket(id)\r\n  }\r\n\r\n  toggleSignUp = () => {\r\n    this.setState(prevState => ({\r\n      isSignUp: !prevState.isSignUp\r\n    }));\r\n  }\r\n\r\n  onHandleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n\r\n    this.state.isSignUp ?\r\n      await this.props.signUp({ ...this.state.newUser })\r\n      : await this.props.login({ ...this.state.newUser })\r\n    await this.getLoggedinUser();\r\n    if (!this.props.user) {\r\n      Swal.fire({\r\n        title: 'Wrong password or Username.',\r\n        width: 300,\r\n        confirmButtonText: \"Say what?\",\r\n        confirmButtonColor: \"yellow\",\r\n        padding: '1em',\r\n        background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n        backdrop: `\r\n          rgba(0,0,123,0.4)\r\n          url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n          left top\r\n          no-repeat\r\n        `\r\n      })\r\n      this.props.history.push(\"/signup\")\r\n      this.resetInput()\r\n      return\r\n    }\r\n    this.connectSockets(this.props.user._id)\r\n    this.props.history.push(\"/\")\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { isSignUp, isLoading } = this.state\r\n    const { imgUrl } = this.state.newUser\r\n    return (\r\n      <div className=\"signup-form\">\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          {!isSignUp && <h1>Login</h1>}\r\n          {isSignUp && <h1>SignUp</h1>}\r\n          {isSignUp && <AvatarEdit onUploadImg={this.onUploadImg} imgUrl={imgUrl} isLoading={isLoading} />}\r\n          {isSignUp && <MDBInput label=\"Full Name\" name=\"fullName\" value={this.state.newUser.fullName || ''} onChange={this.onChangeHandler} />}\r\n          <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={this.state.newUser.userName || ''} onChange={this.onChangeHandler} />\r\n          <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={this.state.newUser.password || ''} onChange={this.onChangeHandler} />\r\n          <button>{isSignUp ? 'SignUp' : 'Login'}</button>\r\n          {!isSignUp && <h2 onClick={this.toggleSignUp}>Don't Have an account? Sign Up!</h2>}\r\n          {isSignUp && <h2 onClick={this.toggleSignUp}>Head Back to Login</h2>}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signUp,\r\n  getUser,\r\n  login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from \"react\";\r\nimport { getUser } from \"./actions/UserActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport InboxPage from './pages/InboxPage'\r\n\r\nimport ContactPage from './pages/ContactPage'\r\nimport BoardPage from './pages/BoardPage'\r\nimport SignUp from './pages/SignUp'\r\n\r\nimport Loading from './cmps/Loading'\r\nclass RoutePage extends React.Component {\r\n\r\n  async componentDidMount() {\r\n\r\n    await this.props.getUser();\r\n    if (!this.isInSignupPage && !this.props.user) {\r\n      this.props.history.push('/signup')\r\n    }\r\n  }\r\n\r\n  get isInSignupPage() {\r\n    return this.props.location.pathname === \"/signup\";\r\n  }\r\n\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.props.location !== prevProps.location &&\r\n      !this.props.user &&\r\n      !this.isInSignupPage\r\n    ) {\r\n      this.props.history.push(\"/signup\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.isInSignupPage && !this.props.user) return <Loading />\r\n\r\n    return (\r\n      <div className=\"router-page\">\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/signup\" exact render={(routerProps) => <SignUp {...routerProps} onConnectSocket={this.props.onConnectSocket} />} />\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/contact\" component={ContactPage} />\r\n            <Route path=\"/board/:id\" component={BoardPage} />\r\n            <Route path=\"/inbox/:id\" exact component={InboxPage} />\r\n            {/* <Route path=\"/contact/edit/:id?\" component={ContactEdit} /> */}\r\n            {/* <Route path=\"/contact/:id\" component={ContactDetails} /> */}\r\n            {/* <Route path=\"/statistics\" component={Statistics} /> */}\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(RoutePage));\r\n","import React from \"react\";\r\nimport { stack as Menu } from \"react-burger-menu\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport { UtilService } from '../services/UtilService'\r\nimport { getUser } from '../actions/UserActions'\r\nimport { logout } from '../actions/UserActions'\r\n\r\n\r\n\r\nclass BurgerMenu extends React.Component {\r\n  state = {\r\n    menuOpen: false,\r\n    chuckJoke: ''\r\n  };\r\n\r\n  async componentDidMount () {\r\n\r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke });     \r\n  }\r\n\r\n \r\n  \r\n  closeMenu = async (ev) => {\r\n    if (ev) {\r\n      this.handleLogout()\r\n    }\r\n    this.setState({ menuOpen: false });\r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke }); \r\n    console.log('buggg');\r\n  };\r\n  \r\n  \r\n  handleLogout = async () => {\r\n    await this.props.logout()\r\n    // await this.props.getUser()\r\n    this.props.history.push('/signup')\r\n  }\r\n\r\n\r\n  async handleStateChange(state) {\r\n   \r\n    this.setState({ menuOpen: state.isOpen });\r\n    this.props.onOpenMenu(state.isOpen)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { menuOpen, chuckJoke } = this.state\r\n    const { user } = this.props\r\n    if (!user) return ''\r\n\r\n    return (\r\n      <Menu right isOpen={menuOpen} onStateChange={(state) => this.handleStateChange(state)}>\r\n        <NavLink activeClassName=\"active\" exact to=\"/\" onClick={() => this.closeMenu()}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/contact\" exact onClick={() => this.closeMenu()}>\r\n          Contacts\r\n        </NavLink>\r\n        {user.notifications.length && <span className=\"notification-count\">{user.notifications.length}</span>}\r\n        <NavLink activeClassName=\"active\" to={`/inbox/${user._id}`} exact onClick={() => this.closeMenu()}>\r\n          Inbox\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/signup\" exact onClick={() => this.closeMenu(logout)}  >\r\n          Logout\r\n        </NavLink>\r\n        <div className=\"menu-footer\">\r\n         <h5>{chuckJoke}</h5>\r\n        {/* <img src={imgObj.imgUrl} alt=\"\"/> */}\r\n        </div>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(BurgerMenu));\r\n\r\n","import React ,{useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport logo from '../../src/assets/png/petek-logo.png'\r\nimport BurgerMenu from './BurgerMenu';\r\n\r\n\r\n\r\nexport default (props) => {\r\n\r\n  const { user } = props\r\n  const [isClicked, toggleClick] = useState(false)\r\n  \r\n  const onOpenMenu = (term) =>{\r\n    (!term) ? setTimeout(() => {\r\n      toggleClick(term)\r\n    }, 450) : \r\n    toggleClick(term)\r\n  }\r\n\r\n\r\n  return (\r\n     <nav className=\"NavBar\">\r\n        <Link to={`/`} className=\"home-link\" >\r\n        <img src={logo} alt=\"logo\" className=\"logo\"/>\r\n        </Link>\r\n       {user && !!user.notifications.length && <span className=\"notification-count nav-count\" >{user.notifications.length}</span>}\r\n       <BurgerMenu onOpenMenu={onOpenMenu}/>\r\n    </nav>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport './App.scss';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport audioNotification from '../src/assets/sound/sp-tune.mp3'\r\n\r\nimport SocketService from './services/SocketService'\r\nimport { updateUser } from '../src/actions/UserActions';\r\nimport { saveRoom, loadRoomById } from '../src/actions/RoomActions';\r\n// import { getUser } from '../src/actions/UserActions';\r\n\r\n\r\n\r\nimport RoutePage from './RoutePage'\r\nimport NavBar from './cmps/NavBar';\r\n\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = (props) => {\r\n \r\n  const loggedinUser = props.user;\r\n  const room = props.room\r\n\r\n  const connectSockets =  (id) => {\r\n    SocketService.setup()\r\n    if(room && loggedinUser) {\r\n      SocketService.on(`updateRoom ${room._id}`, async ({ updatedRoom, userId }) => {\r\n        console.log('here?');\r\n        \r\n        // let newRoom = await props.saveRoom(updatedRoom)        \r\n        if(userId !== loggedinUser._id ){    \r\n          console.log('updated that shit',updatedRoom);\r\n          \r\n          props.loadRoomById({ roomId:updatedRoom._id })\r\n        }\r\n        \r\n      });\r\n    }\r\n    if(loggedinUser) {\r\n      \r\n      SocketService.on(`updateUser ${loggedinUser._id}`, updateUser);\r\n      SocketService.on(`updateUserWithoutAudio ${loggedinUser._id}`, ({ user }) => {props.updateUser(user)})\r\n    }\r\n  }\r\n\r\n const disconnectSockets = () =>{\r\n  SocketService.off(`updateRoom ${room._id}`)\r\n  SocketService.off(`updateUser ${loggedinUser._id}`)\r\n  SocketService.off(`updateUserWithoutAudio ${loggedinUser._id}`)\r\n  }\r\n  \r\n  const updateUser = (updatedUser) => {\r\n    let audio = new Audio(audioNotification);\r\n    if (updatedUser) {\r\n      props.updateUser(updatedUser)\r\n      audio.play()\r\n      console.log('notifications');\r\n      \r\n\r\n    } else {\r\n      console.log(\"ERROR IN UPDATE USER\");\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    connectSockets()\r\n    \r\n    return () => {\r\n      if(room && loggedinUser){\r\n        disconnectSockets()\r\n      }\r\n     };\r\n\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <NavBar user={props.user} />\r\n        <RoutePage onConnectSocket={connectSockets} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room:state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  // getUser,\r\n  updateUser,\r\n  saveRoom,\r\n  loadRoomById,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    loggedinUser: null\r\n}\r\n\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return { ...state, loggedinUser: action.user  }\r\n            case 'GET_USER':\r\n            return { ...state, loggedinUser: action.user }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\n\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':            \r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CURR_CONTACT':\r\n            return { ...state, currContact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    if (contact._id === action.contact._id) return action.contact;\r\n                    return contact;\r\n                })\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => {\r\n                    return contact._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    rooms: [],\r\n    currRoom: null\r\n}\r\n\r\n\r\nexport default function RoomReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_ROOMS':\r\n            return { ...state, rooms: action.rooms }\r\n        case 'SET_CURR_ROOM':\r\n            return { ...state, currRoom: action.room }\r\n        case 'UPDATE_ROOM':\r\n            console.log('UPDATE_ROOM invoked rooms:', state.rooms)\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.map(room => {\r\n                    if (room._id === action.room._id) {\r\n                        //after problems fixed return it to one line term\r\n                        console.log('id match!');\r\n                        \r\n                        return action.room;\r\n                    }\r\n                    return room;\r\n                })\r\n            }\r\n        case 'DELETE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.filter(room => {\r\n                    return room._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_ROOM':\r\n            console.log('UPDATE_ROOM ', action.room);\r\n            return {\r\n                ...state,\r\n                rooms: [...state.rooms, action.room]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport UserReducer from './reducers/UserReducer';\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport RoomReducer from './reducers/RoomReducer'\r\nconst composeEnhancers = compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer,\r\n    room: RoomReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\nexport default store\r\n\r\n\r\n//*********STOREEEEE****************\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App.jsx'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/x-mark.082519b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.867418af.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c79dce59.png\";","module.exports = __webpack_public_path__ + \"static/media/save.d5a09bc5.svg\";"],"sourceRoot":""}