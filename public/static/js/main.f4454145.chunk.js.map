{"version":3,"sources":["assets/sound/sp-tune.mp3","assets/svg/add-note.svg","assets/svg/delete-user.svg","assets/gif/avatarLoader.gif","assets/svg/friends.svg","assets/svg/ok.svg","assets/svg/cross.svg","assets/svg/arrow.svg","assets/svg/loading.svg","assets/svg/upload.svg","assets/svg/save.svg","assets/png/petek-logo.png","services/SocketService.js","services/StorageService.js","services/HttpService.js","services/RoomService.js","services/UserService.js","actions/UserActions.js","store/reducers/UserReducer.js","store/reducers/ContactReducer.js","store/reducers/RoomReducer.js","store/reducers/NoteReducer.js","store/index.js","actions/RoomActions.js","services/UtilService.js","services/ContactService.js","actions/ContactActions.js","cmps/Filter.jsx","cmps/AvatarLoader.jsx","cmps/ContactPreview.jsx","cmps/ContactList.jsx","pages/ContactPage.jsx","services/CloudinaryService.js","cmps/ButtonMenu.jsx","cmps/Note/NoteText.jsx","cmps/Note/NoteImg.jsx","cmps/Note/NoteVideo.jsx","cmps/Note/NoteTodo.jsx","cmps/Note/NoteLoc.jsx","cmps/icons/NotePinIcon.jsx","cmps/icons/CircleIcon.jsx","cmps/icons/ColorPaletteIcon.jsx","cmps/icons/StarIcon.jsx","cmps/Note/Features.jsx","cmps/icons/RemoveIcon.jsx","cmps/icons/EditIcon.jsx","cmps/icons/SaveIcon.jsx","cmps/Note/NotePreview.jsx","cmps/Note/NoteList.jsx","cmps/Note/NoteFilter.jsx","cmps/Loading.jsx","cmps/Note/InputText.jsx","cmps/Note/InputImg.jsx","services/YoutubeApiService.js","cmps/Note/InputVideo.jsx","cmps/Note/InputTodo.jsx","services/MapService.js","cmps/icons/GpsIcon.jsx","cmps/Note/InputLoc.jsx","cmps/Note/NotesContainer.jsx","pages/RoomPage.jsx","cmps/User/AvatarEdit.jsx","pages/HomePage.jsx","cmps/Notification/NotificationFriend.jsx","cmps/Notification/NotificationResponse.jsx","cmps/Notification/NotificationNote.jsx","cmps/Notification/NotificationPreview.jsx","cmps/Notification/NotificationList.jsx","pages/InboxPage.jsx","pages/RandomGame.jsx","cmps/Note/StarredContainer.jsx","pages/StarredPage.jsx","pages/SignupPage.jsx","RoutePage.jsx","cmps/BurgerMenu.jsx","cmps/NavBar.jsx","App.jsx","serviceWorker.js","index.js","assets/svg/plus.svg","assets/png/user.png","assets/svg/pin.svg","assets/svg/x-mark.svg"],"names":["module","exports","socket","setup","io","terminate","on","eventName","cb","off","emit","data","StorageService","save","key","value","item","JSON","stringify","localStorage","setItem","load","getItem","parse","axios","Axios","create","withCredentials","HttpService","endpoint","ajax","a","method","url","res","response","status","room","prm","_id","roomId","noteId","color","note","userId","RoomService","query","critirea","params","URLSearchParams","getById","filterBy","queryParams","property","set","remove","id","checkIsValidUser","removeNote","changeNoteColor","toggleNotePin","updateNote","getStarredNotes","user","KEY","credentials","userName","fullName","password","imgUrl","notifications","starredNotes","avatarImg","joinedAt","Date","now","friends","removeItem","msg","updatedUser","friendId","friend","userIdx","findIndex","splice","UserService","signUp","update","login","logout","getMinimalUser","updateImgAtContacts","getLoggedinUser","getRoomIdFromContact","loggedinUser","contact","find","updateFriend","toggleStarredNote","dispatch","type","getUser","isStarredPage","console","log","notes","updateUser","initialState","contacts","currContact","rooms","currRoom","currNote","rootReducer","combineReducers","state","action","map","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","loadRoomById","resetCurrRoom","err","saveRoom","isEdit","UtilService","makeId","length","txt","possible","i","charAt","Math","floor","random","getRandomChuck","get","ContactService","term","toLowerCase","filteredFriends","includes","getContactById","Promise","resolve","reject","deleteContact","index","saveContact","c","_updateContact","push","_addContact","getEmptyContact","loadContacts","setFilterBy","moveToContact","placeHolder","minLength","className","debounceTimeout","placeholder","onChange","e","target","onKeyDown","ev","keyCode","preventDefault","AvatarLoader","isHome","src","avatarLoader","alt","onAddFriend","moveToRoom","setRoomId","useState","isFriendSent","setIsFriendSent","isFriend","setIsFriend","isLoaded","setIsLoaded","onLoad","useCallback","useEffect","toggleIsFriend","onClick","style","display","friendReqSent","addFriendImg","props","onMoveToRoom","showNotification","onDeleteFriend","ContactPreview","swipeLeft","content","deleteUser","swipeRight","addNote","mapDispatchToProps","connect","history","friendIdx","Filter","ContactList","friendName","n","Noty","text","layout","theme","animation","open","close","buttons","button","show","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","secure","then","json","catch","error","setNoteType","setNoteInputType","setNoteData","isOpen","setIsOpen","slideSpeed","direction","spacing","iconResting","fontSize","nativecolor","iconActive","backgroundColor","size","icon","fill","setTextEdit","textEdit","header","width","allow","title","currTodoIdx","setCurrTodoIdx","updateMembers","editedTodo","setEditedTodo","newTodo","setNewTodo","progress","setProgress","isNewTodo","setIsNewTodo","editInputRef","createRef","toggleIsDone","idx","noteCopy","isDone","addTodo","todoToAdd","removeTodo","doneTodosCount","reduce","acc","todo","prog","parseInt","culcProgress","current","focus","PlusIcon","checked","readOnly","ref","xmark","stopPropagation","ArrowIcon","completed","labelSize","name","height","navigator","platform","indexOf","coords","lat","lng","bootstrapURLKeys","center","yesIWantToUseGoogleMapApiInternals","defaultZoom","distanceToMouse","onGoogleApiLoaded","maps","Marker","position","PinIcon","renderMarkers","isPinned","enableBackground","viewBox","xmlns","d","version","xmlnsXlink","x","y","xmlSpace","clipRule","fillRule","isStarred","isPalleteOpen","setIsPalleteOpen","setIsStarred","handleStarClicked","handleColorClicked","ans","some","starredNote","checkIsStarred","StarIcon","NotePinIcon","TransitionGroup","component","CSSTransition","classNames","in","timeout","enter","exit","unmountOnExit","CircleIcon","saveRoomChanges","togglePinned","setIsEdit","NoteType","NoteText","NoteImg","NoteVideo","NoteTodo","NoteLoc","noteRef","paintNote","bgColor","saveNoteEdits","handleRemoveClicked","getRoomId","createdBy","backgroudColor","EditIcon","SaveIcon","RemoveIcon","format","createdAt","Features","setNoteColor","NotePreview","htmlFor","Loading","loading","setNoteHeader","handleSubmit","onSubmit","hidden","onUploadImg","inputRef","click","API_KEY","YoutubeApiService","youtubeQuery","items","addVideo","videos","setVideos","searchYoutubeVideos","queryStr","youtubeVideos","video","videoId","snippet","thumbnails","default","noteData","currTodo","setCurrTodo","textInput","React","useRef","xMark","todoId","saveIcon","GAPI_KEY","MapService","searchLocs","searchAddress","getPosition","geolocation","getCurrentPosition","split","join","results","locs","setLocs","selectedLoc","setSelectedLoc","addressInputRef","searchLoc","locations","fetchUserCoords","userPos","latitude","longitude","accurateAddressIdx","address","address_components","short_name","dataObj","geometry","location","GpsIcon","loc","place_id","formatted_address","setLocNote","by","SocketService","NoteFilter","onFilter","NoteList","members","noteType","noteHeader","noteInputType","isUploading","setIsUploading","newNote","InputType","InputText","InputImg","InputVideo","InputTodo","InputLoc","loadRoom","match","CloudinaryService","secure_url","onHandleSubmit","minimalUser","currFriend","isMarkerShown","ButtonMenu","AvatarEdit","isLoading","setIsLoading","setIsHome","getUpdatedUser","userImgUrl","Object","assign","notification","onApprove","onDecline","isApproved","onDeleteNotification","to","NotificationType","NotificationFriend","NotificationResponse","NotificationNote","fromNow","NotificationPreview","currNotification","NotificationList","RandomGame","gameName","setGameName","gamesName","randomInt","setGame","getNotes","SignupPage","newUser","isSignUp","onChangeHandler","setState","resetInput","toggleSignUp","prevState","Swal","fire","confirmButtonText","confirmButtonColor","padding","background","backdrop","connectSockets","this","onConnectSocket","label","Component","RoutePage","isInSignupPage","prevProps","path","exact","render","routerProps","HomePage","ContactPage","StarredPage","InboxPage","pathname","withRouter","BurgerMenu","menuOpen","chuckJoke","closeMenu","handleLogout","isClicked","right","onStateChange","handleStateChange","activeClassName","toggleClick","logo","createBrowserHistory","updatedRoom","disconnectSockets","audio","Audio","audioNotification","play","NavBar","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f4454145.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sp-tune.a3eeb710.mp3\";","module.exports = __webpack_public_path__ + \"static/media/add-note.91ab0319.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-user.9760c031.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatarLoader.2c9b45c9.gif\";","module.exports = __webpack_public_path__ + \"static/media/friends.e8f88cde.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.251fc800.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.21df9a01.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.15b12873.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.a4b15b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.926d5c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.d5a09bc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/petek-logo.e7a6391d.png\";","import io from 'socket.io-client';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/' :\r\n    '//localhost:3030'\r\nvar socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit,\r\n}\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb)\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb)\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    \r\n    socket.emit(eventName, data)\r\n}\r\n\r\n","function save(key, value) {\r\n  let item = JSON.stringify(value);\r\n  localStorage.setItem(key, item);\r\n}\r\nfunction load(key) {\r\n  let item = localStorage.getItem(key);\r\n  let value = JSON.parse(item);\r\n  return value;\r\n}\r\n\r\nexport const StorageService = {\r\n  save,\r\n  load,\r\n};\r\n","// import router from '@/router'\r\n// import store from '@/store'\r\n\r\nimport Axios from 'axios';\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nconst BASE_URL = process.env.NODE_ENV !== 'development' ?\r\n    '/api/' :\r\n    '//localhost:3030/api/'\r\n\r\n\r\nexport const HttpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            method,\r\n            url: `${BASE_URL}${endpoint}`,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            return false\r\n                // throw new Error('error:  http.service page')\r\n                // router.push('/');\r\n        }\r\n    }\r\n}","import { HttpService } from \"./HttpService\";\r\n\r\nfunction query(critirea) {\r\n  const params = new URLSearchParams(critirea);\r\n  return HttpService.get(`room?${params}`);\r\n}\r\n\r\nfunction getById(filterBy) {\r\n  const queryParams = new URLSearchParams();\r\n  if (filterBy) {\r\n    for (const property in filterBy) {\r\n      if (filterBy[property]) {\r\n        queryParams.set(property, filterBy[property]);\r\n      }\r\n    }\r\n    return HttpService.get(`room?${queryParams}`);\r\n  }\r\n}\r\n\r\n// function getById(filterBy) {\r\n//     console.log(id);\r\n//     return HttpService.get(`room/${id}`);\r\n// }\r\n\r\nfunction remove(id) {\r\n  return HttpService.delete(`room/${id}`);\r\n}\r\n\r\nasync function save(room) {\r\n  let prm;\r\n\r\n  if (room._id) prm = HttpService.put(`room/${room._id}`, room);\r\n  else {\r\n    prm = HttpService.post(\"room\", room);\r\n  }\r\n  const res = await prm;\r\n  return res;\r\n}\r\n\r\nasync function removeNote(roomId, noteId) {\r\n  return HttpService.delete(`room/${roomId}/removeNote`, { roomId, noteId });\r\n}\r\n\r\nasync function changeNoteColor(roomId, noteId, color) {\r\n  return HttpService.put(`room/${roomId}/changeNoteColor`, {\r\n    roomId,\r\n    noteId,\r\n    color,\r\n  });\r\n}\r\n\r\nasync function toggleNotePin(roomId, noteId) {\r\n  return HttpService.put(`room/${roomId}/toggleNotePin`, { roomId, noteId });\r\n}\r\n\r\nasync function updateNote(roomId, note) {\r\n  return HttpService.put(`room/${roomId}/updateNote`, { roomId, note });\r\n}\r\n\r\nasync function checkIsValidUser(userId, roomId) {\r\n  return HttpService.post(`room/${roomId}/validate`, { userId, roomId });\r\n}\r\n\r\n// async function getStarredNotes(userId) {\r\n//   const params = new URLSearchParams(userId);\r\n//   return HttpService.get(`room/starredNotes/?${params}`);\r\n// }\r\n\r\nfunction getStarredNotes(user) {\r\n  const queryParams = new URLSearchParams();\r\n  if (user) {\r\n    for (const property in user) {\r\n      if (user[property]) {\r\n        queryParams.set(property, JSON.stringify(user[property]));\r\n      }\r\n    }\r\n    return HttpService.get(`room/starredNotes/?${queryParams}`);\r\n  }\r\n}\r\n\r\nexport const RoomService = {\r\n  query,\r\n  getById,\r\n  save,\r\n  remove,\r\n  checkIsValidUser,\r\n  removeNote,\r\n  changeNoteColor,\r\n  toggleNotePin,\r\n  updateNote,\r\n  getStarredNotes,\r\n};\r\n","import { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\nimport avatarImg from '../assets/png/user.png'\r\n\r\n\r\nconst KEY = 'user';\r\n\r\n// async function getLoggedinUser() {\r\n//     var user = StorageService.load(KEY);\r\n//     return !user ? null : await HttpService.get(`user/${user._id}`)\r\n// }\r\nasync function getLoggedinUser() {\r\n    var user = StorageService.load(KEY);\r\n    if (!user) return null\r\n    user = await HttpService.get(`user/${user._id}`)\r\n    return user\r\n}\r\n// async function getUpdatedUser() {\r\n//     var user = StorageService.load(KEY);\r\n//     return\r\n\r\n\r\n\r\nasync function getById(id) {\r\n    const user = await HttpService.get(`user/${id}`)\r\n    return user\r\n}\r\n\r\nasync function signUp(credentials) {\r\n    let { userName, fullName, password, imgUrl } = credentials\r\n    let user = {\r\n        userName,\r\n        fullName,\r\n        password,\r\n        notifications: [],\r\n        starredNotes: [],\r\n        imgUrl: imgUrl ? imgUrl : avatarImg,\r\n        joinedAt: Date.now(),\r\n        friends: []\r\n    };\r\n\r\n    user = await HttpService.post('auth/signup', user)\r\n    StorageService.save(KEY, user);\r\n    // getUser()\r\n    return user;\r\n}\r\n\r\nasync function login(credentials) {\r\n    const user = await HttpService.post('auth/login', credentials)\r\n    if (!user) return null;\r\n    StorageService.save(KEY, user);\r\n    return user;\r\n}\r\n\r\n\r\nasync function logout() {\r\n    localStorage.removeItem(KEY)\r\n    const msg = await HttpService.post('auth/logout');\r\n    return (msg)\r\n}\r\n\r\nasync function update(user) {\r\n    const updatedUser = await HttpService.put(`user/${user._id}`, user)\r\n    StorageService.save(KEY, updatedUser);\r\n    return updatedUser\r\n}\r\n\r\nasync function updateImgAtContacts(userId, imgUrl) {\r\n    await HttpService.put(`user/${userId}/update`, { userId, imgUrl })\r\n}\r\n\r\nasync function updateFriend(userId, friendId) {\r\n    let friend = await getById(friendId)\r\n    let userIdx = friend.friends.findIndex(user => user._id === userId)\r\n    friend.friends.splice(userIdx, 1)\r\n    await HttpService.put(`user/${friend._id}`, friend)\r\n}\r\n\r\nasync function toggleStarredNote(userId, roomId, noteId) {\r\n    return await HttpService.put(`user/toggleStar`, {userId, roomId, noteId})\r\n}\r\n\r\n\r\n\r\nfunction getMinimalUser(_id, imgUrl) {\r\n    return {\r\n        _id,\r\n        imgUrl\r\n    }\r\n}\r\n\r\nfunction getRoomIdFromContact(loggedinUser, contact) {\r\n    return loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n\r\n}\r\n\r\nexport const UserService = {\r\n    getById,\r\n    signUp,\r\n    update,\r\n    login,\r\n    logout,\r\n    getMinimalUser,\r\n    updateImgAtContacts,\r\n    getLoggedinUser,\r\n    getRoomIdFromContact,\r\n    updateFriend,\r\n    toggleStarredNote\r\n}","import { RoomService } from '../services/RoomService';\r\nimport { UserService } from '../services/UserService'\r\n\r\nexport function signUp(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.signUp(user);\r\n        dispatch({ type: 'SET_USER', newUser })\r\n    }\r\n}\r\nexport function login(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.login(user);\r\n        dispatch({ type: 'SET_USER', user: newUser })\r\n    }\r\n}\r\nexport function logout() {\r\n    const user = null\r\n    return async dispatch => {\r\n        await UserService.logout();\r\n        dispatch({ type: 'SET_USER', user })\r\n    }\r\n}\r\n\r\nexport function getUser() {\r\n    return async dispatch => {\r\n        const user = await UserService.getLoggedinUser();\r\n        dispatch({ type: 'GET_USER', user })\r\n        // const latestUser = await UserService.getUpdatedUser();\r\n        // dispatch({ type: 'GET_USER', latestUser })\r\n    }\r\n}\r\n\r\nexport function toggleStarredNote(userId, roomId, noteId, isStarredPage) {\r\n    return async dispatch => {\r\n        try {\r\n            let user = await UserService.toggleStarredNote(userId, roomId, noteId);\r\n            dispatch({ type: 'SET_USER', user })\r\n            if (isStarredPage) {\r\n                console.log('****I hope you are in starred page****');\r\n                let notes = await RoomService.getStarredNotes(user)\r\n                dispatch({ type: \"SET_CURR_ROOM\", room: { notes } })\r\n            }\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function getUpdatedUser() {\r\n//     return async dispatch => {\r\n//         const user = await UserService.getUpdatedUser();\r\n//         console.log('user in actions');\r\n//         dispatch({ type: 'GET_USER', user })\r\n//     }\r\n// }\r\n\r\nexport function updateUser(user) {\r\n    return async dispatch => {\r\n        const updatedUser = await UserService.update(user);\r\n        dispatch({ type: 'SET_USER', user: updatedUser })\r\n    }\r\n}","const initialState = {\r\n    loggedinUser: null\r\n}\r\n\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            if (!action.user) return {...state, loggedinUser: action.user }\r\n            else return {...state, loggedinUser: {...action.user } }\r\n        case 'GET_USER':\r\n            return {...state, loggedinUser: action.user }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\n\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':            \r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CURR_CONTACT':\r\n            return { ...state, currContact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    if (contact._id === action.contact._id) return action.contact;\r\n                    return contact;\r\n                })\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => {\r\n                    return contact._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    rooms: [],\r\n    currRoom: null,\r\n}\r\n\r\n\r\nexport default function RoomReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_ROOMS':\r\n            return { ...state, rooms: action.rooms }\r\n        case 'SET_CURR_ROOM':\r\n            return { ...state, currRoom: action.room }\r\n        case 'UPDATE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.map(room => {\r\n                    if (room._id === action.room._id) {\r\n                        //after problems fixed return it to one line term\r\n                        console.log('id match!');\r\n\r\n                        return action.room;\r\n                    }\r\n                    return room;\r\n                })\r\n            }\r\n        case 'DELETE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.filter(room => {\r\n                    return room._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: [...state.rooms, action.room]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    notes: [],\r\n    currNote: null\r\n}\r\n\r\n\r\nexport default function NoteReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_NOTES':\r\n            return { ...state, notes: action.notes }\r\n        case 'SET_CURR_ROOM':\r\n            return { ...state, currRoom: action.room }\r\n        case 'UPDATE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.map(room => {\r\n                    if (room._id === action.room._id) {\r\n                        //after problems fixed return it to one line term\r\n                        console.log('id match!');\r\n                        \r\n                        return action.room;\r\n                    }\r\n                    return room;\r\n                })\r\n            }\r\n        case 'REMOVE_NOTE':\r\n            return {\r\n                ...state,\r\n                notes: state.notes.filter(note => {\r\n                    return note._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: [...state.rooms, action.room]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport UserReducer from './reducers/UserReducer';\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport RoomReducer from './reducers/RoomReducer'\r\nimport NoteReducer from './reducers/NoteReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer,\r\n    room: RoomReducer,\r\n    note: NoteReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\n\r\nexport default store\r\n\r\n\r\n//*********STOREEEEE****************\r\n","import { RoomService } from \"../services/RoomService\";\r\nimport noteSelector from \"../selectors/notes\";\r\n// LIST\r\nexport function loadRooms(filterBy) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const rooms = await RoomService.query(filterBy);\r\n      dispatch({ type: \"SET_ROOMS\", rooms });\r\n    } catch (err) {\r\n      console.log(\"ERROR\", err);\r\n    }\r\n  };\r\n}\r\n\r\n// READ\r\nexport function loadRoomById(filterBy) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const room = await RoomService.getById(filterBy);\r\n      dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    } catch (err) {\r\n      console.log(\"ERROR\", err);\r\n    }\r\n  };\r\n}\r\n\r\n//RESET\r\nexport function resetCurrRoom() {\r\n  return async (dispatch) => {\r\n    try {\r\n      const room = null;\r\n      dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    } catch (err) {\r\n      console.log(\"ERROR:\", err);\r\n    }\r\n  };\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveRoom(room) {\r\n  return async (dispatch) => {\r\n    const isEdit = !!room._id;\r\n    room = await RoomService.save(room);\r\n    if (isEdit) dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    // dispatch({ type: 'UPDATE_ROOM', room })\r\n    else dispatch({ type: \"ADD_ROOM\", room });\r\n    return room;\r\n  };\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteRoom(id) {\r\n  return async (dispatch) => {\r\n    await RoomService.remove(id);\r\n    dispatch({ type: \"DELETE_ROOM\", id });\r\n  };\r\n}\r\n\r\n//REMOVE NOTE\r\nexport function removeNote(roomId, noteId) {\r\n  return async (dispatch) => {\r\n    try {\r\n      let room = await RoomService.removeNote(roomId, noteId);\r\n      dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    } catch (err) {\r\n      console.log(\"ERROR\", err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function changeNoteColor(roomId, noteId, color) {\r\n  return async (dispatch) => {\r\n    try {\r\n      let room = await RoomService.changeNoteColor(roomId, noteId, color);\r\n      dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    } catch (err) {\r\n      console.log(\"ERROR\", err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function toggleNotePin(roomId, noteId) {\r\n  return async (dispatch) => {\r\n    try {\r\n      let room = await RoomService.toggleNotePin(roomId, noteId);\r\n      dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    } catch (err) {\r\n      console.log(\"ERROR\", err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function updateNote(roomId, note) {\r\n  return async (dispatch) => {\r\n    try {\r\n      let room = await RoomService.updateNote(roomId, note);\r\n      dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    } catch (err) {\r\n      console.log(\"ERROR\", err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function getStarredNotes(user) {\r\n  return async (dispatch) => {\r\n    try {\r\n      let notes = await RoomService.getStarredNotes(user);\r\n      let room = { notes };\r\n      dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    } catch (err) {\r\n      console.log(\"ERROR\", err);\r\n    }\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\n\r\n\r\nexport const UtilService = {\r\n    makeId,\r\n    getRandomChuck\r\n    // getRandomMeme\r\n}\r\n\r\nfunction makeId(length = 12) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nasync function getRandomChuck(){\r\n    const res = await axios.get(`https://api.chucknorris.io/jokes/random`);\r\n    return res.data.value\r\n}\r\n// async function getRandomMeme(){\r\n//     const res = await axios.get(`https://meme-api.herokuapp.com/gimme/dankmemes/1`);\r\n//      let imgObj = {imgUrl:res.data.memes[0].url, imgHeader:res.data.memes[0].title }\r\n//      return imgObj\r\n// }","import { UtilService } from './UtilService'\r\nimport { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\n\r\n\r\nconst CONTACT_KEY = 'contacts';\r\nvar contacts = []\r\n\r\n// function sort(arr) {\r\n//     return arr.sort((a, b) => {\r\n//         if (a.userName.toLocaleLowerCase() < b.userName.toLocaleLowerCase()) {\r\n//             return -1;\r\n//         }\r\n//         if (a.userName.toLocaleLowerCase() > b.userName.toLocaleLowerCase()) {\r\n//             return 1;\r\n//         }\r\n\r\n//         return 0;\r\n//     })\r\n// }\r\n\r\n// function query(filterBy = null) {\r\n//     return new Promise((resolve, reject) => {\r\n//         var contactsToReturn = StorageService.load(CONTACT_KEY);\r\n//         if (!contactsToReturn || !contactsToReturn.length) {\r\n//             contactsToReturn = [...contacts]\r\n//             StorageService.save(CONTACT_KEY, contactsToReturn)\r\n//         }\r\n//         contacts = [...contactsToReturn]\r\n//         if (filterBy && filterBy.term) {\r\n//             contactsToReturn = filter(filterBy.term)\r\n//         }\r\n//         contactsToReturn ? resolve(sort(contactsToReturn)) : reject(`Contacts not found!`)\r\n//     })\r\n// }\r\nfunction query(filterBy, user) {\r\n    if (filterBy.term && user) {\r\n        filterBy.term = filterBy.term.toLowerCase()\r\n        var filteredFriends = user.friends.filter(friend => {\r\n            return friend.userName.toLowerCase().includes(filterBy.term) || friend.fullName.toLowerCase().includes(filterBy.term)\r\n        })\r\n        return filteredFriends.length ? filteredFriends : ''\r\n    }\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]) {\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        }\r\n        return HttpService.get(`user?${queryParams}`);\r\n    }\r\n\r\n}\r\n// function query(filterBy, user) {\r\n//     console.log(filterBy);\r\n//     console.log(user);\r\n//     // if (!filterBy.term) return []\r\n//     const queryParams = new URLSearchParams();\r\n//     if (filterBy) {\r\n//         for (const property in filterBy) {\r\n//             if (filterBy[property]) {\r\n//                 queryParams.set(property, filterBy[property])\r\n//             }\r\n//         }\r\n//         console.log(queryParams);\r\n//         return HttpService.get(`user?${queryParams}`);\r\n//     }\r\n//     // return HttpService.get('user');\r\n// }\r\n\r\n\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = UtilService.makeId()\r\n        contacts.push(contact)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        fullName: '',\r\n        userName: '',\r\n    }\r\n}\r\n\r\n// function filter(term) {\r\n//     term = term.toLocaleLowerCase()\r\n//     return contacts.filter(contact => {\r\n//         return contact.userName.toLocaleLowerCase().includes(term) ||\r\n//             contact.fullName.toLocaleLowerCase().includes(term)\r\n//     })\r\n// }\r\n\r\nexport const ContactService = {\r\n    query,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}","import { ContactService } from '../services/ContactService'\r\n\r\n// LIST\r\nexport function loadContacts(filterBy,user) {\r\n    return async dispatch => {\r\n        try {\r\n            const contacts = await ContactService.query(filterBy,user);\r\n            dispatch({ type: 'SET_CONTACTS', contacts })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadContactById(id) {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = await ContactService.getContactById(id);\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrContact() {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = null\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveContact(contact) {\r\n    return async dispatch => {\r\n        const isEdit = !!contact._id\r\n        contact = await ContactService.saveContact(contact);\r\n        if (isEdit) dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        else dispatch({ type: 'ADD_CONTACT', contact })\r\n        return contact;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', id })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nexport default ({ filterBy, setFilterBy, moveToContact, placeHolder }) => {\r\n\r\n    const onKeyHandler = (ev) => {\r\n        if (ev.keyCode === 13) {\r\n            ev.preventDefault()\r\n            moveToContact()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <DebounceInput\r\n                minLength={0}\r\n                className=\"filter-input\"\r\n                debounceTimeout={300}\r\n                type=\"text\"\r\n                placeholder={placeHolder ? placeHolder : 'Search Contacts'}\r\n                onChange={e => setFilterBy({ ...filterBy, term: e.target.value })}\r\n                onKeyDown={onKeyHandler}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n","import avatarLoader from '../assets/gif/avatarLoader.gif'\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst AvatarLoader = ({ isHome }) => {\r\n    return <div>\r\n         <img src={avatarLoader} alt=\"loading\" className={isHome ? \"avatar avatar-loader home\" : \"avatar avatar-loader\"}/>\r\n    </div>;\r\n}\r\n\r\nexport default AvatarLoader;","import React, { useState, useEffect,useCallback } from 'react';\r\n\r\nimport AvatarLoader from './AvatarLoader'\r\n\r\nimport addFriendImg from '../assets/svg/friends.svg'\r\nimport friendReqSent from '../assets/svg/ok.svg'\r\n\r\n\r\n\r\nexport default ({ contact, onAddFriend, loggedinUser, moveToRoom,setRoomId,roomId }) => {\r\n\r\n\r\n    const [isFriendSent, setIsFriendSent] = useState(false)\r\n    const [isFriend, setIsFriend] = useState(false)\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  const onLoad = useCallback(() => {\r\n    console.log('loaded');\r\n    setIsLoaded(true);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!loggedinUser) return\r\n        let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n        if (friend) {\r\n            setIsFriend(true)\r\n            setRoomId(friend.roomId)\r\n        } else {\r\n            setIsFriend(false)\r\n        }\r\n       \r\n    },[loggedinUser, contact._id]);\r\n\r\n    const toggleIsFriend = (ev) => {\r\n        // ev.preventDefault()\r\n        setIsFriendSent(true)\r\n\r\n    }\r\n    \r\n\r\n    const handelClick = (ev) => {\r\n        onAddFriend(contact._id);\r\n        toggleIsFriend(ev)\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) contact.roomId ?  moveToRoom(ev,contact.roomId) : moveToRoom(ev,contact)  }}>    \r\n           <img  onLoad={onLoad} src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" style={{display: isLoaded? 'block': 'none'}}/> \r\n          {!isLoaded && <AvatarLoader/>}\r\n            <div className=\"user-name-container\">\r\n                <span>Full Name: {contact.fullName}</span>\r\n                <span>User Name: {contact.userName}</span>\r\n            </div>\r\n            {!contact.roomId &&\r\n                <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n                    alt=\"\"\r\n                    className=\"add-friend-img\"\r\n                    onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}      \r\n           \r\n        </div>\r\n       \r\n\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\n// import '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\n\r\n\r\n// import addFriendImg from '../assets/svg/friends.svg'\r\n// import friendReqSent from '../assets/svg/ok.svg'\r\n// import addNote from '../assets/svg/notes.svg'\r\n// import deleteUser from '../assets/svg/delete.svg'\r\n\r\n\r\n// export default ({ contact, onAddFriend, loggedinUser, moveToRoom,isHome }) => {\r\n\r\n\r\n//     const [isFriendSent, setIsFriendSent] = useState(false)\r\n//     const [isFriend, setIsFriend] = useState(false)\r\n//     const [roomId, setRoomId] = useState('')\r\n\r\n//     useEffect(() => {\r\n//         if (!loggedinUser) return\r\n//         let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n//         if (friend) {\r\n//             setIsFriend(true)\r\n//             setRoomId(friend.roomId)\r\n//         } else {\r\n//             setIsFriend(false)\r\n//         }\r\n//     },[loggedinUser, contact._id]);\r\n\r\n//     const toggleIsFriend = (ev) => {\r\n//         // ev.preventDefault()\r\n//         setIsFriendSent(true)\r\n\r\n//     }\r\n    \r\n\r\n//     const handelClick = (ev) => {\r\n//         onAddFriend(contact._id);\r\n//         toggleIsFriend(ev)\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div className=\"swipe-container\">\r\n//       <SwipeableListItem \r\n      \r\n//     swipeLeft={{\r\n//         content:<img className=\"swipe-content-left\" src={deleteUser}/>,\r\n//         action: (ev) => {console.log('balls');},\r\n        \r\n//     }}\r\n//     swipeRight={{\r\n//         content:isHome ? <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg} className=\"add-friend-img\"/> :  <img className=\"swipe-content-right\" src={addNote}/>,\r\n//         action: isHome ?  (ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev) : (ev) => { moveToRoom(ev,roomId)},\r\n        \r\n//     }} \r\n//     >\r\n//       <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) moveToRoom(ev,roomId) }}>    \r\n//           <img src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" />\r\n//             <div className=\"user-name-container\">\r\n//                 <span>Full Name: {contact.fullName}</span>\r\n//                 <span>User Name: {contact.userName}</span>\r\n//             </div>\r\n//             {!contact.roomId &&\r\n//                 <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n//                     alt=\"\"\r\n//                     className=\"add-friend-img\"\r\n//                     onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}      \r\n           \r\n//         </div>\r\n//          </SwipeableListItem>\r\n//         </div>\r\n       \r\n\r\n//     );\r\n// };","import React, { useState } from 'react'\r\nimport { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\nimport addNote from '../assets/svg/add-note.svg'\r\nimport deleteUser from '../assets/svg/delete-user.svg'\r\n\r\nimport ContactPreview from './ContactPreview'\r\n\r\nexport default (props) => {\r\n    const { onAddFriend, loggedinUser, onMoveToRoom, isHome, onDeleteFriend, showNotification } = props\r\n    const [roomId, setRoomId] = useState('')\r\n\r\n\r\n    return (\r\n        <div className=\"contact-list swipe-container\">\r\n            {props.contacts.map(contact => {\r\n                return (\r\n                    <div key={contact._id}>\r\n                        {!isHome ? <SwipeableListItem\r\n                            swipeLeft={{\r\n                                content: <div className=\"delete-btn-container\"><img className=\"swipe-content-left\" src={deleteUser} /></div>,\r\n                                action: () => { showNotification(contact.userName, contact._id) },\r\n                            }}\r\n                            swipeRight={{\r\n                                content: <div className=\"add-btn-container\"><img className=\"swipe-content-right\" src={addNote} /></div>,\r\n                                action: (ev) => { onMoveToRoom(ev, contact.roomId) },\r\n                                key: contact._id\r\n\r\n                            }}\r\n                        >\r\n                            <ContactPreview\r\n                                contact={contact}\r\n                                onAddFriend={onAddFriend}\r\n                                loggedinUser={loggedinUser}\r\n                                key={contact._id}\r\n                                moveToRoom={onMoveToRoom}\r\n                                isHome={isHome}\r\n                                setRoomId={setRoomId}\r\n                                roomId={roomId}\r\n                            />\r\n                        </SwipeableListItem> :\r\n                            <ContactPreview\r\n                                contact={contact}\r\n                                onAddFriend={onAddFriend}\r\n                                loggedinUser={loggedinUser}\r\n                                key={contact._id}\r\n                                moveToRoom={onMoveToRoom}\r\n                                isHome={isHome}\r\n                                setRoomId={setRoomId}\r\n                                roomId={roomId}\r\n\r\n                            />}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n// import React, { useState } from 'react'\r\n// import { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\n// import '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\n// import addNote from '../assets/svg/notes.svg'\r\n// import deleteUser from '../assets/svg/delete.svg'\r\n\r\n// import ContactPreview from './ContactPreview'\r\n\r\n// export default (props) => {\r\n//     const { onAddFriend, loggedinUser, onMoveToRoom, isHome, onDeleteFriend, showNotification } = props\r\n//     const [roomId, setRoomId] = useState('')\r\n\r\n\r\n//     return (\r\n//         <div className=\"contact-list swipe-container\">\r\n//             {props.contacts.map(contact => {\r\n//                 return (\r\n//                     <div key={contact._id}>\r\n//                         {!isHome ? <SwipeableListItem\r\n//                             swipeLeft={{\r\n//                                 content: <img className=\"swipe-content-left\" src={deleteUser} />,\r\n//                                 action: (ev) => { showNotification(contact.userName, contact._id) },\r\n//                                 // action: (ev) => { onDeleteFriend(contact._id) },\r\n\r\n\r\n//                             }}\r\n//                             swipeRight={{\r\n//                                 content: <img className=\"swipe-content-right\" src={addNote} />,\r\n//                                 action: (ev) => { onMoveToRoom(ev, contact.roomId) },\r\n//                                 key: contact._id\r\n\r\n//                             }}\r\n//                         >\r\n//                             <ContactPreview\r\n//                                 contact={contact}\r\n//                                 onAddFriend={onAddFriend}\r\n//                                 loggedinUser={loggedinUser}\r\n//                                 key={contact._id}\r\n//                                 moveToRoom={onMoveToRoom}\r\n//                                 isHome={isHome}\r\n//                                 setRoomId={setRoomId}\r\n//                                 roomId={roomId}\r\n//                             />\r\n//                         </SwipeableListItem> :\r\n//                             <ContactPreview\r\n//                                 contact={contact}\r\n//                                 onAddFriend={onAddFriend}\r\n//                                 loggedinUser={loggedinUser}\r\n//                                 key={contact._id}\r\n//                                 moveToRoom={onMoveToRoom}\r\n//                                 isHome={isHome}\r\n//                                 setRoomId={setRoomId}\r\n//                                 roomId={roomId}\r\n\r\n//                             />}\r\n//                     </div>\r\n//                 )\r\n//             })}\r\n//         </div>\r\n\r\n//     );\r\n// };\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n\r\n// import ContactPreview from './ContactPreview'\r\n// export default (props) => {\r\n//     const { onAddFriend, loggedinUser, onMoveToRoom, isHome } = props\r\n\r\n\r\n//     return (\r\n//         <div className=\"contact-list\">\r\n//             {props.contacts.map(contact => {\r\n//                 return (\r\n//                     <ContactPreview\r\n//                         contact={contact}\r\n//                         onAddFriend={onAddFriend}\r\n//                         loggedinUser={loggedinUser}\r\n//                         key={contact._id}\r\n//                         moveToRoom={onMoveToRoom}\r\n//                         isHome={isHome}\r\n//                     />\r\n//                 )\r\n//             })}\r\n//         </div>\r\n//     );\r\n// };\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Noty from 'noty';\r\n\r\nimport { loadContacts } from '../actions/ContactActions';\r\nimport { loadRoomById } from '../actions/RoomActions';\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport { UserService } from '../services/UserService'\r\n\r\n\r\nimport Filter from '../cmps/Filter'\r\nimport ContactList from '../cmps/ContactList'\r\n\r\nconst ContactPage = (props) => {\r\n    const [filterBy, setFilterBy] = useState({ term: '', roomId: '' })\r\n    const { contacts, user } = props\r\n\r\n\r\n\r\n    const onMoveToRoom = async (ev, roomId) => {\r\n        if (!props.history) {\r\n            await props.loadRoomById({ roomId });\r\n            return\r\n        }\r\n        props.history.push(`/room/${roomId}`);\r\n    }\r\n\r\n    const loadContacts = async () => {\r\n        await props.loadContacts(filterBy, user);\r\n    };\r\n\r\n    const handleKeyPress = () => {\r\n        if (props.contacts.length === 1) {\r\n            let id = props.contacts[0]._id\r\n            props.history.push(`/room/${id}`);\r\n        }\r\n    }\r\n\r\n    const showNotification = (friendName, friendId) => {\r\n        //bgc \r\n        let n = new Noty({\r\n            text: `Remove ${friendName} from your contact list?`,\r\n            layout: 'center',\r\n            theme: 'sunset',\r\n            type: 'alert',\r\n            // theme: 'bootstrap-v4',\r\n\r\n            animation: {\r\n                open: 'animated bounceInRight', // Animate.css class names\r\n                close: 'animated bounceOutRight' // Animate.css class names\r\n            },\r\n            buttons: [\r\n                Noty.button('YES', 'btn btn-danger', () => {\r\n                    onDeleteFriend(friendId)\r\n                    n.close();\r\n                }, { id: 'button1', 'data-status': 'ok' }),\r\n\r\n                Noty.button('NO', 'btn btn-error', () => {\r\n                    n.close();\r\n                })\r\n            ]\r\n        });\r\n        n.show()\r\n    }\r\n\r\n    const onDeleteFriend = (friendId) => {\r\n        let friendIdx = user.friends.findIndex(friend => friend._id === friendId)\r\n        user.friends.splice(friendIdx, 1)\r\n        props.updateUser(user)\r\n        UserService.updateFriend(user._id, friendId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadContacts()\r\n    }, [filterBy])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {user && <div>\r\n                <Filter\r\n                    filterBy={filterBy}\r\n                    setFilterBy={setFilterBy}\r\n                    moveToContact={handleKeyPress} />\r\n                {!!contacts && <ContactList showNotification={showNotification} onDeleteFriend={onDeleteFriend} onMoveToRoom={onMoveToRoom} loggedinUser={user} contacts={contacts.length ? contacts : user.friends} />}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts,\r\n    loadRoomById,\r\n    updateUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage);","function uploadImg(ev) {\r\n    const CLOUD_NAME = \"tamir\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n        if (ev.target) {\r\n            formData.append('file', ev.target.files[0])\r\n        } else {\r\n            formData.append('file', ev)\r\n        }\r\n    formData.append('upload_preset', 'u1inrfbp'); // second parameter is the upload preset\r\n\r\n    return fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData,\r\n            secure:true\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport default {\r\n    uploadImg\r\n}","import React, { useState } from 'react';\r\nimport {\r\n    FloatingMenu,\r\n    MainButton,\r\n    ChildButton,\r\n} from 'react-floating-button-menu';\r\nimport MdAdd from '@material-ui/icons/Add';\r\nimport MdClose from '@material-ui/icons/Clear';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport LocIcon from '@material-ui/icons/Room';\r\n\r\n// import SvgIcon from '@material-ui/core/SvgIcon';    //PROBABLY NOT NEEDED\r\n// import styled from 'styled-components' //PROBABLY NOT NEEDED\r\n\r\nexport default ({ setNoteType, setNoteInputType, setNoteData }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    return (\r\n        <FloatingMenu\r\n            slideSpeed={500}\r\n            direction=\"up\"\r\n            spacing={8}\r\n            isOpen={isOpen}\r\n            className=\"button-menu\"\r\n        >\r\n            <MainButton\r\n                iconResting={<MdAdd style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                iconActive={<MdClose style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                backgroundColor=\"black\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                size={56}\r\n            />\r\n            <ChildButton\r\n                icon={<TextFieldsIcon style={{ fontSize: 20, fill: '#51a255' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteText'); setIsOpen(!isOpen); setNoteInputType('InputText') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ImageIcon style={{ fontSize: 20, fill: '#28b5f2' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteImg'); setIsOpen(!isOpen); setNoteInputType('InputImg') }}\r\n            />\r\n            <ChildButton\r\n                icon={<VideocamIcon style={{ fontSize: 20, fill: '#ff0000' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteVideo'); setIsOpen(!isOpen); setNoteInputType('InputVideo') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ListIcon style={{ fontSize: 20, fill: '#ffa350' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteTodo'); setIsOpen(!isOpen); setNoteInputType('InputTodo'); setNoteData([]) }}\r\n            />\r\n              <ChildButton\r\n                icon={<LocIcon style={{ fontSize: 20, fill: '#800080' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteLoc'); setIsOpen(!isOpen); setNoteInputType('InputLoc'); setNoteData(null) }}\r\n            />\r\n        </FloatingMenu>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default ({ note, isEdit, textEdit, setTextEdit }) => {\r\n\r\n    return (\r\n        <div className=\"note-text\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            {isEdit\r\n                ? <input type=\"text\" onChange={(e) => setTextEdit(e.target.value)} />\r\n                : <p>{note.data}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n//Trying to animate the switch between edit and text. the problem is that altough its not edit mode \r\n// the input is shown. after the first time we switch isEdit the problem is fixed.import React, { useState } from 'react'\r\n// import { CSSTransition } from 'react-transition-group';\r\n\r\n// export default ({ note, isEdit, textEdit, setTextEdit, isNotEdit }) => {\r\n\r\n//     return (\r\n//         <div className=\"note-text\">\r\n//             {note.header && <h4>{note.header}</h4>}\r\n//             {/* {isEdit\r\n//                 ? <input type=\"text\" onChange={(e) => setTextEdit(e.target.value)} />\r\n//                 : <p>{note.data}</p>} */}\r\n//             <CSSTransition\r\n//                 classNames={'fade'}\r\n//                 timeout={300}\r\n//                 in={isEdit}>\r\n//                 <input type=\"text\" onChange={(e) => setTextEdit(e.target.value)} />\r\n//             </CSSTransition>\r\n//             <CSSTransition\r\n//                 classNames={'fade'}\r\n//                 timeout={300}\r\n//                 in={isNotEdit}>\r\n//                 <p>{note.data}</p>\r\n//             </CSSTransition>\r\n//             {isEdit ? <h1>true</h1> : <h1>false</h1>}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-img\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <img src={note.data} alt={note.data} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    const formattedVidLink = () => {\r\n        return 'https://www.youtube.com/embed/' + note.data\r\n    }\r\n    return (\r\n        <div className=\"note-video\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <iframe width=\"100%\" allow=\"fullscreen\" src={formattedVidLink()} title=\"Video Player\"></iframe>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, createRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport ProgressBar from '@ramonak/react-progress-bar';\r\n\r\nimport { UtilService } from '../../services/UtilService'\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport xmark from '../../assets/svg/cross.svg'\r\nimport ArrowIcon from '../../assets/svg/arrow.svg'\r\n\r\nimport { saveRoom } from '../../actions/RoomActions';\r\n//TODO: IMPROVE EDIT INPUT AND MINUS UI +++ reflect trough socket\r\n\r\nconst NoteTodo = ({ note, saveRoom, room, userId, isEdit, currTodoIdx, setCurrTodoIdx, updateNote, updateMembers }) => {\r\n\r\n    const [editedTodo, setEditedTodo] = useState('');\r\n    const [newTodo, setNewTodo] = useState('');\r\n    const [progress, setProgress] = useState(0)\r\n    const [isNewTodo, setIsNewTodo] = useState(false)\r\n\r\n    const editInputRef = createRef();\r\n\r\n    const toggleIsDone = async (idx) => {\r\n        if (isEdit) return\r\n        let noteCopy = JSON.parse(JSON.stringify(note))\r\n        noteCopy.data[idx].isDone = !noteCopy.data[idx].isDone\r\n        await updateNote(room._id, noteCopy)\r\n        updateMembers()\r\n    }\r\n    //*********CHECKPOINT */\r\n\r\n    const addTodo = async () => {\r\n        \r\n        let todoToAdd = {\r\n            text: newTodo,\r\n            isDone: false,\r\n            _id: UtilService.makeId(5)\r\n        }\r\n\r\n        let noteCopy = JSON.parse(JSON.stringify(note))\r\n        noteCopy.data.push(todoToAdd);\r\n        console.log(noteCopy);\r\n        await updateNote(room._id, noteCopy)\r\n        updateMembers()\r\n        setIsNewTodo(false)\r\n        setNewTodo('')\r\n    };\r\n\r\n    const removeTodo = async (idx) => {\r\n        let noteCopy = JSON.parse(JSON.stringify(note))\r\n        noteCopy.data.splice(idx, 1)\r\n        await updateNote(room._id, noteCopy)\r\n        updateMembers()\r\n    }\r\n\r\n    const culcProgress = () => {\r\n        let doneTodosCount = note.data.reduce((acc, todo) => {\r\n            if (todo.isDone) acc++\r\n            return acc;\r\n        }, 0);\r\n        let prog = parseInt(doneTodosCount / note.data.length * 100)\r\n        setProgress(prog)\r\n    }\r\n\r\n    useEffect(() => {\r\n        culcProgress()\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if (editInputRef.current) editInputRef.current.focus()\r\n        if (currTodoIdx !== '' && editInputRef.current) note.data[currTodoIdx].text = editedTodo\r\n    }, [editedTodo, currTodoIdx])\r\n\r\n    return (\r\n        <div className=\"note-todo\">\r\n            <div className=\"todo-header\">\r\n                {note.header && <h4>{note.header}</h4>}\r\n                {isEdit && <img src={PlusIcon} className=\"new-todo-btn\" onClick={() => { setIsNewTodo(true) }} />}\r\n            </div>\r\n            <ul>\r\n                {!!note.data.length && note.data.map((todo, idx) => {\r\n                    return (\r\n                        <li key={todo._id} onClick={() => {\r\n                            if (isEdit) {\r\n                                setCurrTodoIdx(idx);\r\n                                setEditedTodo(todo.text)\r\n                            }\r\n                            //later remove this func from template to so called \"methods\"\r\n                        }}>\r\n                            <div>\r\n                                <input type=\"checkbox\" onClick={(ev) => toggleIsDone(idx)} checked={todo.isDone} readOnly />\r\n                                {(currTodoIdx !== idx) && <span className={todo.isDone ? 'done' : ''} >{todo.text}</span>}\r\n                            </div>\r\n                            {(isEdit && currTodoIdx === idx) && <input type=\"text\" value={editedTodo} ref={editInputRef} onChange={(e) => { setEditedTodo(e.target.value); }} />}\r\n                            {isEdit && <img src={xmark} className=\"remove-todo-btn\" onClick={(ev) => {ev.stopPropagation(); removeTodo(idx); }} />}\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n            {isNewTodo && <div className=\"add-todo-container\">\r\n                <input type=\"text\" className=\"add-todo-input\" placeholder=\"New Todo\" onChange={e => setNewTodo(e.target.value)} />\r\n                <img src={ArrowIcon} className=\"add-todo-btn\" onClick={() => addTodo()} />\r\n            </div>}\r\n            <div className=\"progress-bar\">\r\n                <ProgressBar completed={progress} labelSize={!progress ? '0' : '0.75rem'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//checkbox read only prop makes error go away, we will let it stay for a while\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    saveRoom,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTodo);","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nimport PinIcon from '../../assets/svg/pin.svg'\r\n\r\n\r\n\r\nexport default ({ note }) => {\r\n    const mapsSelector = () => {\r\n        if /* if we're on iOS, open in Apple Maps */\r\n            ((navigator.platform.indexOf(\"iPhone\") != -1) ||\r\n            (navigator.platform.indexOf(\"iPod\") != -1) ||\r\n            (navigator.platform.indexOf(\"iPad\") != -1))\r\n            window.open(`maps://maps.google.com/maps?daddr=${note.data.coords.lat},${note.data.coords.lng}&amp;ll=`);\r\n\r\n        else /* else use Google */\r\n            window.open(`https://maps.google.com/maps?daddr=${note.data.coords.lat},${note.data.coords.lng}&amp;ll=\"`);\r\n    }\r\n\r\n    const renderMarkers = (map, maps) => {\r\n        let marker = new maps.Marker({\r\n            position: { lat: note.data.coords.lat, lng: note.data.coords.lng },\r\n            map,\r\n            icon: PinIcon\r\n        });\r\n        return marker;\r\n    };\r\n\r\n    return (\r\n        <div className=\"note-loc\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            {note.data.name && <h6>{note.data.name}</h6>}\r\n            {note && <div style={{ height: '30vh', width: '100%' }} onClick={mapsSelector}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA' }}\r\n                    center={note.data.coords}\r\n                    yesIWantToUseGoogleMapApiInternals={true}\r\n                    defaultZoom={18}\r\n                    distanceToMouse={() => { }}\r\n                    onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n                >\r\n                </GoogleMapReact>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default ({ isPinned }) => {\r\n    return <svg className={isPinned ? 'note-pin-icon pinned' : 'note-pin-icon'}  enableBackground=\"new 0 0 494.982 494.982\" viewBox=\"0 0 494.982 494.982\"  xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g>\r\n    <g>\r\n    <path className=\"clr clr-5\" d=\"m15.871 486.565 28.585-18.848c26.039-17.169 50.274-36.934 72.332-58.992l106.088-106.088-30.521-30.521-106.087 106.089c-22.058 22.058-41.824 46.293-58.992 72.332l-18.848 28.585c-3.227 4.894 2.549 10.67 7.443 7.443z\" />\r\n    <path className=\"clr clr-4\" d=\"m55.526 450.537c17.168-26.039 36.934-50.274 58.992-72.332l91.963-91.963-14.125-14.125-106.088 106.088c-22.058 22.058-41.824 46.293-58.992 72.332l-18.848 28.585c-3.227 4.894 2.549 10.67 7.443 7.443l28.126-18.545z\" />\r\n    <path className=\"clr clr-3\" d=\"m431.826 139.878c-8.131-8.131-68.579-68.579-76.711-76.711l-108.84 101.993 83.559 83.559z\" />\r\n    <path className=\"clr clr-2\" d=\"m391.099 99.151c-16.327-16.327-32.106-32.106-35.984-35.984l-108.84 101.993 35.984 35.984z\" />\r\n    <path className=\"clr clr-1\" d=\"m479.42 98.532-82.96-82.96c-10.726-10.726-28.277-10.726-39.003 0l-6.727 6.728c-10.726 10.726-10.726 28.277 0 39.003l82.96 82.96c10.726 10.726 28.277 10.726 39.003 0l6.728-6.728c10.725-10.725 10.725-28.277-.001-39.003z\" />\r\n    <path className=\"clr clr-3\" d=\"m398.94 72.924 8.231-8.23c7.855-7.855 18.701-11.002 28.958-9.453l-39.668-39.668c-10.726-10.726-28.277-10.726-39.003 0l-6.728 6.728c-10.726 10.726-10.726 28.277 0 39.003l38.508 38.508c-.857-9.628 2.374-19.56 9.702-26.888z\" />\r\n    <path className=\"clr clr-1\" d=\"m327.702 384.766c18.417-33.878 23.816-64.549 24.813-85.94.824-17.688-5.84-34.896-18.361-47.417l-90.57-90.57c-12.521-12.521-29.729-19.185-47.417-18.361-21.391.997-52.062 6.396-85.94 24.813-7.866 4.277-9.384 14.942-3.053 21.273l199.255 199.255c6.331 6.331 16.997 4.813 21.273-3.053z\" />\r\n    <path className=\"clr clr-3\" d=\"m165.482 223.656c32.836-20.465 61.329-28.735 80.898-31.985 12.602-2.093 24.431-.004 33.785 5.749l-36.581-36.581c-12.521-12.521-29.729-19.185-47.417-18.361-21.391.997-52.062 6.396-85.941 24.813-7.866 4.277-9.384 14.942-3.053 21.273l51.003 51.003c-1.541-5.246 1.296-12.165 7.306-15.911z\" /></g>\r\n    <path d=\"m2.152 474.996c-3.396 5.159-2.718 11.812 1.649 16.181 4.369 4.368 11.022 5.046 16.183 1.65 33.379-21.971 63.783-40.488 101.729-78.435l38.352-38.352c2.929-2.93 2.929-7.678 0-10.607-2.93-2.928-7.678-2.928-10.607 0l-38.352 38.353c-36.021 36.022-66.054 54.582-90.754 70.841 16.023-24.346 34.617-54.531 70.841-90.755l100.349-100.35 19.915 19.915-37.25 37.249c-2.929 2.93-2.929 7.678 0 10.607 2.93 2.928 7.678 2.928 10.607 0l37.249-37.249 79.063 79.063c9.885 9.882 26.49 7.506 33.165-4.775 19.49-35.851 24.743-68.28 25.717-89.174.884-18.978-6.019-37.569-18.966-51.399l89.811-95.967c13.697 11.335 34.221 10.681 47.143-2.241l6.729-6.729c13.676-13.677 13.676-35.933-.001-49.61l-31.18-31.179c-2.927-2.927-7.676-2.93-10.606.001-2.929 2.929-2.929 7.677.001 10.606l31.179 31.178c7.829 7.83 7.829 20.568.001 28.397l-6.729 6.728c-7.826 7.829-20.567 7.829-28.396 0-8.836-8.836-71.82-71.82-82.96-82.96-7.806-7.806-7.804-20.593.001-28.396l6.728-6.729c7.805-7.805 20.593-7.804 28.396.001l27.031 27.031c2.93 2.928 7.678 2.928 10.607 0 2.929-2.93 2.929-7.678 0-10.607l-27.031-27.03c-13.67-13.67-35.942-13.667-49.61-.001l-6.727 6.728c-12.905 12.905-13.594 33.428-2.242 47.144l-95.967 89.811c-13.828-12.947-32.404-19.842-51.4-18.966-20.892.974-53.322 6.226-89.173 25.716-12.283 6.677-14.655 23.286-4.774 33.166l79.063 79.063-100.351 100.351c-38.07 38.073-56.665 68.656-78.433 101.731zm351.53-400.15 66.449 66.45-89.66 95.806-72.595-72.595zm-241.203 108.399c-2.794-2.792-2.132-7.498 1.331-9.381 33.35-18.13 63.385-23.009 82.708-23.909 15.524-.727 30.756 5.165 41.764 16.172l90.57 90.57c11.002 11.001 16.896 26.224 16.172 41.763-.9 19.323-5.779 49.358-23.91 82.708-1.874 3.443-6.569 4.145-9.38 1.332-4.936-4.936-194.483-194.483-199.255-199.255z\"/></g></svg>\r\n}\r\n\r\n\r\n// reds:\r\n// clr-1:#FB5252\r\n// clr-2:#F04141\r\n// clr-3:#FF4A3C\r\n// clr-4:#b1dbfc\r\n// clr-5:#dfebfa","import React from 'react';\r\n\r\n\r\nexport default ({ fill }) => {\r\n\r\n    return <svg className=\"circle-icon\" style={{ fill }} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 512 512\" xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"color-pallete-icon\" enableBackground=\"new 0 0 512.037 512.037\" viewBox=\"0 0 512.037 512.037\" xmlns=\"http://www.w3.org/2000/svg\"><g>\r\n        <g clipRule=\"evenodd\" fillRule=\"evenodd\">\r\n            <path d=\"m237.033 233.985 41.012 41.013 64.978-69.184 153.518-163.455c7.154-7.617 7.389-19.481 0-26.87s-19.253-7.154-26.87 0l-163.455 153.519z\" fill=\"#6d91ac\" />\r\n            <path d=\"m278.045 274.998-41.012-41.013c-68.762 18.425-23.075 64.087-57.278 98.291 28.514 16.463 98.291-4.426 98.29-57.278z\" fill=\"#f4e9e2\" />\r\n            <path d=\"m179.754 332.276c34.203-34.203-11.484-79.866 57.278-98.291l69.183-64.977c-7.007-13.059-10.558-27.482-10.655-41.924-.175-26.127 24.949-56.528-41.774-63.75-63.943-6.921-130.337 14.12-179.356 63.14-85.915 85.916-85.915 225.211 0 311.127 85.916 85.916 225.211 85.916 311.127 0 49.019-49.019 70.061-115.413 63.14-179.356-7.222-66.723-37.623-41.6-63.75-41.774-14.442-.097-28.866-3.648-41.925-10.655l-64.978 69.184c.002 52.85-69.775 73.739-98.29 57.276zm5.074-164.71c-15.307 6.34-32.857-.929-39.197-16.236s.929-32.856 16.236-39.197 32.857.929 39.198 16.236c6.339 15.307-.93 32.856-16.237 39.197zm-66.154 66.13c-6.34 15.307-23.89 22.576-39.197 16.236-15.307-6.341-22.576-23.89-16.236-39.197s23.89-22.577 39.197-16.236 22.576 23.89 16.236 39.197zm-.017 93.538c6.34 15.307-.929 32.857-16.236 39.197s-32.856-.929-39.197-16.236c-6.34-15.307.929-32.857 16.236-39.197s32.857.929 39.197 16.236zm159.669 66.171c15.307-6.34 32.857.929 39.198 16.236 6.34 15.307-.929 32.856-16.236 39.197s-32.857-.929-39.197-16.236c-6.341-15.307.928-32.857 16.235-39.197zm-93.539-.016c15.307 6.34 22.576 23.89 16.236 39.197-6.341 15.307-23.89 22.576-39.197 16.236-15.308-6.341-22.577-23.89-16.236-39.197 6.341-15.308 23.89-22.577 39.197-16.236zm159.693-66.114c6.34-15.307 23.89-22.577 39.197-16.236 15.307 6.34 22.576 23.889 16.236 39.197-6.341 15.307-23.89 22.577-39.197 16.236-15.308-6.341-22.577-23.89-16.236-39.197z\" fill=\"#ddb9a3\" />\r\n            <path d=\"m145.63 151.33c6.341 15.307 23.89 22.576 39.197 16.236 15.307-6.341 22.576-23.89 16.236-39.197s-23.89-22.577-39.198-16.236c-15.306 6.34-22.575 23.89-16.235 39.197z\" fill=\"#000\" />\r\n            <path d=\"m118.674 233.696c6.34-15.307-.929-32.856-16.236-39.197s-32.857.929-39.197 16.236c-6.341 15.307.929 32.856 16.236 39.197 15.307 6.34 32.856-.929 39.197-16.236z\" fill=\"#ffa350\" />\r\n            <path d=\"m118.657 327.234c-6.341-15.307-23.89-22.577-39.197-16.236s-22.577 23.89-16.236 39.197 23.89 22.576 39.197 16.236 22.576-23.889 16.236-39.197z\" fill=\"#f78888\" />\r\n            <path d=\"m184.787 393.389c-15.307-6.341-32.856.929-39.197 16.236s.929 32.857 16.236 39.197 32.856-.929 39.197-16.236c6.341-15.308-.929-32.857-16.236-39.197z\" fill=\"#fff59d\" />\r\n            <path d=\"m278.326 393.405c-15.307 6.34-22.576 23.89-16.236 39.197 6.341 15.307 23.89 22.577 39.197 16.236s22.576-23.89 16.236-39.197-23.89-22.576-39.197-16.236z\" fill=\"#90ccf4\" />\r\n            <path d=\"m344.48 327.275c-6.341 15.307.929 32.856 16.236 39.197s32.857-.929 39.197-16.236-.929-32.856-16.236-39.197-32.857.929-39.197 16.236z\" fill=\"#4caf50\" /></g>\r\n        <g>\r\n            <path d=\"m75.633 301.76c-20.377 8.44-30.088 31.886-21.648 52.263 6.375 15.388 21.303 24.693 37.008 24.693 5.091 0 10.267-.979 15.255-3.045 20.377-8.44 30.088-31.885 21.648-52.262-8.441-20.378-31.884-30.09-52.263-21.649zm22.961 55.433c-10.188 4.219-21.911-.635-26.132-10.824-4.22-10.189.636-21.912 10.824-26.132 2.495-1.033 5.081-1.522 7.627-1.522 7.852 0 15.317 4.653 18.504 12.347 4.221 10.188-.634 21.911-10.823 26.131z\" />\r\n            <path d=\"m54.002 237.522c4.089 9.872 11.777 17.56 21.648 21.648 4.99 2.067 10.163 3.045 15.255 3.045 15.704 0 30.634-9.306 37.007-24.693 8.44-20.377-1.271-43.822-21.647-52.262-9.872-4.089-20.744-4.089-30.615 0s-17.559 11.777-21.647 21.648c-4.09 9.871-4.09 20.743-.001 30.614zm18.478-22.96c2.044-4.936 5.888-8.78 10.824-10.824 2.468-1.022 5.061-1.533 7.653-1.533s5.187.511 7.654 1.533c10.188 4.22 15.044 15.942 10.824 26.131-4.221 10.188-15.944 15.045-26.131 10.824-4.936-2.044-8.78-5.888-10.824-10.824-2.045-4.935-2.045-10.371 0-15.307z\" />\r\n            <path d=\"m158.04 176.805c4.936 2.044 10.121 3.066 15.308 3.066 5.185 0 10.372-1.022 15.307-3.066 9.871-4.089 17.559-11.777 21.648-21.648 4.088-9.871 4.088-20.744 0-30.615s-11.776-17.559-21.647-21.648-20.744-4.089-30.615 0c-9.872 4.088-17.56 11.776-21.648 21.648-4.088 9.871-4.088 20.744 0 30.614 4.087 9.871 11.775 17.56 21.647 21.649zm-3.171-44.61c2.044-4.936 5.888-8.779 10.824-10.824 2.468-1.022 5.06-1.533 7.653-1.533s5.186.511 7.654 1.533c4.936 2.044 8.779 5.888 10.824 10.824 2.044 4.936 2.044 10.372 0 15.307-2.044 4.936-5.888 8.78-10.824 10.824-4.936 2.044-10.372 2.044-15.308 0s-8.779-5.889-10.824-10.825c-2.043-4.934-2.043-10.37.001-15.306z\" />\r\n            <path d=\"m157.999 458.06c4.99 2.067 10.163 3.045 15.255 3.045 15.704 0 30.634-9.306 37.007-24.693 4.089-9.871 4.089-20.744 0-30.615s-11.777-17.56-21.648-21.648c-9.872-4.089-20.744-4.089-30.615 0s-17.559 11.777-21.648 21.648c-8.439 20.378 1.272 43.823 21.649 52.263zm-3.17-44.608c2.044-4.936 5.889-8.78 10.824-10.824 2.468-1.022 5.061-1.533 7.653-1.533s5.186.511 7.654 1.533c4.935 2.044 8.779 5.888 10.823 10.824s2.044 10.372 0 15.308c-4.22 10.188-15.941 15.043-26.131 10.824-10.188-4.222-15.043-15.944-10.823-26.132z\" />\r\n            <path d=\"m274.499 458.077c4.936 2.044 10.121 3.066 15.307 3.066s10.372-1.022 15.307-3.067c9.872-4.088 17.56-11.776 21.648-21.648 4.088-9.871 4.088-20.744 0-30.614-4.088-9.871-11.776-17.56-21.648-21.648-9.871-4.089-20.743-4.089-30.614 0-20.377 8.44-30.088 31.885-21.648 52.263 4.089 9.871 11.777 17.559 21.648 21.648zm7.654-55.433c2.468-1.022 5.061-1.533 7.654-1.533s5.186.511 7.654 1.533c4.936 2.044 8.779 5.888 10.824 10.824 2.044 4.936 2.044 10.372 0 15.307-2.044 4.936-5.888 8.779-10.824 10.824s-10.372 2.044-15.307 0c-4.936-2.044-8.78-5.888-10.824-10.824-4.221-10.189.634-21.911 10.823-26.131z\" />\r\n            <path d=\"m372.144 378.756c15.704 0 30.633-9.305 37.007-24.693 4.089-9.871 4.089-20.744 0-30.615-4.089-9.872-11.777-17.56-21.648-21.648-20.377-8.441-43.821 1.271-52.262 21.647-8.44 20.377 1.271 43.822 21.647 52.262 4.99 2.068 10.164 3.047 15.256 3.047zm-18.426-47.654c4.22-10.188 15.943-15.043 26.131-10.824 10.188 4.22 15.044 15.943 10.824 26.131s-15.94 15.044-26.132 10.824c-10.187-4.22-15.042-15.942-10.823-26.131z\" />\r\n            <path d=\"m503.612 8.418c-11.14-11.14-29.056-11.235-40.788-.218l-153.092 143.787c-2.685-8.018-4.114-16.474-4.171-24.97-.032-4.704 1.005-9.935 2.103-15.473 2.426-12.244 5.176-26.121-3.679-38.173-7.985-10.868-23.594-17.216-49.122-19.979-53.057-5.746-106.697 7.146-151.041 36.294-4.615 3.034-5.897 9.234-2.864 13.849s9.235 5.897 13.849 2.864c40.475-26.605 89.448-38.369 137.903-33.124 23.692 2.565 32.195 7.907 35.156 11.938 3.398 4.625 2.334 11.564.178 22.443-1.243 6.273-2.529 12.76-2.484 19.494.091 13.626 3.004 27.178 8.454 39.597l-62.038 58.267c-45.251 13.055-46.243 39.977-47.04 61.685-.537 14.623-1 27.252-12.254 38.506-2.198 2.199-3.249 5.294-2.843 8.376.406 3.083 2.222 5.801 4.915 7.355 7.952 4.591 18.161 6.829 29.188 6.829 15.456 0 32.515-4.398 47.203-12.878 22.479-12.979 35.411-32.679 36.773-55.795l57.365-61.078c12.421 5.451 25.968 8.364 39.597 8.455 6.758.047 13.221-1.241 19.494-2.483 10.881-2.155 17.82-3.219 22.444.178 4.03 2.961 9.373 11.464 11.938 35.156 6.886 63.618-15.082 126.021-60.27 171.208-81.879 81.879-215.105 81.879-296.984 0-70.092-70.09-81.507-180.985-27.142-263.682 3.034-4.615 1.752-10.815-2.863-13.849-4.615-3.035-10.816-1.753-13.849 2.863-28.631 43.552-41.621 96.267-36.578 148.438 5.112 52.886 28.654 102.738 66.29 140.374 43.441 43.441 101.2 67.365 162.635 67.365s119.193-23.924 162.634-67.365c49.492-49.491 73.552-117.833 66.011-187.503-2.763-25.528-9.112-41.136-19.979-49.121-12.052-8.855-25.93-6.105-38.174-3.679-5.538 1.097-10.771 2.144-15.473 2.102-8.498-.057-16.952-1.486-24.97-4.171l143.786-153.094c11.018-11.731 10.923-29.647-.218-40.788zm-262.467 309.149c-15.374 8.876-32.501 11.493-44.984 9.672 7.8-13.57 8.323-27.813 8.763-39.806.725-19.763 1.231-33.205 29.232-42.183l33.719 33.72c-1.761 21.055-17.265 33.132-26.73 38.597zm248.107-282.054-211.432 225.118-26.42-26.42 225.117-211.432c3.809-3.577 9.499-3.673 12.953-.218 3.455 3.455 3.359 9.144-.218 12.952z\" />\r\n            <path d=\"m74.438 136.473c5.523 0 10-4.477 10-10s-4.477-10-10-10h-.007c-5.523 0-9.996 4.477-9.996 10s4.48 10 10.003 10z\" />\r\n        </g>\r\n    </g>\r\n    </svg>\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default ({ isStarred }) => {\r\n    console.log('!$@$#@IS STARRED$%@$%#', isStarred);\r\n    return <svg className={isStarred ? 'star-icon starred' : 'star-icon'} viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" /></svg>\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport NotePinIcon from '../icons/NotePinIcon'\r\nimport CircleIcon from '../icons/CircleIcon'\r\nimport ColorPalleteIcon from '../icons/ColorPaletteIcon'\r\nimport StarIcon from '../icons/StarIcon'\r\n\r\nexport default ({ room, note, user, toggleStarredNote, changeNoteColor, toggleNotePin, updateMembers, isStarredPage, roomId }) => {\r\n    const [isPalleteOpen, setIsPalleteOpen] = useState(false)\r\n    const [isStarred, setIsStarred] = useState(false)\r\n    const colors = ['#ffa350', '#f78888', '#fff59d', '#90ccf4', '#4caf50']\r\n\r\n    const checkIsStarred = () => {//We can make preformance better by removing from the array every starred we found \r\n        const ans = user.starredNotes.some(starredNote => starredNote.noteId === note._id)\r\n        setIsStarred(ans)\r\n    }\r\n\r\n\r\n    const handleStarClicked = async () => {\r\n        setIsStarred(!isStarred)\r\n        await toggleStarredNote(user._id, roomId, note._id, isStarredPage)\r\n    }\r\n\r\n    const handleColorClicked = async (color) => {\r\n        await changeNoteColor(roomId, note._id, color);\r\n        setIsPalleteOpen(false)\r\n        if (!isStarredPage) updateMembers();\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        checkIsStarred()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"features-container\">\r\n            <i onClick={handleStarClicked}><StarIcon isStarred={isStarred} /></i>\r\n            {!isStarredPage && <i onClick={async () => { await toggleNotePin(roomId, note._id); updateMembers(); }}><NotePinIcon isPinned={note.isPinned} /></i>}\r\n            <div className=\"color-pallete\">\r\n                <i onClick={() => setIsPalleteOpen(!isPalleteOpen)}><ColorPalleteIcon /></i>\r\n\r\n                <TransitionGroup component={null} ><div className=\"colors-container\">{\r\n                    colors.map((color, idx) =>\r\n                        (<CSSTransition\r\n                            key={idx}\r\n                            classNames=\"fade\"\r\n                            in={isPalleteOpen}\r\n                            timeout={{ enter: 300, exit: 300 }}\r\n                            unmountOnExit>\r\n                            <i onClick={() => handleColorClicked(color)}><CircleIcon fill={color} /></i>\r\n                        </CSSTransition>\r\n                        )\r\n                    )\r\n                }\r\n                </div></TransitionGroup>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n// import EmptyStarIcon from '../../assets/svg/empty-star.svg'\r\n\r\n// import NotePinIcon from '../icons/NotePinIcon'\r\n// import CircleIcon from '../icons/CircleIcon'\r\n// import ColorPalleteIcon from '../icons/ColorPaletteIcon'\r\n// import StarIcon from '../icons/StarIcon'\r\n\r\n// export default ({ room, togglePinned, note, user, setNoteColor, toggleStarredNote, changeNoteColor, toggleNotePin, updateMembers, isStarredPage }) => {\r\n//     const [isPalleteOpen, setIsPalleteOpen] = useState(false)\r\n//     const [isStarred, setIsStarred] = useState(false)\r\n//     const colors = ['#ffa350', '#f78888', '#fff59d', '#90ccf4', '#4caf50']\r\n\r\n\r\n//     // const checkIsStarred = (note) => {\r\n//     //     return !user.starredNotes ? setStarSrc(EmptyStarIcon) : user.starredNotes.find(starredNote => { return starredNote._id === note._id ? setStarSrc(StarIcon) : setStarSrc(EmptyStarIcon) })\r\n//     // }\r\n\r\n//     // const checkIsStarred = (note) => {\r\n//     //     return user.starredNotes.some(starredNote => {\r\n//     //         if (starredNote.noteId === 'aezVfVnkgap19GsM4jlPRbKM') console.log('&&&&starred:', starredNote.noteId, 'Note', note._id);\r\n//     //         let ans = starredNote.noteId === note._id\r\n//     //         console.log('&&&&ans:', ans);\r\n//     //         return ans\r\n//     //     })\r\n//     // }\r\n\r\n\r\n//     const checkIsStarred = () => {\r\n//         const ans = user.starredNotes.some(starredNote => starredNote.noteId === note._id)\r\n//         setIsStarred(ans)\r\n//     }\r\n\r\n//     const handleStarClicked = async () => {\r\n//         let roomId = getRoomId();\r\n//         await toggleStarredNote(user._id, roomId, note._id, isStarredPage)\r\n//     }\r\n\r\n//     const handleColorClicked = async (color) => {\r\n//         let roomId = getRoomId();\r\n//         await changeNoteColor(roomId, note._id, color);\r\n//         setIsPalleteOpen(false)\r\n//         if (!isStarredPage) updateMembers();\r\n//     }\r\n\r\n//     const getRoomId = () => {\r\n//         return isStarredPage ? note.roomId : room._id\r\n//     }\r\n\r\n\r\n//     // useEffect(() => {\r\n//     //     checkIsStarred()\r\n//     // }, [])\r\n\r\n\r\n\r\n//     return (\r\n//         <div className=\"features-container\">\r\n//             <h1>{checkIsStarred(note)}</h1>\r\n//             <i onClick={handleStarClicked}><StarIcon isStarred={isStarred} /></i>\r\n//             {!isStarredPage && <i onClick={async () => { await toggleNotePin(room._id, note._id); updateMembers(); }}><NotePinIcon isPinned={note.isPinned} /></i>}\r\n//             <div className=\"color-pallete\">\r\n//                 <i onClick={() => setIsPalleteOpen(!isPalleteOpen)}><ColorPalleteIcon /></i>\r\n\r\n//                 <TransitionGroup component={null} ><div className=\"colors-container\">{\r\n//                     colors.map((color, idx) =>\r\n//                         (<CSSTransition\r\n//                             key={idx}\r\n//                             classNames=\"fade\"\r\n//                             in={isPalleteOpen}\r\n//                             timeout={{ enter: 300, exit: 300 }}\r\n//                             unmountOnExit>\r\n//                             <i onClick={() => handleColorClicked(color)}><CircleIcon fill={color} /></i>\r\n//                         </CSSTransition>\r\n//                         )\r\n//                     )\r\n//                 }\r\n//                 </div></TransitionGroup>\r\n//             </div>\r\n//         </div >\r\n//     )\r\n// }\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <svg className=\"remove-icon\"  viewBox=\"0 0 512 512\"  xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m256 512c-141.160156 0-256-114.839844-256-256s114.839844-256 256-256 256 114.839844 256 256-114.839844 256-256 256zm0-475.429688c-120.992188 0-219.429688 98.4375-219.429688 219.429688s98.4375 219.429688 219.429688 219.429688 219.429688-98.4375 219.429688-219.429688-98.4375-219.429688-219.429688-219.429688zm0 0\" /><path d=\"m347.429688 365.714844c-4.679688 0-9.359376-1.785156-12.929688-5.359375l-182.855469-182.855469c-7.144531-7.144531-7.144531-18.714844 0-25.855469 7.140625-7.140625 18.714844-7.144531 25.855469 0l182.855469 182.855469c7.144531 7.144531 7.144531 18.714844 0 25.855469-3.570313 3.574219-8.246094 5.359375-12.925781 5.359375zm0 0\" /><path d=\"m164.570312 365.714844c-4.679687 0-9.355468-1.785156-12.925781-5.359375-7.144531-7.140625-7.144531-18.714844 0-25.855469l182.855469-182.855469c7.144531-7.144531 18.714844-7.144531 25.855469 0 7.140625 7.140625 7.144531 18.714844 0 25.855469l-182.855469 182.855469c-3.570312 3.574219-8.25 5.359375-12.929688 5.359375zm0 0\" /></svg>)\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"edit-icon\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 477.873 477.873\"  xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M392.533,238.937c-9.426,0-17.067,7.641-17.067,17.067V426.67c0,9.426-7.641,17.067-17.067,17.067H51.2\r\n           c-9.426,0-17.067-7.641-17.067-17.067V85.337c0-9.426,7.641-17.067,17.067-17.067H256c9.426,0,17.067-7.641,17.067-17.067\r\n           S265.426,34.137,256,34.137H51.2C22.923,34.137,0,57.06,0,85.337V426.67c0,28.277,22.923,51.2,51.2,51.2h307.2\r\n           c28.277,0,51.2-22.923,51.2-51.2V256.003C409.6,246.578,401.959,238.937,392.533,238.937z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M458.742,19.142c-12.254-12.256-28.875-19.14-46.206-19.138c-17.341-0.05-33.979,6.846-46.199,19.149L141.534,243.937\r\n           c-1.865,1.879-3.272,4.163-4.113,6.673l-34.133,102.4c-2.979,8.943,1.856,18.607,10.799,21.585\r\n           c1.735,0.578,3.552,0.873,5.38,0.875c1.832-0.003,3.653-0.297,5.393-0.87l102.4-34.133c2.515-0.84,4.8-2.254,6.673-4.13\r\n           l224.802-224.802C484.25,86.023,484.253,44.657,458.742,19.142z M434.603,87.419L212.736,309.286l-66.287,22.135l22.067-66.202\r\n           L390.468,43.353c12.202-12.178,31.967-12.158,44.145,0.044c5.817,5.829,9.095,13.72,9.12,21.955\r\n           C443.754,73.631,440.467,81.575,434.603,87.419z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"save-icon\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m490.647 133.435c-.101-.103-128.128-129.127-128.02-129.019-2.927-2.938-6.813-4.416-10.627-4.416-13.006 0-293.619 0-305 0-16.542 0-30 13.458-30 30v452c0 16.542 13.458 30 30 30h418c16.542 0 30-13.458 30-30v-338c0-3.958-1.564-7.755-4.353-10.565zm-217.647-103.435v66c0 8.284 6.716 15 15 15s15-6.716 15-15v-66h34v115h-162v-115zm192 452h-418v-452h98v130c0 8.284 6.716 15 15 15h192c8.284 0 15-6.716 15-15v-108.587l98 98.766z\" /><path d=\"m96 241c-8.284 0-15 6.716-15 15v176c0 8.284 6.716 15 15 15h320c8.284 0 15-6.716 15-15v-176c0-8.284-6.716-15-15-15zm305 176h-290v-146h290z\" /><path d=\"m160 335h48c8.284 0 15-6.716 15-15s-6.716-15-15-15h-48c-8.284 0-15 6.716-15 15s6.716 15 15 15z\" /></g></svg>\r\n\r\n\r\n}\r\n","import React, { useEffect, useState, createRef, useCallback } from 'react'\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Moment from 'react-moment';\r\n\r\nimport NoteText from \"./NoteText\";\r\nimport NoteImg from \"./NoteImg\";\r\nimport NoteVideo from \"./NoteVideo\";\r\nimport NoteTodo from \"./NoteTodo\";\r\nimport NoteLoc from \"./NoteLoc\";\r\nimport Features from \"./Features\";\r\n\r\nimport RemoveIcon from \"../../cmps/icons/RemoveIcon\";\r\nimport EditIcon from \"../../cmps/icons/EditIcon\";\r\nimport SaveIcon from \"../../cmps/icons/SaveIcon\";\r\n\r\nimport AvatarLoader from '../AvatarLoader'\r\nimport { changeNoteColor } from '../../actions/RoomActions';\r\nimport { Note } from '@material-ui/icons';\r\n\r\n\r\nexport default ({ room, note, user, removeNote, saveRoomChanges, togglePinned, toggleStarredNote, changeNoteColor, toggleNotePin, updateNote, updateMembers, isStarredPage }) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [currTodoIdx, setCurrTodoIdx] = useState(null);\r\n    const [textEdit, setTextEdit] = useState('')\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    const cmps = {\r\n        NoteText,\r\n        NoteImg,\r\n        NoteVideo,\r\n        NoteTodo,\r\n        NoteLoc\r\n    }\r\n\r\n    const NoteType = cmps[note.type];\r\n\r\n    const noteRef = createRef();\r\n\r\n    const setNoteColor = (color) => {//DELETE\r\n        note.bgColor = color;\r\n        saveRoomChanges();\r\n    };\r\n\r\n    const paintNote = () => {//KEEP\r\n        if (note.bgColor && noteRef.current) noteRef.current.style.backgroundColor = note.bgColor\r\n    }\r\n\r\n    const saveNoteEdits = async (type) => {\r\n        let noteCopy = JSON.parse(JSON.stringify(note));\r\n        (type === 'NoteText' && textEdit) ? noteCopy.data = textEdit : setCurrTodoIdx('');\r\n        await updateNote(room._id, noteCopy);\r\n        updateMembers();\r\n    }\r\n\r\n\r\n    const handleRemoveClicked = async () => {\r\n        let roomId = getRoomId()\r\n        await removeNote(roomId, note._id); \r\n        if (!isStarredPage) updateMembers();\r\n    }\r\n\r\n    const getRoomId = () => { //MAYBE SHOULD BE IN PAGE CMP\r\n        return isStarredPage ? note.roomId : room._id\r\n    }\r\n\r\n\r\n    const onLoad = useCallback(() => {\r\n        console.log(\"loaded\");\r\n        setIsLoaded(true);\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (note.createdBy._id !== user._id) return\r\n        if (note.createdBy.imgUrl !== user.imgUrl) {\r\n            note.createdBy.imgUrl = user.imgUrl\r\n            saveRoomChanges()\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        paintNote();\r\n        if (note.createdBy._id !== user._id) return;\r\n        if (note.createdBy.imgUrl !== user.imgUrl) {\r\n            note.createdBy.imgUrl = user.imgUrl;\r\n            saveRoomChanges();\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        paintNote();\r\n    }, [note.bgColor]);\r\n\r\n    return (\r\n        <div className=\"note-preview\" style={{ backgroudColor: note.bgColor }}>\r\n            <div className={user._id === note.createdBy._id ? 'user-container' : 'friend-container'}>\r\n                <img src={note.createdBy.imgUrl} alt=\"Note creator avatar\" className=\"avatar avatar-s\" onLoad={onLoad} style={{ display: isLoaded ? 'block' : 'none' }} />\r\n                {!isLoaded && <AvatarLoader />}\r\n                <div className=\"note-container\" ref={noteRef}>\r\n                    <div className=\"note-header\">\r\n                        <div>\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && !isEdit) && <i onClick={() => setIsEdit(true)}><EditIcon /></i>}\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && isEdit) && <i onClick={() => { setIsEdit(false); saveNoteEdits(note.type) }}><SaveIcon /></i>}\r\n                            <i onClick={handleRemoveClicked}><RemoveIcon /></i>\r\n\r\n                        </div>\r\n                        <Moment format=\"MM/DD/YY ,HH:mm\">{note.createdAt}</Moment>\r\n                    </div>\r\n                    <NoteType note={note} user={user} isEdit={isEdit} currTodoIdx={currTodoIdx} setCurrTodoIdx={setCurrTodoIdx} textEdit={textEdit} setTextEdit={setTextEdit} updateNote={updateNote} updateMembers={updateMembers} />\r\n                    <Features room={room} togglePinned={togglePinned} note={note} user={user} changeNoteColor={changeNoteColor} toggleNotePin={toggleNotePin} setNoteColor={setNoteColor} toggleStarredNote={toggleStarredNote} updateMembers={updateMembers} isStarredPage={isStarredPage} roomId={getRoomId()} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport NotePreview from './NotePreview'\r\n\r\nexport default ({ room, notes, user, removeNote, saveRoomChanges, togglePinned, setNoteType, toggleStarredNote, changeNoteColor, toggleNotePin, updateNote, updateMembers, isStarredPage }) => {\r\nconsole.log('notesnotesnotesnotesnotes',notes);\r\n    // const [notesForDisplay, setNotesForDisplay] = useState([])\r\n\r\n    // useEffect(() => {\r\n    //     const fixedNotes = []\r\n    //     notes.map(note => {\r\n    //         user.pinnedNotes.find(id => id === note._id) ?\r\n    //             fixedNotes.unshift(note) : fixedNotes.push(note)\r\n    //     })\r\n    //     setNotesForDisplay(fixedNotes)\r\n    // }, [notes])\r\n\r\n    return (\r\n\r\n        <div className=\"note-list\">\r\n        {/* <div className=\"note-list\" onClick={() => setNoteType('')}> */}\r\n            <TransitionGroup component={null}>\r\n                {notes.map((note) =>\r\n                    <CSSTransition\r\n                        key={note._id}\r\n                        timeout={{ enter: 800, exit: 500 }}\r\n                        classNames={'note-item'}\r\n                    >\r\n                        <NotePreview\r\n                            room={room}\r\n                            note={note}\r\n                            key={note._id}\r\n                            user={user}\r\n                            saveRoomChanges={saveRoomChanges}\r\n                            togglePinned={togglePinned}\r\n                            removeNote={removeNote}\r\n                            toggleNotePin={toggleNotePin}\r\n                            changeNoteColor={changeNoteColor}\r\n                            updateNote={updateNote}\r\n                            updateMembers={updateMembers}\r\n                            toggleStarredNote={toggleStarredNote}\r\n                            isStarredPage={isStarredPage}/>\r\n                    </CSSTransition>)}\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\n\r\nexport default ({ filterBy, setFilterBy, }) => {\r\n    return (\r\n        <section>\r\n            <DebounceInput\r\n                minLength={0}\r\n                className=\"note-filter-input\"\r\n                debounceTimeout={300}\r\n                type=\"text\"\r\n                placeholder={'Search Notes'}\r\n                onChange={e => setFilterBy({ ...filterBy, term: e.target.value })}\r\n            />\r\n            <label htmlFor=\"type-select\">Type</label>\r\n            <select id=\"type-select\" onChange={e => setFilterBy({ ...filterBy, type: e.target.value })}>\r\n                <option value=\"\">All</option>\r\n                <option value=\"NoteText\">Text</option>\r\n                <option value=\"NoteImg\">Image</option>\r\n                <option value=\"NoteVideo\">Video</option>\r\n                <option value=\"NoteTodo\">Todos</option>\r\n                <option value=\"NoteLoc\">Location</option>\r\n            </select>\r\n        </section >\r\n    )\r\n\r\n}\r\n","import loading from \"../assets/svg/loading.svg\";\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst Loading = () => {\r\n    return <div>\r\n         <img src={loading} alt=\"loading\" className=\"loading\"/>\r\n    </div>;\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\n\r\nexport default ({ setNoteData, setNoteHeader, handleSubmit }) => {\r\n\r\n\r\n    return (\r\n        <form className=\"input-text\" onSubmit={handleSubmit}>\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input className=\"input-data\" placeholder=\"Say Something\" type=\"text\" onChange={e => setNoteData(e.target.value)} />\r\n            <button hidden>Save</button>\r\n        </form>\r\n    )\r\n}\r\n//save button is a temp solution to onSubmit with enter key","import React, { createRef } from 'react';\r\n\r\nimport uploadImg from '../../assets/svg/upload.svg'\r\n\r\nexport default ({ setNoteHeader, onUploadImg }) => {\r\n\r\n    const inputRef = createRef();\r\n\r\n\r\n    const onUploadImgHandler = () => {\r\n        inputRef.current.click()\r\n        // setNoteType('NoteImg');\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-img\">\r\n            <input className=\"input-header\" placeholder=\"Img Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input type=\"file\" onChange={(ev) => { onUploadImg(ev); }} ref={inputRef} hidden />\r\n            <img src={uploadImg} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { onUploadImgHandler() }} />\r\n        </section >\r\n    );\r\n};\r\n\r\n","import axios from 'axios';\r\n//AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM RAN'S KEY\r\n//AIzaSyD09tfK-pjT-G6kEZmXRfeicoKR-neGKNU alt key\r\nconst API_KEY = 'AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM' \r\nconst limit = 15;\r\n\r\n\r\nexport const YoutubeApiService = {\r\n    youtubeQuery\r\n}\r\n\r\n\r\nasync function youtubeQuery(query) {\r\n    try {\r\n        const res = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&videoEmbeddable=true&type=video&key=${API_KEY}&q=${query}&maxResults=${limit}`);\r\n        return res.data.items;\r\n    } catch (err) {\r\n        console.log('Error while fetching videos',err); \r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { YoutubeApiService } from '../../services/YoutubeApiService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\n\r\nexport default ({ addVideo, setNoteHeader }) => {\r\n    const [videos, setVideos] = useState([]);\r\n    const searchYoutubeVideos = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setVideos([])\r\n            return\r\n        }\r\n        const youtubeVideos = await YoutubeApiService.youtubeQuery(queryStr);\r\n        setVideos(youtubeVideos)\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-video\">\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n            className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Video\"\r\n                onChange={e => searchYoutubeVideos(e.target.value)}\r\n            />\r\n            {!!videos.length &&<h1>Add video!</h1>}\r\n            {!!videos.length && videos.map(video => {\r\n                return (\r\n                    <div className=\"video-card\" key={video.id.videoId}>\r\n                        <img src={video.snippet.thumbnails.default.url} alt=\"Video Thumbnail\" />\r\n                        <h6>{video.snippet.title}</h6>\r\n                        <img src={PlusIcon} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { addVideo(video.id.videoId); setVideos([]) }} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </section >\r\n    );\r\n};","import React, { useState } from 'react'\r\n\r\nimport { UtilService } from '../../services/UtilService'\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport saveIcon from '../../assets/svg/save.svg'\r\n\r\n\r\nexport default ({ setNoteHeader, setNoteData, handleSubmit, noteData }) => {\r\n    const [currTodo, setCurrTodo] = useState('');\r\n\r\n    const textInput = React.useRef();\r\n\r\n    const addTodo = () => {\r\n        setNoteData([\r\n            ...noteData, {\r\n                text: currTodo,\r\n                isDone: false,\r\n                _id: UtilService.makeId(5)\r\n            }])\r\n        setCurrTodo('')\r\n        textInput.current.value = ''\r\n        textInput.current.focus()\r\n    };\r\n\r\n    const handleRemoveTodo = (todoId) => {\r\n        setNoteData(noteData.filter(todo => todo._id !== todoId))\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-todo\">\r\n            <input type=\"text\" placeholder=\"Header?\" className=\"input-header\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <ul>\r\n                {!noteData.length && <h5>No Todo's Added</h5>}\r\n                {!!noteData.length && noteData.map(todo => {\r\n                    return (\r\n                        <li className=\"todo\" key={todo._id}>\r\n                            <span>{todo.text}</span>\r\n                            <img src={xMark} onClick={() => handleRemoveTodo(todo._id)} className=\"x-mark\" alt=\"Remove Todo\" />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <div className=\"add-todo-container\">\r\n                <input type=\"text\" placeholder=\"task?\" className=\"input-task\" ref={textInput} onChange={e => setCurrTodo(e.target.value)} />\r\n                <img src={PlusIcon} className=\"add-button\" onClick={() => addTodo()} alt=\"Add todo\" />\r\n            </div>\r\n            <img src={saveIcon} className=\"add-button\" onClick={handleSubmit} alt=\"Save\" />\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n// const GAPI_KEY = 'AIzaSyDT_ajKa9WIv5XuaigihgiGJKXyRAXIV7o';\r\nconst GAPI_KEY = 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA';\r\n// const GAPI_KEY = 'AIzaSyAfOgP37XV4mv6RcyxIwOk1ajVevIhN2TM'; \r\n\r\nexport const MapService = {\r\n    searchLocs,\r\n    searchAddress, \r\n    getPosition,\r\n    GAPI_KEY\r\n}\r\n\r\n\r\nasync function searchLocs(txt) {\r\n\r\n    const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${txt.split(\" \").join('+')}&key=${GAPI_KEY}&language=en&region=US`)\r\n    try {\r\n        return res.data.results\r\n        // var position=res.data.results[0].geometry.location ;\r\n        // const address_components_Length =res.data.results[0].address_components.length;   \r\n        // var results=res.data.results[0].address_components;\r\n\r\n\r\n        // for (var i=0;i<address_components_Length;i++){\r\n        //     for (var j=0;j<results[i].types.length;j++){\r\n        //         if(results[i].types[j]==='country'){\r\n        //             var country=results[i].long_name;\r\n        //             var short_country =results[i].short_name; //short name country          \r\n        //         }   \r\n        //         if(results[i].types[j]==='locality'){\r\n        //             var city=results[i].long_name;\r\n        //             // var shortCity =results[i].short_name; //short name city   \r\n        //         }   \r\n\r\n        //         if(results[i].types[j]==='administrative_area_level_1')\r\n        //         {\r\n        //             var region=results[i].long_name;                    \r\n        //         }   \r\n\r\n        //     }\r\n        // }        \r\n        // position.country=country;\r\n        // position.short_country=short_country;\r\n        // // position.city=city;\r\n        // position.region=region;\r\n        //  return position    \r\n\r\n    }\r\n    catch (error) {\r\n        console.error('Address not found');\r\n    }\r\n}\r\n\r\nasync function searchAddress(coords) {\r\n\r\n    const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coords.lat},${coords.lng}&key=${GAPI_KEY}&language=en&region=US`)\r\n    try {\r\n        return res.data.results\r\n    }\r\n    catch (error) {\r\n        console.error('Address not found');\r\n    }\r\n}\r\n\r\n\r\n// FOR USER\r\nfunction getPosition() {\r\n    return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject)\r\n    })\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"gps-icon\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n    viewBox=\"0 0 384 384\"  xmlSpace=\"preserve\">\r\n<g>\r\n   <g>\r\n       <path d=\"M192,136c-30.872,0-56,25.12-56,56s25.128,56,56,56s56-25.12,56-56S222.872,136,192,136z M192,216\r\n           c-13.232,0-24-10.768-24-24s10.768-24,24-24s24,10.768,24,24S205.232,216,192,216z\"/>\r\n   </g>\r\n</g>\r\n<g>\r\n   <g>\r\n       <path d=\"M368,176h-32.944C327.648,109.368,274.632,56.352,208,48.944V16c0-8.832-7.168-16-16-16c-8.832,0-16,7.168-16,16v32.944\r\n           C109.368,56.352,56.352,109.368,48.944,176H16c-8.832,0-16,7.168-16,16c0,8.832,7.168,16,16,16h32.944\r\n           C56.352,274.632,109.368,327.648,176,335.056V368c0,8.832,7.168,16,16,16c8.832,0,16-7.168,16-16v-32.944\r\n           c66.632-7.408,119.648-60.424,127.056-127.056H368c8.832,0,16-7.168,16-16C384,183.168,376.832,176,368,176z M192,304\r\n           c-61.76,0-112-50.24-112-112S130.24,80,192,80s112,50.24,112,112S253.76,304,192,304z\"/>\r\n   </g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n\r\n\r\n\r\n}\r\n","import React, { useState, useEffect, createRef } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { MapService } from '../../services/MapService'\r\n\r\nimport PinIcon from '../../assets/svg/pin.svg'\r\nimport SaveIcon from '../icons/SaveIcon'\r\nimport GpsIcon from '../icons/GpsIcon'\r\n\r\nexport default ({ setNoteHeader, setNoteData, noteData, handleSubmit }) => {\r\n\r\n    const [locs, setLocs] = useState([]);\r\n    const [selectedLoc, setSelectedLoc] = useState(null)\r\n    const addressInputRef = createRef();\r\n\r\n    const searchLoc = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setLocs([])\r\n            return\r\n        }\r\n        let locations = await MapService.searchLocs(queryStr)\r\n        setLocs(locations)\r\n    }\r\n\r\n    const renderMarkers = (map, maps) => {\r\n        let marker = new maps.Marker({\r\n        position: { lat: selectedLoc.lat, lng: selectedLoc.lng},\r\n        map,\r\n        icon:PinIcon\r\n        });\r\n        return marker;\r\n       };\r\n\r\n\r\n    const setLocNote = (loc) => {\r\n        let dataObj = { name: loc.formatted_address, coords: loc.geometry.location }\r\n        setSelectedLoc(dataObj.coords)\r\n        setNoteData(dataObj)\r\n    }\r\n\r\n    const fetchUserCoords = async () => {\r\n        let userPos = await MapService.getPosition()\r\n        if (!userPos) return\r\n        let coords = { lat: userPos.coords.latitude, lng: userPos.coords.longitude }\r\n        setSelectedLoc(coords)\r\n        let res = await MapService.searchAddress(coords)\r\n        if (res) {\r\n            let accurateAddressIdx = res[1] ? 1 : 0\r\n            let address = res[accurateAddressIdx].address_components[accurateAddressIdx].short_name\r\n            let dataObj = { coords: res[accurateAddressIdx].geometry.location }\r\n            if (address) dataObj.name = address\r\n            setNoteData(dataObj)\r\n        }\r\n\r\n    }\r\n\r\n    const saveNoteLoc = () => {\r\n        handleSubmit()\r\n        setSelectedLoc(null)\r\n        addressInputRef.current.value = ''\r\n    }\r\n    useEffect(() => {\r\n        fetchUserCoords()\r\n    }, [selectedLoc])\r\n\r\n\r\n    return (\r\n        <div className=\"input-loc\" >\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n                className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Location\"\r\n                ref={addressInputRef}\r\n                onChange={e => searchLoc(e.target.value)}\r\n            />\r\n            <i onClick={() => fetchUserCoords()}><GpsIcon /></i>\r\n            {!!locs.length && locs.map(loc => {\r\n                return (\r\n                    <div className=\"loc-card\" key={loc.place_id}>\r\n                        <h6 onClick={() => { setLocNote(loc) }}>{loc.formatted_address}</h6>\r\n                    </div>\r\n                )\r\n            })}\r\n            {/* {noteData.name && <h6>{noteData.name}</h6>} */}\r\n            {selectedLoc && <div style={{ height: '30vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA' }}\r\n                    center={selectedLoc}\r\n                    distanceToMouse={() => { }}\r\n                    yesIWantToUseGoogleMapApiInternals={true}\r\n                    defaultZoom={18}\r\n                    onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n\r\n                    >\r\n                </GoogleMapReact>\r\n            </div>}\r\n            {noteData && <i onClick={() => saveNoteLoc()}><SaveIcon /></i>}\r\n            <button onClick={() => console.log('noteData:', noteData)}>Test</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport { loadRoomById, saveRoom, resetCurrRoom, removeNote, changeNoteColor, toggleNotePin, updateNote } from '../../actions/RoomActions';\r\nimport { toggleStarredNote } from '../../actions/UserActions'\r\n\r\nimport NoteFilter from './NoteFilter'\r\nimport NoteList from './NoteList'\r\n\r\n\r\nimport { UserService } from '../../services/UserService';\r\nimport { RoomService } from '../../services/RoomService';\r\n\r\n\r\nconst NotesContainer = ({ room, user, setNoteType, removeNote, saveRoom, changeNoteColor, toggleNotePin, updateNote, toggleStarredNote }) => {\r\n    const [filterBy, setFilterBy] = useState({\r\n        term: '',\r\n        type: '',\r\n        by: 'all'\r\n    });\r\n\r\n    if (room) var { notes } = room\r\n\r\n\r\n    const onFilterHandler = (filterBy) => {\r\n        setFilterBy(filterBy)\r\n    };\r\n\r\n    const saveRoomChanges = async () => {\r\n        await saveRoom(room)\r\n        SocketService.emit(\"roomUpdated\", { room, userId: user._id });\r\n    }\r\n\r\n\r\n\r\n    const updateMembers = () => {\r\n        if (room.members.length > 1) SocketService.emit(\"roomUpdated\", { room, userId: user._id });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes-container\">\r\n            <NoteFilter\r\n                filterBy={filterBy}\r\n                setFilterBy={setFilterBy}\r\n                onFilter={onFilterHandler}\r\n                placeHolder={\"Search for notes\"} />\r\n\r\n\r\n            <NoteList\r\n                room={room}\r\n                notes={notes}\r\n                user={user}\r\n                removeNote={removeNote}\r\n                changeNoteColor={changeNoteColor}\r\n                toggleNotePin={toggleNotePin}\r\n                saveRoomChanges={saveRoomChanges}\r\n                setNoteType={setNoteType}\r\n                updateNote={updateNote}\r\n                updateMembers={updateMembers}\r\n                toggleStarredNote={toggleStarredNote}\r\n            // togglePinned={togglePinned}\r\n            // setNoteType={setNoteType}\r\n            // toggleStarred={toggleStarred}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // room: state.room.currRoom,\r\n        // user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleNotePin,\r\n    changeNoteColor,\r\n    removeNote,\r\n    saveRoom,\r\n    loadRoomById,\r\n    resetCurrRoom,\r\n    updateNote,\r\n    toggleStarredNote\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesContainer);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { UtilService } from '../services/UtilService'\r\nimport SocketService from '../services/SocketService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\nimport { loadRoomById, saveRoom, resetCurrRoom } from '../actions/RoomActions';\r\nimport { updateUser } from '../actions/UserActions';\r\nimport ButtonMenu from '../cmps/ButtonMenu'\r\nimport NoteList from '../cmps/Note/NoteList'\r\nimport NoteFilter from '../cmps/Note/NoteFilter'\r\nimport Loading from '../cmps/Loading'\r\nimport InputText from '../cmps/Note/InputText'\r\nimport InputImg from '../cmps/Note/InputImg'\r\nimport InputVideo from '../cmps/Note/InputVideo'\r\nimport InputTodo from '../cmps/Note/InputTodo'\r\nimport InputLoc from '../cmps/Note/InputLoc'\r\nimport { UserService } from '../services/UserService';\r\nimport { RoomService } from '../services/RoomService';\r\nimport NotesContainer from '../cmps/Note/NotesContainer';\r\n\r\n\r\n// actions\r\n// import * as notesActions from 'redux/notes';\r\n\r\n\r\n\r\n//Pin\r\n//change color\r\n//edit note\r\n//star\r\n//removeNote\r\n\r\n\r\n\r\nconst RoomPage = (props) => {\r\n    const [noteType, setNoteType] = useState('');\r\n    const [noteHeader, setNoteHeader] = useState('');\r\n    const [noteData, setNoteData] = useState('');\r\n    const [noteInputType, setNoteInputType] = useState('InputText');\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [isValidUser, setIsValidUser] = useState(null)\r\n    const [filterBy, setFilterBy] = useState({\r\n        term: '',\r\n        type: '',\r\n        by: 'all'\r\n    });\r\n\r\n    if (props.room) var { notes } = props.room\r\n\r\n    const newNote = {\r\n        header: noteHeader,\r\n        data: noteData,\r\n        type: noteType,\r\n        // bgColor: '#87cefa',\r\n        isPinned: false\r\n    }\r\n\r\n    const cmps = {\r\n        InputText,\r\n        InputImg,\r\n        InputVideo,\r\n        InputTodo,\r\n        InputLoc\r\n    }\r\n    const InputType = cmps[noteInputType];\r\n\r\n    const loadRoom = async () => {\r\n        const roomId = props.room ? props.room._id : props.match.params.id;\r\n        if (props.room) {\r\n            await props.loadRoomById({ ...filterBy, roomId })\r\n            // FIX IS VAILD USER\r\n            // checkIsValidUser()\r\n            return\r\n        }\r\n        await props.loadRoomById({ ...filterBy, roomId })\r\n    }\r\n\r\n\r\n    const onUploadImg = async (ev) => {\r\n        if (noteType === 'NoteImg') {\r\n            const imgUrl = await CloudinaryService.uploadImg(ev)\r\n            setNoteData(imgUrl.secure_url)\r\n            setIsUploading(true)\r\n        }\r\n    }\r\n\r\n    const onAddVideo = (videoId) => {\r\n        setNoteData(videoId)\r\n        setIsUploading(true)\r\n    }\r\n\r\n    const onFilterHandler = (filterBy) => {\r\n        setFilterBy(filterBy)\r\n    };\r\n\r\n    const onHandleSubmit = async (ev) => {\r\n        const { user, room } = props\r\n        if (ev) ev.preventDefault()\r\n        newNote._id = UtilService.makeId(24)\r\n        newNote.createdAt = Date.now()    //maybe server side should handle it\r\n        let minimalUser = UserService.getMinimalUser(user._id, user.imgUrl)\r\n        newNote.createdBy = minimalUser\r\n        const friend = user.friends.find(currFriend => currFriend.roomId === room._id)\r\n        let idx = room.notes.findIndex(note => !note.isPinned)\r\n        room.notes.splice(idx, 0, newNote)\r\n        props.saveRoom(JSON.parse(JSON.stringify(room)))\r\n        SocketService.emit(\"added note\", ({ room, user, friendId: friend._id }));\r\n        // props.showNotification('Note added successfully! So Excited', 'success')\r\n        //Need to find way to transfer that prop on desktop\r\n        setNoteHeader('')\r\n        setNoteData('')\r\n        setNoteType('')\r\n        setIsUploading(false)\r\n    }\r\n\r\n\r\n\r\n\r\n    const checkIsValidUser = async () => { //FIX\r\n        const { user, room } = props\r\n        if (!user || !room) return\r\n        let isValid = await RoomService.checkIsValidUser(user._id, room._id)\r\n        isValid ? setIsValidUser(true) : props.history.push('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadRoom()//created\r\n        console.log(props.user);\r\n        return () => { props.resetCurrRoom() }; //onDestroy\r\n    }, []);\r\n\r\n    // //watcher\r\n    // useEffect(() => { \r\n    // FIX IS VAILD USER\r\n    //     if (props.room) checkIsValidUser()\r\n    // }, [props.room]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if ((noteData && noteType === 'NoteImg') ||\r\n            noteType === 'NoteVideo') {\r\n            onHandleSubmit()\r\n        }\r\n    }, [isUploading]);\r\n\r\n    useEffect(() => {\r\n        loadRoom()\r\n    }, [filterBy]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"room-page\">\r\n            {/* {(isValidUser && notes) ? <div className=\"note-add\"> FIX IS VAILD USER*/}\r\n            {notes ? <div className=\"note-add\">\r\n                {/* <NoteFilter\r\n                    filterBy={filterBy}\r\n                    setFilterBy={setFilterBy}\r\n                    onFilter={onFilterHandler}\r\n                    placeHolder={\"Search for notes\"} /> */}\r\n                {noteType && <InputType\r\n                    isMarkerShown={true}\r\n                    onUploadImg={onUploadImg}\r\n                    addVideo={onAddVideo}\r\n                    handleSubmit={onHandleSubmit}\r\n                    setNoteHeader={setNoteHeader}\r\n                    setNoteData={setNoteData}\r\n                    noteData={noteData}\r\n                />}\r\n                <ButtonMenu setNoteType={setNoteType} setNoteInputType={setNoteInputType} setNoteData={setNoteData} />\r\n            </div> : <Loading />}\r\n            {/* {(isValidUser && notes) && <div> FIX IS VAILD USER */}\r\n            {(notes && props.user) && <div>\r\n                {/* {!!notes.length && <NoteList\r\n                    notes={notes}\r\n                    user={props.user}\r\n                    room={props.room}\r\n                    saveRoomChanges={saveRoomChanges}\r\n                    togglePinned={togglePinned}\r\n                    setNoteType={setNoteType}\r\n                    toggleStarred={toggleStarred} />} */\r\n                    <NotesContainer room={props.room} user={props.user} setNoteType={setNoteType} />\r\n                }\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadRoomById,\r\n    saveRoom,\r\n    resetCurrRoom,\r\n    updateUser,\r\n    // ...notesActions,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomPage);\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { UtilService } from '../services/UtilService'\r\n// import SocketService from '../services/SocketService'\r\n// import CloudinaryService from '../../src/services/CloudinaryService'\r\n// import { loadRoomById, saveRoom, resetCurrRoom } from '../actions/RoomActions';\r\n// import { updateUser } from '../actions/UserActions';\r\n// import ButtonMenu from '../cmps/ButtonMenu'\r\n// import NoteList from '../cmps/Note/NoteList'\r\n// import NoteFilter from '../cmps/Note/NoteFilter'\r\n// import Loading from '../cmps/Loading'\r\n// import InputText from '../cmps/Note/InputText'\r\n// import InputImg from '../cmps/Note/InputImg'\r\n// import InputVideo from '../cmps/Note/InputVideo'\r\n// import InputTodo from '../cmps/Note/InputTodo'\r\n// import InputLoc from '../cmps/Note/InputLoc'\r\n// import { UserService } from '../services/UserService';\r\n// import { RoomService } from '../services/RoomService';\r\n\r\n\r\n// // actions\r\n// // import * as notesActions from 'redux/notes';\r\n\r\n\r\n\r\n// //Pin\r\n// //change color\r\n// //edit note\r\n// //star\r\n// //removeNote\r\n\r\n\r\n\r\n// const RoomPage = (props) => {\r\n//     const [noteType, setNoteType] = useState('');\r\n//     const [noteHeader, setNoteHeader] = useState('');\r\n//     const [noteData, setNoteData] = useState('');\r\n//     const [noteInputType, setNoteInputType] = useState('InputText');\r\n//     const [isUploading, setIsUploading] = useState(false);\r\n//     const [isValidUser, setIsValidUser] = useState(null)\r\n//     const [filterBy, setFilterBy] = useState({\r\n//         term: '',\r\n//         type: '',\r\n//         by: 'all'\r\n//     });\r\n\r\n//     if (props.room) var { notes } = props.room\r\n\r\n//     const newNote = {\r\n//         header: noteHeader,\r\n//         data: noteData,\r\n//         type: noteType,\r\n//         bgColor: '#87cefa',\r\n//         isPinned: false\r\n//     }\r\n\r\n//     const cmps = {\r\n//         InputText,\r\n//         InputImg,\r\n//         InputVideo,\r\n//         InputTodo,\r\n//         InputLoc\r\n//     }\r\n//     const InputType = cmps[noteInputType];\r\n\r\n//     const loadRoom = async () => {\r\n//         const roomId = props.room ? props.room._id : props.match.params.id;\r\n//         if (props.room) {\r\n//             await props.loadRoomById({ ...filterBy, roomId })\r\n//             // FIX IS VAILD USER\r\n//             // checkIsValidUser()\r\n//             return\r\n//         }\r\n//         await props.loadRoomById({ ...filterBy, roomId })\r\n//     }\r\n\r\n\r\n//     const saveRoomChanges = async () => {\r\n//         await props.saveRoom(props.room)\r\n//         SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n//     }\r\n\r\n//     const onUploadImg = async (ev) => {\r\n//         if (noteType === 'NoteImg') {\r\n//             const imgUrl = await CloudinaryService.uploadImg(ev)\r\n//             setNoteData(imgUrl.secure_url)\r\n//             setIsUploading(true)\r\n//         }\r\n//     }\r\n\r\n//     const onAddVideo = (videoId) => {\r\n//         setNoteData(videoId)\r\n//         setIsUploading(true)\r\n//     }\r\n\r\n//     const onFilterHandler = (filterBy) => {\r\n//         setFilterBy(filterBy)\r\n//     };\r\n\r\n//     const onHandleSubmit = async (ev) => {\r\n//         const { user, room } = props\r\n//         if (ev) ev.preventDefault()\r\n//         newNote._id = UtilService.makeId(24)\r\n//         newNote.createdAt = Date.now()    //maybe server side should handle it\r\n//         let minimalUser = UserService.getMinimalUser(user._id, user.imgUrl)\r\n//         newNote.createdBy = minimalUser\r\n//         const friend = user.friends.find(currFriend => currFriend.roomId === room._id)\r\n//         let idx = room.notes.findIndex(note => !note.isPinned)\r\n//         room.notes.splice(idx, 0, newNote)\r\n//         props.saveRoom(JSON.parse(JSON.stringify(room)))\r\n//         SocketService.emit(\"added note\", ({ room, user, friendId: friend._id }));\r\n//         // props.showNotification('Note added successfully! So Excited', 'success')\r\n//         //Need to find way to transfer that prop on desktop\r\n//         setNoteHeader('')\r\n//         setNoteData('')\r\n//         setNoteType('')\r\n//         setIsUploading(false)\r\n//     }\r\n\r\n//     const togglePinned = async (note) => {\r\n\r\n//         // pinNote({ id, isPinned }); //BAR\r\n\r\n\r\n//         note.isPinned = !note.isPinned\r\n//         let idx = props.room.notes.findIndex(currNote => note._id === currNote._id)\r\n//         props.room.notes.splice(idx, 1)\r\n//         note.isPinned ? handleNotePin(note) : handleNoteUnpin(note)\r\n//         await props.saveRoom(JSON.parse(JSON.stringify(props.room)))\r\n//         SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n//     }\r\n\r\n//     const toggleStarred = async (note) => {\r\n//         props.user.starredNotes ? handleStarredNote(note) : props.user.starredNotes = new Array(note)\r\n\r\n//         // note.isPinned = !note.isPinned\r\n//         // let idx = props.room.notes.findIndex(currNote => note._id === currNote._id)\r\n//         // props.room.notes.splice(idx, 1)\r\n//         // note.isPinned ? handleNotePin(note) : handleNoteUnpin(note)\r\n//         // await props.saveRoom(JSON.parse(JSON.stringify(props.room)))\r\n//         // SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n//     }\r\n\r\n//     const handleStarredNote = (note) => {\r\n//         let idx = props.user.starredNotes.findIndex(starredNote => starredNote._id === note._id)\r\n//         idx === -1 ? props.user.starredNotes.unshift(note) : props.user.starredNotes.splice(idx, 1)\r\n//         console.log(idx);\r\n//         console.log(props.user);\r\n//         props.updateUser(props.user)\r\n\r\n\r\n//         // props.user.starredNotes.find(srarredNote => srarredNote)\r\n//     }\r\n\r\n\r\n//     const handleNotePin = (note) => {\r\n//         props.room.notes.unshift(note)\r\n//     }\r\n\r\n//     const handleNoteUnpin = (note) => {\r\n//         let idx = props.room.notes.findIndex(currNote => (!currNote.isPinned && currNote.createdAt <= note.createdAt))\r\n//         idx === -1 ? props.room.notes.push(note) : props.room.notes.splice(idx, 0, note)\r\n//     }\r\n\r\n//     // const removeNote = async (noteId) => {\r\n//     //     let idx = props.room.notes.findIndex(note => note._id === noteId)\r\n//     //     props.room.notes.splice(idx, 1)\r\n//     //     await props.saveRoom(props.room)\r\n//     //     SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n//     //     // props.showNotification('Note Deleted successfully!', 'error')\r\n//     //     //Need to find way to transfer that prop on desktop\r\n//     // }\r\n\r\n//     const checkIsValidUser = async () => {\r\n//         const { user, room } = props\r\n//         if (!user || !room) return\r\n//         let isValid = await RoomService.checkIsValidUser(user._id, room._id)\r\n//         isValid ? setIsValidUser(true) : props.history.push('/')\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         loadRoom()//created\r\n//         console.log(props.user);\r\n//         return () => { props.resetCurrRoom() }; //onDestroy\r\n//     }, []);\r\n\r\n//     //watcher\r\n//     // useEffect(() => {\r\n//     // FIX IS VAILD USER\r\n//     //     if (props.room) checkIsValidUser()\r\n//     // }, [props.room]);\r\n\r\n\r\n//     useEffect(() => {\r\n//         if ((noteData && noteType === 'NoteImg') ||\r\n//             noteType === 'NoteVideo') {\r\n//             onHandleSubmit()\r\n//         }\r\n//     }, [isUploading]);\r\n\r\n//     useEffect(() => {\r\n//         loadRoom()\r\n//     }, [filterBy]);\r\n\r\n\r\n\r\n\r\n\r\n//     return (\r\n//         <div className=\"room-page\">\r\n//             {/* {(isValidUser && notes) ? <div className=\"note-add\"> FIX IS VAILD USER*/}\r\n//             {notes ? <div className=\"note-add\">\r\n//                 <NoteFilter\r\n//                     filterBy={filterBy}\r\n//                     setFilterBy={setFilterBy}\r\n//                     onFilter={onFilterHandler}\r\n//                     placeHolder={\"Search for notes\"} />\r\n//                 {noteType && <InputType\r\n//                     isMarkerShown={true}\r\n//                     onUploadImg={onUploadImg}\r\n//                     addVideo={onAddVideo}\r\n//                     handleSubmit={onHandleSubmit}\r\n//                     setNoteHeader={setNoteHeader}\r\n//                     setNoteData={setNoteData}\r\n//                     noteData={noteData}\r\n//                 />}\r\n//                 <ButtonMenu setNoteType={setNoteType} setNoteInputType={setNoteInputType} setNoteData={setNoteData} />\r\n//             </div> : <Loading />}\r\n//             {/* {(isValidUser && notes) && <div> FIX IS VAILD USER */}\r\n//             {notes && <div>\r\n//                 {!!notes.length && <NoteList\r\n//                     notes={notes}\r\n//                     user={props.user}\r\n//                     room={props.room}\r\n//                     saveRoomChanges={saveRoomChanges}\r\n//                     togglePinned={togglePinned}\r\n//                     setNoteType={setNoteType}\r\n//                     toggleStarred={toggleStarred} />}\r\n//             </div>}\r\n//         </div>\r\n//     );\r\n// };\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         room: state.room.currRoom,\r\n//         user: state.user.loggedinUser,\r\n//     };\r\n// };\r\n// const mapDispatchToProps = {\r\n//     loadRoomById,\r\n//     saveRoom,\r\n//     resetCurrRoom,\r\n//     updateUser,\r\n//     // ...notesActions,\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps)(RoomPage);\r\n","import React, {useCallback, useState} from 'react';\r\nimport avatarImg from '../../assets/png/user.png'\r\nimport Loading from \"../Loading\";\r\n\r\nimport AvatarLoader from \"../AvatarLoader\";\r\n\r\n\r\nexport const AvatarEdit = (props) => {\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n    const onLoad = useCallback(() => {\r\n    console.log('loaded');\r\n    setIsLoaded(true);\r\n    }, [])\r\n\r\n  // var [{imgUrl}] = useState(props)\r\n  const { imgUrl, isLoading } = props\r\n  \r\n  return <div className=\"avatar-edit\">\r\n    <label>\r\n      <input type=\"file\" onChange={(ev) => props.onUploadImg(ev)} hidden />\r\n      {isLoading ? <Loading /> : <img src={imgUrl ? imgUrl : avatarImg} alt=\"\" className=\"avatar avatar-m\" onLoad={onLoad} style={{display: isLoaded? 'block': 'none'}} />}\r\n      {!isLoaded && <AvatarLoader isHome={true}/>}\r\n\r\n    </label>\r\n  </div>;\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUser, updateUser } from '../actions/UserActions';\r\n\r\n\r\nimport ContactPage from '../pages/ContactPage'\r\nimport RoomPage from '../pages/RoomPage'\r\nimport { loadContacts } from '../actions/ContactActions';\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\nimport ContactList from '../cmps/ContactList'\r\nimport Filter from '../cmps/Filter'\r\n\r\nimport SocketService from '../services/SocketService'\r\nimport { UserService } from '../services/UserService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\nconst HomePage = (props) => {\r\n  const [filterBy, setFilterBy] = useState({ term: '' })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isHome, setIsHome] = useState(true)\r\n\r\n\r\n  const { user, contacts,room,getUpdatedUser } = props;\r\n\r\n\r\n  const loadContacts = async () => {\r\n    await props.loadContacts(filterBy);\r\n  };\r\n\r\n  const onUploadImg = async (ev) => {\r\n    setIsLoading(true)\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n    props.updateUser(updatedUser)\r\n    UserService.updateImgAtContacts(user._id, userImgUrl.secure_url)\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const onAddFriend = (friendId) => {\r\n    const { userName, fullName, _id, imgUrl } = user\r\n    let userId = _id\r\n    let notification = {\r\n      userName,\r\n      fullName,\r\n      type: 'NotificationFriend',\r\n      imgUrl\r\n    }\r\n    SocketService.emit('Add Friend', { notification, userId, friendId })\r\n  }\r\n\r\n\r\n\r\n  const onMoveToRoom = (ev, contact) => {\r\n    const roomId = UserService.getRoomIdFromContact(user,contact).roomId\r\n    console.log('roomId', roomId);\r\n\r\n    ev.stopPropagation()\r\n    props.history.push(`/room/${roomId}`);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    props.getUser()\r\n    if (!props.user) props.history.push(\"/signup\")\r\n    loadContacts()\r\n    return () =>{\r\n      setIsHome(false)\r\n    }\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    loadContacts()\r\n  }, [filterBy])\r\n\r\n\r\n  return (\r\n    <div>\r\n        {user &&\r\n          <div className=\"home-page\">\r\n            <div className=\"mobile\">\r\n            {user.userName && <h2>Hi There <span className=\"user-name\">{user.userName}</span></h2>}\r\n            <AvatarEdit imgUrl={user.imgUrl} onUploadImg={onUploadImg} isLoading={isLoading} />\r\n            <h6>Let's add contacts veze</h6>\r\n            <Filter filterBy={filterBy} setFilterBy={setFilterBy} />\r\n            {contacts && <ContactList onMoveToRoom={onMoveToRoom} contacts={contacts} onAddFriend={onAddFriend} loggedinUser={user} isHome={isHome} />}\r\n            </div>\r\n        <div className=\"desktop\">\r\n          <section className=\"contact-page-desktop\">\r\n        <ContactPage/>\r\n          </section>\r\n        {room && <section className=\"room-page-desktop\">\r\n        <RoomPage history={props.history}/>\r\n        </section>}\r\n        </div>\r\n        </div>\r\n      }\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room:state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  updateUser,\r\n  loadContacts,\r\n  \r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n// import React, { Component } from 'react'\r\n// import { connect } from 'react-redux';\r\n// import Avatar from 'react-avatar';\r\n\r\n// import { getUser,updateUser } from '../actions/UserActions';\r\n// import { loadContacts } from '../actions/ContactActions';\r\n\r\n// import { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n// import ContactList from '../cmps/ContactList'\r\n// import Filter from '../cmps/Filter'\r\n\r\n// import SocketService from '../services/SocketService'\r\n// import {UserService} from '../services/UserService'\r\n// import CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\n// class HomePage extends Component {\r\n//   state = {\r\n//     filterBy: { term: '' },\r\n//     isLoading: false\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.props.getUser()\r\n//     if (!this.props.user) this.props.history.push(\"/signup\")\r\n//     this.loadContacts()\r\n//   }\r\n\r\n//   loadContacts = async () => {\r\n//     await this.props.loadContacts(this.state.filterBy);\r\n//   };\r\n\r\n//   onUploadImg = async (ev) => {\r\n//     let user = this.props.user\r\n//     this.setState({ isLoading: true })\r\n//     let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n//     const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n//     this.props.updateUser(updatedUser)\r\n//     UserService.updateImgAtContacts(user._id, userImgUrl.secure_url)\r\n//     this.setState({ isLoading: false })\r\n//   }\r\n\r\n//   onAddFriend = (friendId) => {\r\n//     const { userName, fullName, _id, imgUrl } = this.props.user\r\n//     let userId = _id\r\n//     let notification = {\r\n//       userName,\r\n//       fullName,\r\n//       type: 'NotificationFriend',\r\n//       imgUrl\r\n//     }\r\n//     SocketService.emit('Add Friend', { notification, userId, friendId })\r\n//   }\r\n\r\n//   onFilterHandler = (filterBy) => {\r\n//     this.setState((prevState) => {\r\n//       return {\r\n//         filterBy: {\r\n//           ...prevState.filterBy,\r\n//           ...filterBy,\r\n//         },\r\n//       };\r\n//     }, this.loadContacts);\r\n\r\n//   };\r\n\r\n//   onMoveToRoom = (ev, roomId) => {\r\n//     console.log(ev);\r\n//     ev.stopPropagation()\r\n//     this.props.history.push(`/board/${roomId}`);\r\n//   }\r\n\r\n//   capitalize = (name) => {\r\n//     return name.charAt(0).toUpperCase() + name.slice(1);\r\n//   };\r\n\r\n\r\n\r\n//   render() {\r\n//     const { user, contacts } = this.props;\r\n//     const { isLoading } = this.state\r\n\r\n//     return (\r\n//       <div>\r\n//         {user &&\r\n//           <div className=\"home-page\">\r\n//             {user.userName && <h2>Hi There {this.capitalize(user.userName)}</h2>}\r\n//             <AvatarEdit imgUrl={user.imgUrl} onUploadImg={this.onUploadImg} isLoading={isLoading} />\r\n//             <h6>Let's add contacts veze</h6>\r\n//             <Filter filterBy={this.state.filterBy} onFilter={this.onFilterHandler} />\r\n//             {contacts && <ContactList onMoveToRoom={this.onMoveToRoom} contacts={contacts} onAddFriend={this.onAddFriend} loggedinUser={user} />}\r\n//           </div>\r\n//         }\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     user: state.user.loggedinUser,\r\n//     contacts: state.contact.contacts,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   getUser,\r\n//   updateUser,\r\n//   loadContacts,\r\n\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ notification,onApprove,onDecline }) => {    \r\n    return (\r\n        <div className=\"notification-friend\">\r\n            <p>{notification.fullName} wants to start a board with you</p>\r\n            <button onClick={()=>onApprove(notification)}>Approve</button>\r\n            <button onClick={()=>onDecline(notification)}>Decline</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ notification }) => {\r\n    return (\r\n        <div className=\"notification-response\">\r\n            <p>{notification.fullName} has {notification.isApproved ? 'Approved' : 'Declined'} your request</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default ({ notification, onDeleteNotification }) => {\r\n\r\n    const {userName, roomId} = notification\r\n\r\n    return (\r\n        <Link to={`/room/${roomId}`} >\r\n        <div className=\"notification-note\" onClick={onDeleteNotification}>\r\n            <p>{userName} just Added A note! go check it out</p>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationFriend from './NotificationFriend'\r\nimport NotificationResponse from './NotificationResponse'\r\nimport NotificationNote from './NotificationNote'\r\nimport Moment from 'react-moment';\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\n\r\n\r\n\r\nexport default ({ notification,onApprove, onDecline, onDeleteNotification }) => {\r\n    const cmps = {\r\n        NotificationFriend,\r\n        NotificationResponse,\r\n        NotificationNote\r\n    }\r\n  \r\n\r\n    const NotificationType = cmps[notification.type];\r\n    return (\r\n        <div className=\"notification-preview\">\r\n            <div className=\"notification-header\">\r\n                <img src={notification.imgUrl} className=\"avatar avatar-xs\" alt=\"User Avatar\"/>\r\n                <div>\r\n            <NotificationType notification={notification} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}/>\r\n            <Moment fromNow>{notification.createdAt}</Moment>\r\n                </div>\r\n            <img src={xMark} onClick={()=> onDeleteNotification(notification)} className=\"x-mark\" alt=\"Close\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationPreview from './NotificationPreview'\r\n\r\nexport default ({notifications, onApprove, onDecline,onDeleteNotification}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"notification-list\">\r\n            {notifications.map(notification => {\r\n                return (\r\n                    <NotificationPreview notification={notification} key={notification._id} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}  />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport SocketService from '../services/SocketService'\r\n\r\n\r\nimport NotificationList from '../cmps/Notification/NotificationList';\r\n\r\nconst InboxPage = (props) => {\r\n\r\n  const { user } = props\r\n\r\n  const onApprove = (notification) => {\r\n\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"approve\", { notification, user });\r\n\r\n  }\r\n  const onDecline = (notification) => {\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"decline\", { notification, user });\r\n  }\r\n\r\n  const onDeleteNotification = (notification) => {\r\n    const idx = user.notifications.findIndex(\r\n      currNotification => currNotification._id === notification._id\r\n    );\r\n    user.notifications.splice(idx, 1);\r\n    props.updateUser(user)\r\n  }\r\n\r\n  const handleForbiddenUser = () => {\r\n    if(props.match.params.id !== user._id) props.history.push('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleForbiddenUser()\r\n  }, [])\r\n  \r\n\r\n  return (\r\n    (!user) ? <h1>Inbox is empty</h1> :\r\n      <div>\r\n        {user && <div>\r\n          {!!user.notifications.length && <NotificationList notifications={user.notifications} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification} ></NotificationList>}\r\n        </div>\r\n        }\r\n      </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    room: state.room.currRoom,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxPage);","import Iframe from 'react-iframe'\r\n\r\nimport React,{ useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst RandomGame = () => {\r\n    const [gameName, setGameName] = useState('')\r\n\r\n    const gamesName = ['tetrix-en-s-iga-cloud','little-jump-guy-new-en-s-iga-cloud','bottle-flip-new-en-s-iga-cloud', 'basket-fall2-new-en-s-iga-cloud','easter-hunt-new-en-s-iga-cloud','trump-run-new-en-s-iga-cloud','minigolf-new-en-s-iga-cloud','onion-boy-new-en-s-iga-cloud','tank-wars-new-en-s-iga-cloud','angry-chicken-egg-madness-new-en-s-iga-cloud','switch-sides-new-en-s-iga-cloud','html5/unlockit-en-s-iga-cloud', 'spotle-en-s-iga-cloud','snake-condo-en-s-iga-cloud', 'cheese-lab-en-s-iga-cloud','medieval-dodgeball-en-s-iga-cloud']\r\n     \r\n\r\n    const setGame = () =>{\r\n        let randomInt = Math.floor(Math.random() * gamesName.length) \r\n        setGameName(gamesName[randomInt])\r\n        console.log(gameName);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setGame()\r\n        return () => {\r\n            setGameName('')\r\n        };\r\n    }, [])\r\n\r\n\r\n    return <div className=\"random-game\">\r\n        {gameName &&<Iframe url={`https://wanted5games.com/games/html5/${gameName}/index.html?pub=10`} width=\"100%\" height=\"100%\" className=\"iframe\" />}\r\n    </div>;\r\n}\r\n\r\nexport default RandomGame;","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport { loadRoomById, saveRoom, resetCurrRoom, removeNote, changeNoteColor, toggleNotePin, updateNote } from '../../actions/RoomActions';\r\nimport { toggleStarredNote } from '../../actions/UserActions'\r\n\r\nimport NoteFilter from './NoteFilter'\r\nimport NoteList from './NoteList'\r\n\r\n\r\nimport { UserService } from '../../services/UserService';\r\nimport { RoomService } from '../../services/RoomService';\r\n\r\n\r\nconst StarredContainer = ({ room,notes, user, setNoteType, removeNote, saveRoom, changeNoteColor, toggleNotePin, updateNote, toggleStarredNote, isStarredPage}) => {\r\n    const [filterBy, setFilterBy] = useState({\r\n        term: '',\r\n        type: '',\r\n        by: 'all'\r\n    });\r\n\r\n\r\n\r\n    const onFilterHandler = (filterBy) => {\r\n        setFilterBy(filterBy)\r\n    };\r\n\r\n    return (\r\n        <div className=\"starred-container\">\r\n            <h1>Container</h1>\r\n            {/* <NoteFilter\r\n                filterBy={filterBy}\r\n                setFilterBy={setFilterBy}\r\n                onFilter={onFilterHandler}\r\n                placeHolder={\"Search for notes\"} /> */}\r\n\r\n\r\n            <NoteList\r\n                room={room}\r\n                notes={notes}\r\n                user={user}\r\n                removeNote={removeNote}\r\n                changeNoteColor={changeNoteColor}\r\n                toggleNotePin={toggleNotePin}\r\n                // saveRoomChanges={saveRoomChanges}\r\n                // setNoteType={setNoteType}\r\n                updateNote={updateNote}\r\n                isStarredPage={isStarredPage}\r\n                toggleStarredNote={toggleStarredNote}\r\n                // updateMembers={updateMembers}\r\n                // togglePinned={togglePinned}\r\n                // setNoteType={setNoteType}\r\n                // toggleStarred={toggleStarred}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // room: state.room.currRoom,\r\n        // user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleNotePin,\r\n    changeNoteColor,\r\n    removeNote,\r\n    saveRoom,\r\n    loadRoomById,\r\n    resetCurrRoom,\r\n    updateNote,\r\n    toggleStarredNote\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StarredContainer);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getStarredNotes, resetCurrRoom } from '../actions/RoomActions';\r\n\r\nimport StarredContainer from '../cmps/Note/StarredContainer'\r\nimport Loading from '../cmps/Loading'\r\n\r\n\r\n\r\nconst StarredPage = ({ room, user, getStarredNotes, resetCurrRoom }) => {\r\n\r\n\r\n  const getNotes = async () => {\r\n    return await getStarredNotes(JSON.parse(JSON.stringify(user)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getNotes()\r\n    return () => {\r\n      resetCurrRoom()\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"starred-page\">\r\n      <h1>Starred</h1>\r\n      {room ? <StarredContainer notes={room.notes} user={user} isStarredPage={true} /> : <Loading />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    room: state.room.currRoom,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getStarredNotes,\r\n  resetCurrRoom\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StarredPage);","\r\n\r\nimport React, { Component } from \"react\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport Loading from \"../cmps/Loading\";\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\n// import SocketService from '../services/SocketService'\r\n\r\nimport { signUp, login, getUser } from '../actions/UserActions'\r\nimport { connect } from \"react-redux\";\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\nclass SignupPage extends Component {\r\n\r\n  state = {\r\n    newUser: {\r\n      userName: '',\r\n      fullName: '',\r\n      password: '',\r\n      imgUrl: '',\r\n    },\r\n    isSignUp: false,\r\n    isLoading: false,\r\n    isDone: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLoggedinUser();\r\n  }\r\n\r\n  getLoggedinUser = async () => {\r\n    await this.props.getUser()\r\n    if (this.props.user) this.props.history.push('/')\r\n  }\r\n\r\n  onChangeHandler = (ev) => {\r\n    const { value, name } = ev.target;\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        [name]: value\r\n      }\r\n    })\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({\r\n      newUser: {\r\n        userName: '',\r\n        fullName: '',\r\n        password: '',\r\n        imgUrl: '',\r\n      }\r\n    })\r\n  }\r\n\r\n  onUploadImg = async (ev) => {\r\n    this.setState({ isLoading: true })\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        imgUrl: userImgUrl.secure_url\r\n      }\r\n    })\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\n  connectSockets(id) {\r\n    this.props.onConnectSocket(id)\r\n  }\r\n\r\n  toggleSignUp = () => {\r\n    this.setState(prevState => ({\r\n      isSignUp: !prevState.isSignUp\r\n    }));\r\n  }\r\n\r\n  onHandleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    this.setState({ isDone: true })\r\n    this.state.isSignUp ?\r\n      await this.props.signUp({ ...this.state.newUser })\r\n      : await this.props.login({ ...this.state.newUser })\r\n    await this.getLoggedinUser();\r\n    if (!this.props.user) {\r\n      Swal.fire({\r\n        title: 'Wrong password or Username.',\r\n        width: 300,\r\n        confirmButtonText: \"Say what?\",\r\n        confirmButtonColor: \"yellow\",\r\n        padding: '1em',\r\n        background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n        backdrop: `\r\n        rgba(0,0,123,0.4)\r\n        url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n        left top\r\n        no-repeat\r\n        `\r\n      })\r\n      this.props.history.push(\"/signup\")\r\n      this.resetInput()\r\n      this.setState({ isDone: false })\r\n      return\r\n    }\r\n    this.props.showNotification('Logged in successfully :)', 'success')\r\n    this.connectSockets(this.props.user._id)\r\n    this.props.history.push(\"/\")\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { isSignUp, isLoading, isDone } = this.state\r\n    const { imgUrl } = this.state.newUser\r\n    return (\r\n      isDone ? <Loading /> :\r\n        <div className=\"signup-form\">\r\n          <form onSubmit={this.onHandleSubmit}>\r\n            {isSignUp ? <h1>SignUp</h1> : <h1>Login</h1>}\r\n            {isSignUp && <AvatarEdit onUploadImg={this.onUploadImg} imgUrl={imgUrl} isLoading={isLoading} />}\r\n            {isSignUp && <MDBInput label=\"Full Name\" name=\"fullName\" value={this.state.newUser.fullName || ''} onChange={this.onChangeHandler} />}\r\n            <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={this.state.newUser.userName || ''} onChange={this.onChangeHandler} />\r\n            <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={this.state.newUser.password || ''} onChange={this.onChangeHandler} />\r\n            <button className=\"signup-login-btn\">{isSignUp ? 'Signup' : 'Login'}</button>\r\n            {!isSignUp && <h2 >Don't Have an account?<span className=\"toggle-btn\" onClick={this.toggleSignUp}> Sign up!</span></h2>}\r\n            {isSignUp && <h2 >Head Back to <span className=\"toggle-btn\" onClick={this.toggleSignUp}>Login</span></h2>}\r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signUp,\r\n  getUser,\r\n  login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\r\n\r\n\r\n\r\n//func version:\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { MDBInput } from \"mdbreact\";\r\n// import Loading from \"../cmps/Loading\";\r\n\r\n// import Swal from 'sweetalert2'\r\n\r\n// // import SocketService from '../services/SocketService'\r\n\r\n// import { signUp, login, getUser } from '../actions/UserActions'\r\n// import { connect } from \"react-redux\";\r\n// import CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n// import { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\n\r\n// const SignupPage = (props) => {\r\n//   const [isSignup, setIsSignup] = useState(false)\r\n//   const [isLoading, setIsLoading] = useState(false)\r\n//   const [isDone, setIsDone] = useState(false)\r\n//   const [newUser, setNewUser] = useState({\r\n//     userName: '',\r\n//     fullName: '',\r\n//     password: '',\r\n//     imgUrl: '',\r\n//   })\r\n//   let loggedinUser = null\r\n\r\n//   const getLoggedinUser = async () => {\r\n//     await props.getUser()\r\n//     if (props.user) props.history.push('/')\r\n//     return props.user\r\n//   }\r\n\r\n\r\n\r\n//   const resetInput = () => {\r\n//     setNewUser({\r\n//       userName: '',\r\n//       fullName: '',\r\n//       password: '',\r\n//       imgUrl: '',\r\n//     })\r\n//   }\r\n\r\n//   const onUploadImg = async (ev) => {\r\n//     setIsLoading(true)\r\n//     let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n//     setNewUser({ ...newUser, imgUrl: userImgUrl.secure_url })\r\n//     setIsLoading(false)\r\n//   }\r\n\r\n//   const connectSockets = (id) => {\r\n//     props.onConnectSocket(id)\r\n//   }\r\n\r\n//   const onHandleSubmit = async (ev) => {\r\n//     ev.preventDefault();\r\n//     setIsDone(true)\r\n//     isSignup ? await props.signUp({ ...newUser }) : await props.login({ ...newUser })\r\n//     await getLoggedinUser()\r\n//     loggedinUser = { ...props.user }\r\n//     if (!loggedinUser.userName) {\r\n//       Swal.fire({\r\n//         title: 'Wrong password or Username.',\r\n//         width: 300,\r\n//         confirmButtonText: \"Say what?\",\r\n//         confirmButtonColor: \"yellow\",\r\n//         padding: '1em',\r\n//         background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n//         backdrop: `\r\n//         rgba(0,0,123,0.4)\r\n//         url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n//         left top\r\n//         no-repeat\r\n//         `\r\n//       })\r\n//       props.history.push(\"/signup\")\r\n//       resetInput()\r\n//       setIsDone(false)\r\n//       return\r\n//     }\r\n//     props.showNotification('Logged in successfully :)', 'success')\r\n//     connectSockets(loggedinUser._id)\r\n//     console.log(loggedinUser);\r\n//     props.history.push(\"/\")\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     getLoggedinUser()\r\n//   }, [])\r\n\r\n//   return (\r\n//     isDone ? <Loading /> :\r\n//       <div className=\"signup-form\">\r\n//         <form onSubmit={(e) => onHandleSubmit(e)}>\r\n//           {isSignup ? <h1>SignUp</h1> : <h1>Login</h1>}\r\n//           {isSignup && <AvatarEdit onUploadImg={onUploadImg} imgUrl={newUser.imgUrl} isLoading={isLoading} />}\r\n//           {isSignup && <MDBInput label=\"Full Name\" name=\"fullName\" value={newUser.fullName || ''} onChange={e => setNewUser({ ...newUser, fullName: e.target.value })} />}\r\n//           <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={newUser.userName || ''} onChange={e => setNewUser({ ...newUser, userName: e.target.value })} />\r\n//           <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={newUser.password || ''} onChange={e => setNewUser({ ...newUser, password: e.target.value })} />\r\n//           <button className=\"signup-login-btn\">{isSignup ? 'Sign up' : 'Login'}</button>\r\n//           {!isSignup && <h2 >Don't Have an account?<span className=\"toggle-btn\" onClick={() => setIsSignup(!isSignup)}> Sign up!</span></h2>}\r\n//           {isSignup && <h2 >Head Back to <span className=\"toggle-btn\" onClick={() => setIsSignup(!isSignup)}>Login</span></h2>}\r\n//         </form>\r\n//       </div>\r\n//   );\r\n\r\n// }\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     user: state.user.loggedinUser,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   signUp,\r\n//   getUser,\r\n//   login\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\r\n\r\n\r\n// //functional handle submit:\r\n// const onHandleSubmit = async (ev) => {\r\n//   ev.preventDefault();\r\n//   setIsDone(true)\r\n//   isSignup ? await props.signUp({ ...newUser }) : await props.login({ ...newUser })\r\n//   await getLoggedinUser()\r\n//   if (!props.user) {\r\n//     Swal.fire({\r\n//       title: 'Wrong password or Username.',\r\n//       width: 300,\r\n//       confirmButtonText: \"Say what?\",\r\n//       confirmButtonColor: \"yellow\",\r\n//       padding: '1em',\r\n//       background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n//       backdrop: `\r\n//       rgba(0,0,123,0.4)\r\n//       url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n//       left top\r\n//       no-repeat\r\n//       `\r\n//     })\r\n//     props.history.push(\"/signup\")\r\n//     resetInput()\r\n//     setIsDone(false)\r\n//     return\r\n//   }\r\n//   connectSockets(props.user._id)\r\n//   props.history.push(\"/\")\r\n// }","import React from \"react\";\r\nimport { getUser } from \"./actions/UserActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport InboxPage from './pages/InboxPage'\r\nimport RandomGame from './pages/RandomGame'\r\nimport StarredPage from './pages/StarredPage'\r\nimport ContactPage from './pages/ContactPage'\r\nimport RoomPage from './pages/RoomPage'\r\nimport SignupPage from './pages/SignupPage'\r\n\r\nimport Loading from './cmps/Loading'\r\nclass RoutePage extends React.Component {\r\n\r\n  async componentDidMount() {\r\n    await this.props.getUser(); \r\n    if (!this.isInSignupPage && !this.props.user) {\r\n    this.props.history.push('/signup')\r\n    }\r\n  }\r\n\r\n  get isInSignupPage() {\r\n    return this.props.location.pathname === \"/signup\";\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.props.location !== prevProps.location &&\r\n      !this.props.user &&\r\n      !this.isInSignupPage\r\n    ) {\r\n      this.props.history.push(\"/signup\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.isInSignupPage && !this.props.user) return <Loading />\r\n\r\n    return (\r\n      <div className=\"router-page\">\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/signup\" exact render={(routerProps) => <SignupPage {...routerProps} onConnectSocket={this.props.onConnectSocket} showNotification={this.props.showNotification} />} />\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/contact\" component={ContactPage} />\r\n            <Route path=\"/random-game\" exact component={RandomGame} />\r\n            <Route path=\"/starred\" exact component={StarredPage} />\r\n            <Route path=\"/room/:id\" exact render={(routerProps) => <RoomPage {...routerProps} showNotification={this.props.showNotification} />} />\r\n            {/* <Route path=\"/room/:id\" component={RoomPage} showNotification={this.props.showNotification} /> */}\r\n            <Route path=\"/inbox/:id\" exact component={InboxPage} />\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(RoutePage));\r\n","import React from \"react\";\r\nimport { stack as Menu } from \"react-burger-menu\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport { UtilService } from '../services/UtilService'\r\nimport { getUser } from '../actions/UserActions'\r\nimport { logout } from '../actions/UserActions'\r\n\r\n\r\n\r\nclass BurgerMenu extends React.Component {\r\n  state = {\r\n    menuOpen: false,\r\n    chuckJoke: ''\r\n  };\r\n\r\n  async componentDidMount () {    \r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke });     \r\n   \r\n  }\r\n\r\n async  componentWillUpdate () {\r\n    if(this.props.isClicked && !this.state.menuOpen ) {\r\n      this.setState({ menuOpen: true });\r\n    }\r\n\r\n    \r\n  }\r\n   \r\n\r\n \r\n  \r\n  closeMenu = async (ev) => {\r\n    if (ev) {\r\n      this.handleLogout()\r\n    }\r\n    \r\n    this.setState({ menuOpen: false });\r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke }); \r\n    };\r\n  \r\n  \r\n  handleLogout =  () => {\r\n     this.props.logout()\r\n     this.props.showNotification('Logged out successfully :)', 'success')\r\n\r\n\r\n    // this.props.history.push('/signup')\r\n  }\r\n\r\n\r\n  async handleStateChange(state) {\r\n\r\n    this.setState({ menuOpen: state.isOpen });\r\n    // this.props.onOpenMenu(state.isOpen)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { menuOpen, chuckJoke } = this.state\r\n    const { user } = this.props\r\n    if (!user) return ''\r\n\r\n    return (\r\n      <Menu right isOpen={menuOpen} onStateChange={(state) => this.handleStateChange(state)}>\r\n        <NavLink activeClassName=\"active\" exact to=\"/\" onClick={() => this.closeMenu()}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/contact\" exact onClick={() => this.closeMenu()}>\r\n          Contacts\r\n        </NavLink>\r\n        {user.notifications.length && <span className=\"notification-count\">{user.notifications.length}</span>}\r\n        <NavLink activeClassName=\"active\" to={`/inbox/${user._id}`} exact onClick={() => this.closeMenu()}>\r\n          Inbox\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to={`/random-game`} exact onClick={() => this.closeMenu()}>\r\n          Play Random Game\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/starred\" exact onClick={() => this.closeMenu()}  >\r\n          Starred \r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/signup\" exact onClick={() => this.closeMenu(logout)}  >\r\n          Logout\r\n        </NavLink>\r\n        <div className=\"menu-footer\">\r\n         <h5>{chuckJoke}</h5>\r\n        {/* <img src={imgObj.imgUrl} alt=\"\"/> */}\r\n        </div>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(BurgerMenu));\r\n\r\n","import React ,{useState ,useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport logo from '../../src/assets/png/petek-logo.png'\r\nimport BurgerMenu from './BurgerMenu';\r\n\r\n\r\n\r\nexport default (props) => {\r\n\r\n  const { user,showNotification } = props\r\n  const [isClicked, toggleClick] = useState(false)\r\n   \r\n  useEffect(() => {\r\n    return () => {\r\n      toggleClick(false)\r\n    };\r\n  }, [isClicked])\r\n  \r\n\r\n  return (\r\n     <nav className=\"main-navbar\">\r\n        <Link to={`/`} className=\"home-link\" >\r\n        <img src={logo} alt=\"logo\" className=\"logo\"/>\r\n        </Link>\r\n       {user && !!user.notifications.length && <span className=\"notification-count nav-count\" onClick={() => {toggleClick(true)}} >{user.notifications.length}</span>}\r\n       <BurgerMenu isClicked={isClicked} showNotification={showNotification} />\r\n    </nav>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport './App.scss';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Noty from 'noty';\r\n\r\n\r\n\r\n\r\nimport audioNotification from '../src/assets/sound/sp-tune.mp3'\r\n\r\nimport SocketService from './services/SocketService'\r\nimport { StorageService } from './services/StorageService'\r\nimport { updateUser, getUser } from '../src/actions/UserActions';\r\nimport { saveRoom, loadRoomById } from '../src/actions/RoomActions';\r\n\r\nimport RoutePage from './RoutePage'\r\nimport NavBar from './cmps/NavBar';\r\n\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = (props) => {\r\n  const loggedinUser = props.user;\r\n  const room = props.room\r\n\r\n  const connectSockets = (id) => {\r\n    if (room && loggedinUser) {\r\n      SocketService.on(`updateRoom ${room._id}`, async ({ updatedRoom, userId }) => {\r\n        if (userId !== loggedinUser._id) {\r\n          props.loadRoomById({ roomId: updatedRoom._id })\r\n        }\r\n      });\r\n    }\r\n    if (loggedinUser) {\r\n      SocketService.on(`updateUser ${loggedinUser._id}`, (updatedUser) => {\r\n        let user = StorageService.load('user')\r\n        if (loggedinUser._id === user._id) updateUser(updatedUser)\r\n      });\r\n      SocketService.on(`updateUserWithoutAudio ${loggedinUser._id}`, (updatedUser) => { props.updateUser(updatedUser) })\r\n    }\r\n  }\r\n\r\n  const disconnectSockets = () => {\r\n    console.log('disconnect sockets');\r\n    if (room) SocketService.off(`updateRoom ${room._id}`)\r\n    if (loggedinUser) {\r\n      SocketService.off(`updateUser ${loggedinUser._id}`)\r\n      SocketService.off(`updateUserWithoutAudio ${loggedinUser._id}`)\r\n    }\r\n  }\r\n\r\n  const updateUser = (updatedUser) => {\r\n    let audio = new Audio(audioNotification);\r\n    if (updatedUser) {\r\n      props.updateUser(updatedUser)\r\n      audio.play()\r\n    } else {\r\n      console.log(\"ERROR IN UPDATE USER\");\r\n    }\r\n  }\r\n\r\n  const showNotification = (text, type) => {\r\n    new Noty({\r\n      text,\r\n      type,\r\n      theme: 'bootstrap-v4',\r\n      layout: 'topRight',\r\n      animation: {\r\n        open: 'animated bounceInRight', // Animate.css class names\r\n        close: 'animated bounceOutRight' // Animate.css class names\r\n      },\r\n      timeout: 1500\r\n    }).show();\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    connectSockets()\r\n    if (loggedinUser){\r\n    console.log('connect user sockets', loggedinUser._id);\r\n    console.log(loggedinUser);\r\n    } \r\n    if (room) console.log('connect room sockets', room._id);\r\n    return () => {\r\n      disconnectSockets()\r\n      if (room) SocketService.off(`updateRoom ${room._id}`)\r\n\r\n    }\r\n\r\n  }, [loggedinUser, room]);\r\n\r\n  useEffect(() => {\r\n    SocketService.setup()\r\n\r\n\r\n    return () => {\r\n      if(loggedinUser)console.log('disconnecet user sockets', loggedinUser._id);\r\n      if (room) console.log('disconnecet room sockets', room._id);\r\n      disconnectSockets()\r\n      SocketService.terminate()\r\n\r\n    };\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <NavBar user={loggedinUser} showNotification={showNotification} />\r\n        <RoutePage onConnectSocket={connectSockets} showNotification={showNotification} />\r\n      </Router>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room: state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n  saveRoom,\r\n  loadRoomById,\r\n  getUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  \r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App.jsx'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/plus.867418af.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c79dce59.png\";","module.exports = __webpack_public_path__ + \"static/media/pin.5f588246.svg\";","module.exports = __webpack_public_path__ + \"static/media/x-mark.002e9675.svg\";"],"sourceRoot":""}