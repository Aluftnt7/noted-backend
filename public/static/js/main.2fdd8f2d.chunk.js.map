{"version":3,"sources":["assets/sound/sp-tune.mp3","assets/svg/notes.svg","assets/svg/delete.svg","assets/svg/friends.svg","assets/svg/ok.svg","assets/svg/cross.svg","assets/svg/arrow.svg","assets/svg/loading.svg","assets/svg/upload.svg","assets/svg/save.svg","assets/png/petek-logo.png","services/SocketService.js","services/StorageService.js","services/HttpService.js","services/UserService.js","actions/UserActions.js","services/RoomService.js","actions/RoomActions.js","services/UtilService.js","services/ContactService.js","actions/ContactActions.js","cmps/Filter.jsx","cmps/ContactPreview.jsx","cmps/ContactList.jsx","pages/ContactPage.jsx","services/CloudinaryService.js","cmps/ButtonMenu.jsx","cmps/Note/NoteText.jsx","cmps/Note/NoteImg.jsx","cmps/Note/NoteVideo.jsx","cmps/Note/NoteTodo.jsx","cmps/Note/NoteLoc.jsx","cmps/icons/StarIcon.jsx","cmps/icons/CircleIcon.jsx","cmps/icons/ColorPaletteIcon.jsx","cmps/Note/Features.jsx","cmps/icons/RemoveIcon.jsx","cmps/icons/EditIcon.jsx","cmps/icons/SaveIcon.jsx","cmps/Note/NotePreview.jsx","cmps/Loading.jsx","cmps/Note/NoteList.jsx","cmps/Note/InputText.jsx","cmps/Note/InputImg.jsx","services/YoutubeApiService.js","cmps/Note/InputVideo.jsx","cmps/Note/InputTodo.jsx","services/MapService.js","cmps/icons/GpsIcon.jsx","cmps/Note/InputLoc.jsx","pages/RoomPage.jsx","cmps/User/AvatarEdit.jsx","pages/HomePage.jsx","cmps/Notification/NotificationFriend.jsx","cmps/Notification/NotificationResponse.jsx","cmps/Notification/NotificationNote.jsx","cmps/Notification/NotificationPreview.jsx","cmps/Notification/NotificationList.jsx","pages/InboxPage.jsx","pages/SignupPage.jsx","RoutePage.jsx","cmps/BurgerMenu.jsx","cmps/NavBar.jsx","App.jsx","serviceWorker.js","store/reducers/UserReducer.js","store/reducers/ContactReducer.js","store/reducers/RoomReducer.js","store/index.js","index.js","assets/svg/plus.svg","assets/png/user.png","assets/svg/pin.svg","assets/svg/x-mark.svg"],"names":["module","exports","socket","setup","io","terminate","on","eventName","cb","off","emit","data","StorageService","save","key","value","console","log","item","JSON","stringify","localStorage","setItem","load","getItem","parse","axios","Axios","create","withCredentials","HttpService","endpoint","ajax","a","method","url","res","response","status","KEY","user","_id","id","credentials","userName","fullName","password","pinnedNotes","notifications","imgUrl","avatarImg","Date","now","removeItem","msg","updatedUser","userId","UserService","getById","signUp","update","login","logout","getMinimalUser","updateImgAtContacts","getLoggedinUser","getRoomIdFromContact","loggedinUser","contact","friends","find","friend","dispatch","type","getUser","updateUser","room","prm","roomId","RoomService","query","critirea","params","URLSearchParams","filterBy","queryParams","property","set","remove","checkIsValidUser","loadRoomById","saveRoom","notes","isEdit","UtilService","makeId","length","txt","possible","i","charAt","Math","floor","random","getRandomChuck","get","contacts","ContactService","term","toLowerCase","filteredFriends","filter","includes","getContactById","Promise","resolve","reject","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","push","_addContact","getEmptyContact","loadContacts","setFilterBy","moveToContact","placeHolder","minLength","className","debounceTimeout","placeholder","onChange","e","target","onKeyDown","ev","keyCode","preventDefault","onAddFriend","moveToRoom","setRoomId","useState","isFriendSent","setIsFriendSent","isFriend","setIsFriend","useEffect","toggleIsFriend","onClick","src","alt","friendReqSent","addFriendImg","props","onMoveToRoom","isHome","map","ContactPreview","swipeLeft","content","deleteUser","action","swipeRight","addNote","mapDispatchToProps","connect","state","history","Filter","ContactList","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","secure","then","json","catch","err","error","setNoteType","setNoteInputType","setNoteData","isOpen","setIsOpen","slideSpeed","direction","spacing","iconResting","style","fontSize","nativecolor","iconActive","backgroundColor","size","icon","fill","note","header","width","allow","title","currRoom","currTodoIdx","setCurrTodoIdx","setIsNewTodo","isNewTodo","editedTodo","setEditedTodo","newTodo","setNewTodo","progress","setProgress","editInputRef","createRef","newTodoInputRef","toggleIsDone","idx","isDone","SocketService","doneTodosCount","reduce","acc","todo","prog","parseInt","culcProgress","current","focus","text","PlusIcon","checked","readOnly","ref","xmark","removeTodo","completed","labelSize","ArrowIcon","todoToAdd","addTodo","name","height","navigator","platform","indexOf","window","open","coords","lat","lng","bootstrapURLKeys","center","yesIWantToUseGoogleMapApiInternals","defaultZoom","distanceToMouse","onGoogleApiLoaded","maps","Marker","position","PinIcon","renderMarkers","isPinned","viewBox","xmlns","d","version","xmlnsXlink","x","y","xmlSpace","enableBackground","clipRule","fillRule","togglePinned","setNoteColor","isPalleteOpen","setIsPalleteOpen","changeColor","color","StarIcon","CircleIcon","removeNote","saveRoomChanges","setIsEdit","NoteType","NoteText","NoteImg","NoteVideo","NoteTodo","NoteLoc","noteRef","paintNote","bgColor","createdBy","EditIcon","SaveIcon","RemoveIcon","format","createdAt","Features","Loading","loading","notesForDisplay","setNotesForDisplay","fixedNotes","unshift","NotePreview","setNoteHeader","handleSubmit","onSubmit","hidden","onUploadImg","inputRef","click","API_KEY","YoutubeApiService","youtubeQuery","items","addVideo","videos","setVideos","searchYoutubeVideos","queryStr","youtubeVideos","video","videoId","snippet","thumbnails","default","noteData","currTodo","setCurrTodo","textInput","React","useRef","xMark","todoIdx","saveIcon","GAPI_KEY","MapService","searchLocs","searchAddress","getPosition","geolocation","getCurrentPosition","split","join","results","locs","setLocs","selectedLoc","setSelectedLoc","addressInputRef","searchLoc","locations","fetchUserCoords","userPos","latitude","longitude","accurateAddressIdx","address","address_components","short_name","dataObj","geometry","location","GpsIcon","loc","place_id","formatted_address","setLocNote","resetCurrRoom","noteType","noteHeader","noteInputType","isUploading","setIsUploading","isValidUser","setIsValidUser","newNote","InputType","InputText","InputImg","InputVideo","InputTodo","InputLoc","loadRoom","match","CloudinaryService","secure_url","onHandleSubmit","minimalUser","currFriend","friendId","showNotification","noteId","onFilter","isMarkerShown","ButtonMenu","NoteList","choosenNoteIdx","currNote","AvatarEdit","isLoading","setIsLoading","setIsHome","getUpdatedUser","userImgUrl","Object","assign","stopPropagation","notification","onApprove","onDecline","isApproved","onDeleteNotification","to","NotificationType","NotificationFriend","NotificationResponse","NotificationNote","fromNow","NotificationPreview","currNotification","NotificationList","newUser","isSignup","setIsSignup","setIsDone","setNewUser","Swal","fire","confirmButtonText","confirmButtonColor","padding","background","backdrop","onConnectSocket","label","RoutePage","this","isInSignupPage","prevProps","prevState","path","exact","render","routerProps","component","HomePage","ContactPage","InboxPage","pathname","Component","withRouter","BurgerMenu","menuOpen","chuckJoke","closeMenu","handleLogout","setState","isClicked","right","onStateChange","handleStateChange","activeClassName","toggleClick","logo","createBrowserHistory","connectSockets","updatedRoom","disconnectSockets","audio","Audio","audioNotification","play","Noty","theme","layout","animation","close","timeout","show","NavBar","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","currContact","rooms","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2fdd8f2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sp-tune.a3eeb710.mp3\";","module.exports = __webpack_public_path__ + \"static/media/notes.99b87156.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.89ccc1b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/friends.e8f88cde.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.251fc800.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.21df9a01.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.15b12873.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.a4b15b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.926d5c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.d5a09bc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/petek-logo.e7a6391d.png\";","import io from 'socket.io-client';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/' :\r\n    '//localhost:3030'\r\nvar socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit,\r\n}\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb)\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb)\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    \r\n    socket.emit(eventName, data)\r\n}\r\n\r\n","function save(key, value) {\r\n    console.log('$$$SAVE INVOKED$$$$', value);\r\n    let item = JSON.stringify(value);\r\n    localStorage.setItem(key, item);\r\n}\r\nfunction load(key) {\r\n    console.log('$$$LOAD INVOKED$$$$');\r\n    let item = localStorage.getItem(key)\r\n    let value = JSON.parse(item);\r\n    return value;\r\n}\r\n\r\n\r\nexport const StorageService = {\r\n    save,\r\n    load\r\n}","// import router from '@/router'\r\n// import store from '@/store'\r\n\r\nimport Axios from 'axios';\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nconst BASE_URL = process.env.NODE_ENV !== 'development' ?\r\n    '/api/' :\r\n    '//localhost:3030/api/'\r\n\r\n\r\nexport const HttpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            method,\r\n            url: `${BASE_URL}${endpoint}`,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            return false\r\n                // throw new Error('error:  http.service page')\r\n                // router.push('/');\r\n        }\r\n    }\r\n}","import { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\nimport avatarImg from '../assets/png/user.png'\r\n\r\n\r\nconst KEY = 'user';\r\n\r\n// async function getLoggedinUser() {\r\n//     var user = StorageService.load(KEY);\r\n//     return !user ? null : await HttpService.get(`user/${user._id}`)\r\n// }\r\nasync function getLoggedinUser() {\r\n    var user = StorageService.load(KEY);\r\n    if (!user) return null\r\n    user = await HttpService.get(`user/${user._id}`)\r\n    return user\r\n}\r\n// async function getUpdatedUser() {\r\n//     var user = StorageService.load(KEY);\r\n//     return\r\n\r\n\r\n\r\nasync function getById(id) {\r\n    const user = await HttpService.get(`user/${id}`)\r\n    return user\r\n}\r\n\r\nasync function signUp(credentials) {\r\n    let user = {\r\n        userName: credentials.userName,\r\n        fullName: credentials.fullName,\r\n        password: credentials.password,\r\n        pinnedNotes: [],\r\n        notifications: [],\r\n        pinnedNotes: [],\r\n        imgUrl: credentials.imgUrl ? credentials.imgUrl : avatarImg,\r\n        joinedAt: Date.now(),\r\n        friends: []\r\n    };\r\n\r\n    user = await HttpService.post('auth/signup', user)\r\n    StorageService.save(KEY, user);\r\n    // getUser()\r\n    return user;\r\n}\r\n\r\nasync function login(credentials) {\r\n    const user = await HttpService.post('auth/login', credentials)\r\n    if (!user) return null;\r\n    StorageService.save(KEY, user);\r\n    return user;\r\n}\r\n\r\n\r\nasync function logout() {\r\n    localStorage.removeItem(KEY)\r\n    const msg = await HttpService.post('auth/logout');\r\n    return (msg)\r\n}\r\n\r\nasync function update(user) {\r\n    const updatedUser = await HttpService.put(`user/${user._id}`, user)\r\n    StorageService.save(KEY, updatedUser);\r\n    return updatedUser\r\n}\r\n\r\nasync function updateImgAtContacts(userId, imgUrl) {\r\n    await HttpService.put(`user/${userId}/update`, { userId, imgUrl })\r\n}\r\n\r\n\r\nfunction getMinimalUser(_id, imgUrl) {\r\n    return {\r\n        _id,\r\n        imgUrl\r\n    }\r\n}\r\n\r\nfunction getRoomIdFromContact(loggedinUser, contact) {\r\n    return loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n\r\n}\r\n\r\nexport const UserService = {\r\n    getById,\r\n    signUp,\r\n    update,\r\n    login,\r\n    logout,\r\n    getMinimalUser,\r\n    updateImgAtContacts,\r\n    getLoggedinUser,\r\n    getRoomIdFromContact\r\n}","import { UserService } from '../services/UserService'\r\n\r\nexport function signUp(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.signUp(user);\r\n        dispatch({ type: 'SET_USER', newUser })\r\n    }\r\n}\r\nexport function login(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.login(user);\r\n        dispatch({ type: 'SET_USER', user: newUser })\r\n    }\r\n}\r\nexport function logout() {\r\n    const user = null\r\n    return async dispatch => {\r\n        await UserService.logout();\r\n        dispatch({ type: 'SET_USER', user })\r\n    }\r\n}\r\n\r\nexport function getUser() {\r\n    return async dispatch => {\r\n        const user = await UserService.getLoggedinUser();\r\n        console.log('user in actions', user);\r\n        dispatch({ type: 'GET_USER', user })\r\n        // const latestUser = await UserService.getUpdatedUser();\r\n        // dispatch({ type: 'GET_USER', latestUser })\r\n    }\r\n}\r\n\r\n\r\n// export function getUpdatedUser() {\r\n//     return async dispatch => {\r\n//         const user = await UserService.getUpdatedUser();\r\n//         console.log('user in actions');\r\n//         dispatch({ type: 'GET_USER', user })\r\n//     }\r\n// }\r\n\r\nexport function updateUser(user) {\r\n    console.log('@@@user in actions@@@', user);\r\n    return async dispatch => {\r\n        const updatedUser = await UserService.update(user);\r\n        dispatch({ type: 'SET_USER', user: updatedUser })\r\n    }\r\n}","import { HttpService } from './HttpService';\r\n\r\nfunction query(critirea) {\r\n    const params = new URLSearchParams(critirea);\r\n    return HttpService.get(`room?${params}`);\r\n}\r\n\r\n\r\nfunction getById(filterBy) {\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]) {\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        }\r\n        return HttpService.get(`room?${queryParams}`);\r\n    }\r\n}\r\n\r\n\r\n\r\n// function getById(filterBy) {\r\n//     console.log(id);\r\n//     return HttpService.get(`room/${id}`);\r\n// }\r\n\r\n\r\n\r\n\r\nfunction remove(id) {\r\n    return HttpService.delete(`room/${id}`);\r\n}\r\n\r\nasync function save(room) {\r\n    let prm;\r\n\r\n    if (room._id) prm = HttpService.put(`room/${room._id}`, room);\r\n    else {\r\n        prm = HttpService.post('room', room);\r\n    }\r\n    const res = await prm;\r\n    return res;\r\n}\r\n\r\n\r\nasync function checkIsValidUser(userId, roomId) {\r\n    return HttpService.post(`room/${roomId}/validate`, { userId, roomId })\r\n}\r\n\r\n\r\nexport const RoomService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    checkIsValidUser\r\n}\r\n\r\n\r\n\r\n","import { RoomService } from '../services/RoomService'\r\n\r\n// LIST\r\nexport function loadRooms(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            const rooms = await RoomService.query(filterBy);\r\n            dispatch({ type: 'SET_ROOMS', rooms })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadRoomById(filterBy) {\r\n    console.log('filterBy in actions',filterBy);\r\n    \r\n    return async dispatch => {\r\n        try {\r\n            const room = await RoomService.getById(filterBy);\r\n            dispatch({ type: 'SET_CURR_ROOM', room })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrRoom() {\r\n    console.log('made it');\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const room = null\r\n            dispatch({ type: 'SET_CURR_ROOM', room })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveRoom(room) {\r\nconsole.log(room.notes);\r\n\r\n    return async dispatch => {\r\n        const isEdit = !!room._id;\r\n        room = await RoomService.save(room);\r\n        if (isEdit) dispatch({ type: 'SET_CURR_ROOM', room })\r\n        // dispatch({ type: 'UPDATE_ROOM', room }) \r\n        else dispatch({ type: 'ADD_ROOM', room })\r\n        return room;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteRoom(id) {\r\n    return async dispatch => {\r\n        await RoomService.remove(id);\r\n        dispatch({ type: 'DELETE_ROOM', id })\r\n    }\r\n}","import axios from 'axios';\r\n\r\n\r\n\r\nexport const UtilService = {\r\n    makeId,\r\n    getRandomChuck\r\n    // getRandomMeme\r\n}\r\n\r\nfunction makeId(length = 12) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nasync function getRandomChuck(){\r\n    const res = await axios.get(`https://api.chucknorris.io/jokes/random`);\r\n    return res.data.value\r\n}\r\n// async function getRandomMeme(){\r\n//     const res = await axios.get(`https://meme-api.herokuapp.com/gimme/dankmemes/1`);\r\n//      let imgObj = {imgUrl:res.data.memes[0].url, imgHeader:res.data.memes[0].title }\r\n//      return imgObj\r\n// }","import { UtilService } from './UtilService'\r\nimport { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\n\r\n\r\nconst CONTACT_KEY = 'contacts';\r\n\r\nvar contacts = [{\r\n        \"_id\": \"aa56640269f443a5d64b32ca\",\r\n        \"fullName\": \"Eyal Golan\",\r\n        \"userName\": \"Eyalush\",\r\n        \"friends\": []\r\n    },\r\n    {\r\n        \"_id\": \"ba56640269f443a5d64b32cb\",\r\n        \"fullName\": \"Omer Adam\",\r\n        \"userName\": \"Omerush\",\r\n        \"friends\": []\r\n    },\r\n    {\r\n        \"_id\": \"ca56640269f443a5d64b32cc\",\r\n        \"fullName\": \"Zohar Argov\",\r\n        \"userName\": \"Ha Melech\",\r\n        \"friends\": []\r\n    }\r\n];\r\n\r\n// function sort(arr) {\r\n//     return arr.sort((a, b) => {\r\n//         if (a.userName.toLocaleLowerCase() < b.userName.toLocaleLowerCase()) {\r\n//             return -1;\r\n//         }\r\n//         if (a.userName.toLocaleLowerCase() > b.userName.toLocaleLowerCase()) {\r\n//             return 1;\r\n//         }\r\n\r\n//         return 0;\r\n//     })\r\n// }\r\n\r\n// function query(filterBy = null) {\r\n//     return new Promise((resolve, reject) => {\r\n//         var contactsToReturn = StorageService.load(CONTACT_KEY);\r\n//         if (!contactsToReturn || !contactsToReturn.length) {\r\n//             contactsToReturn = [...contacts]\r\n//             StorageService.save(CONTACT_KEY, contactsToReturn)\r\n//         }\r\n//         contacts = [...contactsToReturn]\r\n//         if (filterBy && filterBy.term) {\r\n//             contactsToReturn = filter(filterBy.term)\r\n//         }\r\n//         contactsToReturn ? resolve(sort(contactsToReturn)) : reject(`Contacts not found!`)\r\n//     })\r\n// }\r\nfunction query(filterBy, user) {\r\n    if (filterBy.term && user) {\r\n        filterBy.term = filterBy.term.toLowerCase()\r\n        var filteredFriends = user.friends.filter(friend => {\r\n            return friend.userName.toLowerCase().includes(filterBy.term) || friend.fullName.toLowerCase().includes(filterBy.term)\r\n        })\r\n        return filteredFriends.length ? filteredFriends : ''\r\n    }\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]) {\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        }\r\n        console.log(queryParams);\r\n        return HttpService.get(`user?${queryParams}`);\r\n    }\r\n\r\n}\r\n// function query(filterBy, user) {\r\n//     console.log(filterBy);\r\n//     console.log(user);\r\n//     // if (!filterBy.term) return []\r\n//     const queryParams = new URLSearchParams();\r\n//     if (filterBy) {\r\n//         for (const property in filterBy) {\r\n//             if (filterBy[property]) {\r\n//                 queryParams.set(property, filterBy[property])\r\n//             }\r\n//         }\r\n//         console.log(queryParams);\r\n//         return HttpService.get(`user?${queryParams}`);\r\n//     }\r\n//     // return HttpService.get('user');\r\n// }\r\n\r\n\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        // console.log('(edit)Contacts after replace ', contacts)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    // console.log('add contact')\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = UtilService.makeId()\r\n        contacts.push(contact)\r\n            // console.log('(ADD)Contacts after push ', contacts)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    // console.log('save contact', contact)\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        fullName: '',\r\n        userName: '',\r\n    }\r\n}\r\n\r\n// function filter(term) {\r\n//     term = term.toLocaleLowerCase()\r\n//     return contacts.filter(contact => {\r\n//         return contact.userName.toLocaleLowerCase().includes(term) ||\r\n//             contact.fullName.toLocaleLowerCase().includes(term)\r\n//     })\r\n// }\r\n\r\nexport const ContactService = {\r\n    query,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}","import { ContactService } from '../services/ContactService'\r\n\r\n// LIST\r\nexport function loadContacts(filterBy,user) {\r\n    return async dispatch => {\r\n        try {\r\n            const contacts = await ContactService.query(filterBy,user);\r\n            dispatch({ type: 'SET_CONTACTS', contacts })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadContactById(id) {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = await ContactService.getContactById(id);\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrContact() {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = null\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveContact(contact) {\r\n    return async dispatch => {\r\n        const isEdit = !!contact._id\r\n        contact = await ContactService.saveContact(contact);\r\n        if (isEdit) dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        else dispatch({ type: 'ADD_CONTACT', contact })\r\n        return contact;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', id })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nexport default ({ filterBy, setFilterBy, moveToContact, placeHolder }) => {\r\n\r\n    const onKeyHandler = (ev) => {\r\n        if (ev.keyCode === 13) {\r\n            ev.preventDefault()\r\n            moveToContact()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <DebounceInput\r\n                minLength={0}\r\n                className=\"filter-input\"\r\n                debounceTimeout={300}\r\n                type=\"text\"\r\n                placeholder={placeHolder ? placeHolder : 'Search Contacts'}\r\n                onChange={e => setFilterBy({ ...filterBy, term: e.target.value })}\r\n                onKeyDown={onKeyHandler}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nimport addFriendImg from '../assets/svg/friends.svg'\r\nimport friendReqSent from '../assets/svg/ok.svg'\r\n\r\n\r\n\r\nexport default ({ contact, onAddFriend, loggedinUser, moveToRoom,setRoomId,roomId }) => {\r\n\r\n\r\n    const [isFriendSent, setIsFriendSent] = useState(false)\r\n    const [isFriend, setIsFriend] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!loggedinUser) return\r\n        let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n        if (friend) {\r\n            setIsFriend(true)\r\n            setRoomId(friend.roomId)\r\n        } else {\r\n            setIsFriend(false)\r\n        }\r\n       \r\n    },[loggedinUser, contact._id]);\r\n\r\n    const toggleIsFriend = (ev) => {\r\n        // ev.preventDefault()\r\n        setIsFriendSent(true)\r\n\r\n    }\r\n    \r\n\r\n    const handelClick = (ev) => {\r\n        onAddFriend(contact._id);\r\n        toggleIsFriend(ev)\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) contact.roomId ?  moveToRoom(ev,contact.roomId) : moveToRoom(ev,contact)  }}>    \r\n          <img src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" />\r\n            <div className=\"user-name-container\">\r\n                <span>Full Name: {contact.fullName}</span>\r\n                <span>User Name: {contact.userName}</span>\r\n            </div>\r\n            {!contact.roomId &&\r\n                <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n                    alt=\"\"\r\n                    className=\"add-friend-img\"\r\n                    onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}      \r\n           \r\n        </div>\r\n       \r\n\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\n// import '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\n\r\n\r\n// import addFriendImg from '../assets/svg/friends.svg'\r\n// import friendReqSent from '../assets/svg/ok.svg'\r\n// import addNote from '../assets/svg/notes.svg'\r\n// import deleteUser from '../assets/svg/delete.svg'\r\n\r\n\r\n// export default ({ contact, onAddFriend, loggedinUser, moveToRoom,isHome }) => {\r\n\r\n\r\n//     const [isFriendSent, setIsFriendSent] = useState(false)\r\n//     const [isFriend, setIsFriend] = useState(false)\r\n//     const [roomId, setRoomId] = useState('')\r\n\r\n//     useEffect(() => {\r\n//         if (!loggedinUser) return\r\n//         let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n//         if (friend) {\r\n//             setIsFriend(true)\r\n//             setRoomId(friend.roomId)\r\n//         } else {\r\n//             setIsFriend(false)\r\n//         }\r\n//     },[loggedinUser, contact._id]);\r\n\r\n//     const toggleIsFriend = (ev) => {\r\n//         // ev.preventDefault()\r\n//         setIsFriendSent(true)\r\n\r\n//     }\r\n    \r\n\r\n//     const handelClick = (ev) => {\r\n//         onAddFriend(contact._id);\r\n//         toggleIsFriend(ev)\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div className=\"swipe-container\">\r\n//       <SwipeableListItem \r\n      \r\n//     swipeLeft={{\r\n//         content:<img className=\"swipe-content-left\" src={deleteUser}/>,\r\n//         action: (ev) => {console.log('balls');},\r\n        \r\n//     }}\r\n//     swipeRight={{\r\n//         content:isHome ? <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg} className=\"add-friend-img\"/> :  <img className=\"swipe-content-right\" src={addNote}/>,\r\n//         action: isHome ?  (ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev) : (ev) => { moveToRoom(ev,roomId)},\r\n        \r\n//     }} \r\n//     >\r\n//       <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) moveToRoom(ev,roomId) }}>    \r\n//           <img src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" />\r\n//             <div className=\"user-name-container\">\r\n//                 <span>Full Name: {contact.fullName}</span>\r\n//                 <span>User Name: {contact.userName}</span>\r\n//             </div>\r\n//             {!contact.roomId &&\r\n//                 <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n//                     alt=\"\"\r\n//                     className=\"add-friend-img\"\r\n//                     onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}      \r\n           \r\n//         </div>\r\n//          </SwipeableListItem>\r\n//         </div>\r\n       \r\n\r\n//     );\r\n// };","import React, {useState} from 'react'\r\nimport { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\nimport addNote from '../assets/svg/notes.svg'\r\nimport deleteUser from '../assets/svg/delete.svg'\r\n\r\n\r\nimport ContactPreview from './ContactPreview'\r\nexport default (props) => {\r\n    const { onAddFriend, loggedinUser, onMoveToRoom, isHome } = props\r\n    \r\n        const [roomId, setRoomId] = useState('')\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"contact-list swipe-container\">\r\n            {props.contacts.map(contact => {\r\n                return (\r\n                    <div key={contact._id}>\r\n              {!isHome ? <SwipeableListItem \r\n              swipeLeft={{\r\n                     content:<img className=\"swipe-content-left\" src={deleteUser}/>,\r\n                     action: (ev) => {console.log('balls');},\r\n                       \r\n                       \r\n                    }}\r\n                    swipeRight={{\r\n                        content: <img className=\"swipe-content-right\" src={addNote}/>,\r\n                        action:  (ev) => { onMoveToRoom(ev,contact.roomId)},\r\n                        key:contact._id\r\n        \r\n    }} \r\n    >\r\n                    <ContactPreview\r\n                        contact={contact}\r\n                        onAddFriend={onAddFriend}\r\n                        loggedinUser={loggedinUser}\r\n                        key={contact._id}\r\n                        moveToRoom={onMoveToRoom}\r\n                        isHome={isHome}\r\n                        setRoomId={setRoomId}\r\n                        roomId={roomId}\r\n                    />\r\n            </SwipeableListItem> : \r\n               <ContactPreview\r\n                        contact={contact}\r\n                        onAddFriend={onAddFriend}\r\n                        loggedinUser={loggedinUser}\r\n                        key={contact._id}\r\n                        moveToRoom={onMoveToRoom}\r\n                        isHome={isHome}\r\n                        setRoomId={setRoomId}\r\n                        roomId={roomId}\r\n\r\n                    />}\r\n            </div>\r\n                )\r\n            })}\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n\r\n// import ContactPreview from './ContactPreview'\r\n// export default (props) => {\r\n//     const { onAddFriend, loggedinUser, onMoveToRoom, isHome } = props\r\n\r\n\r\n//     return (\r\n//         <div className=\"contact-list\">\r\n//             {props.contacts.map(contact => {\r\n//                 return (\r\n//                     <ContactPreview\r\n//                         contact={contact}\r\n//                         onAddFriend={onAddFriend}\r\n//                         loggedinUser={loggedinUser}\r\n//                         key={contact._id}\r\n//                         moveToRoom={onMoveToRoom}\r\n//                         isHome={isHome}\r\n//                     />\r\n//                 )\r\n//             })}\r\n//         </div>\r\n//     );\r\n// };\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadContacts } from '../actions/ContactActions';\r\nimport { loadRoomById } from '../actions/RoomActions';\r\n\r\nimport Filter from '../cmps/Filter'\r\nimport ContactList from '../cmps/ContactList'\r\n\r\nconst ContactPage = (props) => {\r\n    const [filterBy, setFilterBy] = useState({ term: '', roomId: '' })\r\n    const { contacts, user } = props\r\n\r\n\r\n\r\n    const onMoveToRoom = async (ev,roomId) => {   \r\n       \r\n        if(!props.history){\r\n        await props.loadRoomById({ roomId });\r\n        return\r\n        } \r\n        props.history.push(`/room/${roomId}`);\r\n    }\r\n\r\n    const loadContacts = async () => {\r\n        console.log('contact page loading contacts');\r\n        await props.loadContacts(filterBy, user);\r\n    };\r\n\r\n    const handleKeyPress = () => {\r\n        if (props.contacts.length === 1) {\r\n            let id = props.contacts[0]._id\r\n            props.history.push(`/room/${id}`);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadContacts()\r\n    }, [filterBy])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {user && <div>\r\n                <Filter\r\n                    filterBy={filterBy}\r\n                    setFilterBy={setFilterBy}\r\n                    moveToContact={handleKeyPress} />\r\n                {!!contacts && <ContactList onMoveToRoom={onMoveToRoom} loggedinUser={user} contacts={contacts.length ? contacts : user.friends}></ContactList>}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts,\r\n    loadRoomById\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage);","function uploadImg(ev) {\r\n    const CLOUD_NAME = \"tamir\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n        if (ev.target) {\r\n            formData.append('file', ev.target.files[0])\r\n        } else {\r\n            formData.append('file', ev)\r\n        }\r\n    formData.append('upload_preset', 'u1inrfbp'); // second parameter is the upload preset\r\n\r\n    return fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData,\r\n            secure:true\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport default {\r\n    uploadImg\r\n}","import React, { useState } from 'react';\r\nimport {\r\n    FloatingMenu,\r\n    MainButton,\r\n    ChildButton,\r\n} from 'react-floating-button-menu';\r\nimport MdAdd from '@material-ui/icons/Add';\r\nimport MdClose from '@material-ui/icons/Clear';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport LocIcon from '@material-ui/icons/Room';\r\n\r\n// import SvgIcon from '@material-ui/core/SvgIcon';    //PROBABLY NOT NEEDED\r\n// import styled from 'styled-components' //PROBABLY NOT NEEDED\r\n\r\nexport default ({ setNoteType, setNoteInputType, setNoteData }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    return (\r\n        <FloatingMenu\r\n            slideSpeed={500}\r\n            direction=\"up\"\r\n            spacing={8}\r\n            isOpen={isOpen}\r\n            className=\"button-menu\"\r\n        >\r\n            <MainButton\r\n                iconResting={<MdAdd style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                iconActive={<MdClose style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                backgroundColor=\"black\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                size={56}\r\n            />\r\n            <ChildButton\r\n                icon={<TextFieldsIcon style={{ fontSize: 20, fill: '#51a255' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteText'); setIsOpen(!isOpen); setNoteInputType('InputText') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ImageIcon style={{ fontSize: 20, fill: '#28b5f2' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteImg'); setIsOpen(!isOpen); setNoteInputType('InputImg') }}\r\n            />\r\n            <ChildButton\r\n                icon={<VideocamIcon style={{ fontSize: 20, fill: '#ff0000' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteVideo'); setIsOpen(!isOpen); setNoteInputType('InputVideo') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ListIcon style={{ fontSize: 20, fill: '#ffa350' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteTodo'); setIsOpen(!isOpen); setNoteInputType('InputTodo'); setNoteData([]) }}\r\n            />\r\n              <ChildButton\r\n                icon={<LocIcon style={{ fontSize: 20, fill: '#800080' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteLoc'); setIsOpen(!isOpen); setNoteInputType('InputLoc'); setNoteData(null) }}\r\n            />\r\n        </FloatingMenu>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-text\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <p>{note.data}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-img\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <img src={note.data} alt={note.data} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    const formattedVidLink = () => {\r\n        return 'https://www.youtube.com/embed/' + note.data\r\n    }\r\n    return (\r\n        <div className=\"note-video\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <iframe width=\"100%\" allow=\"fullscreen\" src={formattedVidLink()} title=\"Video Player\"></iframe>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, createRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport ProgressBar from '@ramonak/react-progress-bar';\r\n\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport xmark from '../../assets/svg/cross.svg'\r\nimport ArrowIcon from '../../assets/svg/arrow.svg'\r\n\r\nimport { saveRoom } from '../../actions/RoomActions';\r\n//TODO: IMPROVE EDIT INPUT AND MINUS UI +++ reflect trough socket\r\n\r\nconst NoteTodo = ({ note, saveRoom, room, userId, isEdit, currTodoIdx, setCurrTodoIdx, setIsNewTodo, isNewTodo }) => {\r\n    const [editedTodo, setEditedTodo] = useState('');\r\n    const [newTodo, setNewTodo] = useState('');\r\n    const [progress, setProgress] = useState(0)\r\n    const editInputRef = createRef();\r\n    const newTodoInputRef = createRef()\r\n\r\n    const toggleIsDone = async (idx) => {\r\n        if (isEdit) return\r\n        note.data[idx].isDone = !note.data[idx].isDone\r\n        await saveRoom(room)\r\n        SocketService.emit(\"roomUpdated\", { room, userId });\r\n    }\r\n\r\n\r\n    const addTodo = () => {\r\n\r\n        let todoToAdd = { text: newTodo, isDone: false }\r\n\r\n        note.data.push(todoToAdd);\r\n        setIsNewTodo(false)\r\n        setNewTodo('')\r\n        newTodoInputRef.current.value = ''\r\n    };\r\n\r\n    const removeTodo = (idx) => {\r\n        note.data.splice(idx, 1)\r\n    }\r\n\r\n    const culcProgress = () => {\r\n        let doneTodosCount = note.data.reduce((acc, todo) => {\r\n            if (todo.isDone) acc++\r\n            return acc;\r\n        }, 0);\r\n        let prog = parseInt(doneTodosCount / note.data.length * 100)\r\n        setProgress(prog)\r\n    }\r\n\r\n    useEffect(() => {\r\n        culcProgress()\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if (editInputRef.current) editInputRef.current.focus()\r\n        if (currTodoIdx !== '' && editInputRef.current) note.data[currTodoIdx].text = editedTodo\r\n    }, [editedTodo, currTodoIdx])\r\n\r\n    return (\r\n        <div className=\"note-todo\">\r\n            <div className=\"todo-header\">\r\n                {note.header && <h4>{note.header}</h4>}\r\n                {isEdit && <img src={PlusIcon} className=\"new-todo-btn\" onClick={() => { setIsNewTodo(true) }} />}\r\n            </div>\r\n            <ul>\r\n                {!!note.data.length && note.data.map((todo, idx) => {\r\n                    return (\r\n                        <li key={todo.text} onClick={() => {\r\n                            if (isEdit) {\r\n                                setCurrTodoIdx(idx);\r\n                                setEditedTodo(todo.text)\r\n                            }\r\n                        }}>\r\n                            <div>\r\n                            <input type=\"checkbox\" onClick={(ev) => toggleIsDone(idx)} checked={todo.isDone} readOnly />\r\n                            {(currTodoIdx !== idx) && <span className={todo.isDone ? 'done' : ''} >{todo.text}</span>}\r\n                            </div>\r\n                            {(isEdit && currTodoIdx === idx) && <input type=\"text\" value={editedTodo} ref={editInputRef} onChange={(e) => { setEditedTodo(e.target.value); }} />\r\n                            }\r\n                            {isEdit && <img src={xmark} className=\"remove-todo-btn\" onClick={() => removeTodo(idx)} />}\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <div className=\"progress-bar\">\r\n            <ProgressBar completed={progress} labelSize={!progress ? '0' : '0.75rem' }/>\r\n            </div>\r\n            {isNewTodo && <div>\r\n                <input type=\"text\" placeholder=\"New Todo\" ref={newTodoInputRef} onChange={e => setNewTodo(e.target.value)} />\r\n                <img src={ArrowIcon} className=\"add-todo-btn\" onClick={() => addTodo()} />\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n//checkbox read only prop makes error go away, we will let it stay for a while\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    saveRoom,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTodo);","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nimport PinIcon from '../../assets/svg/pin.svg'\r\n\r\n\r\n\r\nexport default ({ note }) => {\r\n    const mapsSelector = () => {\r\n        if /* if we're on iOS, open in Apple Maps */\r\n            ((navigator.platform.indexOf(\"iPhone\") != -1) ||\r\n            (navigator.platform.indexOf(\"iPod\") != -1) ||\r\n            (navigator.platform.indexOf(\"iPad\") != -1))\r\n            window.open(`maps://maps.google.com/maps?daddr=${note.data.coords.lat},${note.data.coords.lng}&amp;ll=`);\r\n\r\n        else /* else use Google */\r\n            window.open(`https://maps.google.com/maps?daddr=${note.data.coords.lat},${note.data.coords.lng}&amp;ll=\"`);\r\n    }\r\n\r\n    const renderMarkers = (map, maps) => {\r\n        let marker = new maps.Marker({\r\n            position: { lat: note.data.coords.lat, lng: note.data.coords.lng },\r\n            map,\r\n            icon: PinIcon\r\n        });\r\n        return marker;\r\n    };\r\n\r\n    return (\r\n        <div className=\"note-loc\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            {note.data.name && <h6>{note.data.name}</h6>}\r\n            {note && <div style={{ height: '30vh', width: '100%' }} onClick={mapsSelector}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA' }}\r\n                    center={note.data.coords}\r\n                    yesIWantToUseGoogleMapApiInternals={true}\r\n                    defaultZoom={18}\r\n                    distanceToMouse={() => { }}\r\n                    onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n                >\r\n                </GoogleMapReact>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default ({ isPinned }) => {\r\n\r\n    return <svg className={isPinned ? 'star-icon pinned' : 'star-icon'} viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\"  /></svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default ({ fill }) => {\r\n\r\n    return <svg className=\"circle-icon\" style={{ fill }} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 512 512\" xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"color-pallete-icon\" enableBackground=\"new 0 0 512.037 512.037\" viewBox=\"0 0 512.037 512.037\" xmlns=\"http://www.w3.org/2000/svg\"><g>\r\n        <g clipRule=\"evenodd\" fillRule=\"evenodd\">\r\n            <path d=\"m237.033 233.985 41.012 41.013 64.978-69.184 153.518-163.455c7.154-7.617 7.389-19.481 0-26.87s-19.253-7.154-26.87 0l-163.455 153.519z\" fill=\"#6d91ac\" />\r\n            <path d=\"m278.045 274.998-41.012-41.013c-68.762 18.425-23.075 64.087-57.278 98.291 28.514 16.463 98.291-4.426 98.29-57.278z\" fill=\"#f4e9e2\" />\r\n            <path d=\"m179.754 332.276c34.203-34.203-11.484-79.866 57.278-98.291l69.183-64.977c-7.007-13.059-10.558-27.482-10.655-41.924-.175-26.127 24.949-56.528-41.774-63.75-63.943-6.921-130.337 14.12-179.356 63.14-85.915 85.916-85.915 225.211 0 311.127 85.916 85.916 225.211 85.916 311.127 0 49.019-49.019 70.061-115.413 63.14-179.356-7.222-66.723-37.623-41.6-63.75-41.774-14.442-.097-28.866-3.648-41.925-10.655l-64.978 69.184c.002 52.85-69.775 73.739-98.29 57.276zm5.074-164.71c-15.307 6.34-32.857-.929-39.197-16.236s.929-32.856 16.236-39.197 32.857.929 39.198 16.236c6.339 15.307-.93 32.856-16.237 39.197zm-66.154 66.13c-6.34 15.307-23.89 22.576-39.197 16.236-15.307-6.341-22.576-23.89-16.236-39.197s23.89-22.577 39.197-16.236 22.576 23.89 16.236 39.197zm-.017 93.538c6.34 15.307-.929 32.857-16.236 39.197s-32.856-.929-39.197-16.236c-6.34-15.307.929-32.857 16.236-39.197s32.857.929 39.197 16.236zm159.669 66.171c15.307-6.34 32.857.929 39.198 16.236 6.34 15.307-.929 32.856-16.236 39.197s-32.857-.929-39.197-16.236c-6.341-15.307.928-32.857 16.235-39.197zm-93.539-.016c15.307 6.34 22.576 23.89 16.236 39.197-6.341 15.307-23.89 22.576-39.197 16.236-15.308-6.341-22.577-23.89-16.236-39.197 6.341-15.308 23.89-22.577 39.197-16.236zm159.693-66.114c6.34-15.307 23.89-22.577 39.197-16.236 15.307 6.34 22.576 23.889 16.236 39.197-6.341 15.307-23.89 22.577-39.197 16.236-15.308-6.341-22.577-23.89-16.236-39.197z\" fill=\"#ddb9a3\" />\r\n            <path d=\"m145.63 151.33c6.341 15.307 23.89 22.576 39.197 16.236 15.307-6.341 22.576-23.89 16.236-39.197s-23.89-22.577-39.198-16.236c-15.306 6.34-22.575 23.89-16.235 39.197z\" fill=\"#000\" />\r\n            <path d=\"m118.674 233.696c6.34-15.307-.929-32.856-16.236-39.197s-32.857.929-39.197 16.236c-6.341 15.307.929 32.856 16.236 39.197 15.307 6.34 32.856-.929 39.197-16.236z\" fill=\"#ffa350\" />\r\n            <path d=\"m118.657 327.234c-6.341-15.307-23.89-22.577-39.197-16.236s-22.577 23.89-16.236 39.197 23.89 22.576 39.197 16.236 22.576-23.889 16.236-39.197z\" fill=\"#f78888\" />\r\n            <path d=\"m184.787 393.389c-15.307-6.341-32.856.929-39.197 16.236s.929 32.857 16.236 39.197 32.856-.929 39.197-16.236c6.341-15.308-.929-32.857-16.236-39.197z\" fill=\"#fff59d\" />\r\n            <path d=\"m278.326 393.405c-15.307 6.34-22.576 23.89-16.236 39.197 6.341 15.307 23.89 22.577 39.197 16.236s22.576-23.89 16.236-39.197-23.89-22.576-39.197-16.236z\" fill=\"#90ccf4\" />\r\n            <path d=\"m344.48 327.275c-6.341 15.307.929 32.856 16.236 39.197s32.857-.929 39.197-16.236-.929-32.856-16.236-39.197-32.857.929-39.197 16.236z\" fill=\"#4caf50\" /></g>\r\n        <g>\r\n            <path d=\"m75.633 301.76c-20.377 8.44-30.088 31.886-21.648 52.263 6.375 15.388 21.303 24.693 37.008 24.693 5.091 0 10.267-.979 15.255-3.045 20.377-8.44 30.088-31.885 21.648-52.262-8.441-20.378-31.884-30.09-52.263-21.649zm22.961 55.433c-10.188 4.219-21.911-.635-26.132-10.824-4.22-10.189.636-21.912 10.824-26.132 2.495-1.033 5.081-1.522 7.627-1.522 7.852 0 15.317 4.653 18.504 12.347 4.221 10.188-.634 21.911-10.823 26.131z\" />\r\n            <path d=\"m54.002 237.522c4.089 9.872 11.777 17.56 21.648 21.648 4.99 2.067 10.163 3.045 15.255 3.045 15.704 0 30.634-9.306 37.007-24.693 8.44-20.377-1.271-43.822-21.647-52.262-9.872-4.089-20.744-4.089-30.615 0s-17.559 11.777-21.647 21.648c-4.09 9.871-4.09 20.743-.001 30.614zm18.478-22.96c2.044-4.936 5.888-8.78 10.824-10.824 2.468-1.022 5.061-1.533 7.653-1.533s5.187.511 7.654 1.533c10.188 4.22 15.044 15.942 10.824 26.131-4.221 10.188-15.944 15.045-26.131 10.824-4.936-2.044-8.78-5.888-10.824-10.824-2.045-4.935-2.045-10.371 0-15.307z\" />\r\n            <path d=\"m158.04 176.805c4.936 2.044 10.121 3.066 15.308 3.066 5.185 0 10.372-1.022 15.307-3.066 9.871-4.089 17.559-11.777 21.648-21.648 4.088-9.871 4.088-20.744 0-30.615s-11.776-17.559-21.647-21.648-20.744-4.089-30.615 0c-9.872 4.088-17.56 11.776-21.648 21.648-4.088 9.871-4.088 20.744 0 30.614 4.087 9.871 11.775 17.56 21.647 21.649zm-3.171-44.61c2.044-4.936 5.888-8.779 10.824-10.824 2.468-1.022 5.06-1.533 7.653-1.533s5.186.511 7.654 1.533c4.936 2.044 8.779 5.888 10.824 10.824 2.044 4.936 2.044 10.372 0 15.307-2.044 4.936-5.888 8.78-10.824 10.824-4.936 2.044-10.372 2.044-15.308 0s-8.779-5.889-10.824-10.825c-2.043-4.934-2.043-10.37.001-15.306z\" />\r\n            <path d=\"m157.999 458.06c4.99 2.067 10.163 3.045 15.255 3.045 15.704 0 30.634-9.306 37.007-24.693 4.089-9.871 4.089-20.744 0-30.615s-11.777-17.56-21.648-21.648c-9.872-4.089-20.744-4.089-30.615 0s-17.559 11.777-21.648 21.648c-8.439 20.378 1.272 43.823 21.649 52.263zm-3.17-44.608c2.044-4.936 5.889-8.78 10.824-10.824 2.468-1.022 5.061-1.533 7.653-1.533s5.186.511 7.654 1.533c4.935 2.044 8.779 5.888 10.823 10.824s2.044 10.372 0 15.308c-4.22 10.188-15.941 15.043-26.131 10.824-10.188-4.222-15.043-15.944-10.823-26.132z\" />\r\n            <path d=\"m274.499 458.077c4.936 2.044 10.121 3.066 15.307 3.066s10.372-1.022 15.307-3.067c9.872-4.088 17.56-11.776 21.648-21.648 4.088-9.871 4.088-20.744 0-30.614-4.088-9.871-11.776-17.56-21.648-21.648-9.871-4.089-20.743-4.089-30.614 0-20.377 8.44-30.088 31.885-21.648 52.263 4.089 9.871 11.777 17.559 21.648 21.648zm7.654-55.433c2.468-1.022 5.061-1.533 7.654-1.533s5.186.511 7.654 1.533c4.936 2.044 8.779 5.888 10.824 10.824 2.044 4.936 2.044 10.372 0 15.307-2.044 4.936-5.888 8.779-10.824 10.824s-10.372 2.044-15.307 0c-4.936-2.044-8.78-5.888-10.824-10.824-4.221-10.189.634-21.911 10.823-26.131z\" />\r\n            <path d=\"m372.144 378.756c15.704 0 30.633-9.305 37.007-24.693 4.089-9.871 4.089-20.744 0-30.615-4.089-9.872-11.777-17.56-21.648-21.648-20.377-8.441-43.821 1.271-52.262 21.647-8.44 20.377 1.271 43.822 21.647 52.262 4.99 2.068 10.164 3.047 15.256 3.047zm-18.426-47.654c4.22-10.188 15.943-15.043 26.131-10.824 10.188 4.22 15.044 15.943 10.824 26.131s-15.94 15.044-26.132 10.824c-10.187-4.22-15.042-15.942-10.823-26.131z\" />\r\n            <path d=\"m503.612 8.418c-11.14-11.14-29.056-11.235-40.788-.218l-153.092 143.787c-2.685-8.018-4.114-16.474-4.171-24.97-.032-4.704 1.005-9.935 2.103-15.473 2.426-12.244 5.176-26.121-3.679-38.173-7.985-10.868-23.594-17.216-49.122-19.979-53.057-5.746-106.697 7.146-151.041 36.294-4.615 3.034-5.897 9.234-2.864 13.849s9.235 5.897 13.849 2.864c40.475-26.605 89.448-38.369 137.903-33.124 23.692 2.565 32.195 7.907 35.156 11.938 3.398 4.625 2.334 11.564.178 22.443-1.243 6.273-2.529 12.76-2.484 19.494.091 13.626 3.004 27.178 8.454 39.597l-62.038 58.267c-45.251 13.055-46.243 39.977-47.04 61.685-.537 14.623-1 27.252-12.254 38.506-2.198 2.199-3.249 5.294-2.843 8.376.406 3.083 2.222 5.801 4.915 7.355 7.952 4.591 18.161 6.829 29.188 6.829 15.456 0 32.515-4.398 47.203-12.878 22.479-12.979 35.411-32.679 36.773-55.795l57.365-61.078c12.421 5.451 25.968 8.364 39.597 8.455 6.758.047 13.221-1.241 19.494-2.483 10.881-2.155 17.82-3.219 22.444.178 4.03 2.961 9.373 11.464 11.938 35.156 6.886 63.618-15.082 126.021-60.27 171.208-81.879 81.879-215.105 81.879-296.984 0-70.092-70.09-81.507-180.985-27.142-263.682 3.034-4.615 1.752-10.815-2.863-13.849-4.615-3.035-10.816-1.753-13.849 2.863-28.631 43.552-41.621 96.267-36.578 148.438 5.112 52.886 28.654 102.738 66.29 140.374 43.441 43.441 101.2 67.365 162.635 67.365s119.193-23.924 162.634-67.365c49.492-49.491 73.552-117.833 66.011-187.503-2.763-25.528-9.112-41.136-19.979-49.121-12.052-8.855-25.93-6.105-38.174-3.679-5.538 1.097-10.771 2.144-15.473 2.102-8.498-.057-16.952-1.486-24.97-4.171l143.786-153.094c11.018-11.731 10.923-29.647-.218-40.788zm-262.467 309.149c-15.374 8.876-32.501 11.493-44.984 9.672 7.8-13.57 8.323-27.813 8.763-39.806.725-19.763 1.231-33.205 29.232-42.183l33.719 33.72c-1.761 21.055-17.265 33.132-26.73 38.597zm248.107-282.054-211.432 225.118-26.42-26.42 225.117-211.432c3.809-3.577 9.499-3.673 12.953-.218 3.455 3.455 3.359 9.144-.218 12.952z\" />\r\n            <path d=\"m74.438 136.473c5.523 0 10-4.477 10-10s-4.477-10-10-10h-.007c-5.523 0-9.996 4.477-9.996 10s4.48 10 10.003 10z\" />\r\n        </g>\r\n    </g>\r\n    </svg>\r\n\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport StarIcon from '../icons/StarIcon'\r\nimport CircleIcon from '../icons/CircleIcon'\r\nimport ColorPalleteIcon from '../icons/ColorPaletteIcon'\r\n\r\nexport default ({ togglePinned, note, user, setNoteColor }) => {\r\n    const [isPalleteOpen, setIsPalleteOpen] = useState(false)\r\n\r\n\r\n    const changeColor = (color) => {\r\n        setNoteColor(color)\r\n        setIsPalleteOpen(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"features-container\">\r\n            <i onClick={() => togglePinned(note)}><StarIcon isPinned={user.pinnedNotes.find(id => id === note._id) ? true : false} /></i>\r\n            <div className=\"color-pallete\">\r\n                {/* <img src={colorPallete} alt=\"Change Color\" className=\"color-pallete-icon\" onClick={() => setIsPalleteOpen(!isPalleteOpen)} /> */}\r\n                <i onClick={() => setIsPalleteOpen(!isPalleteOpen)}><ColorPalleteIcon /></i>\r\n                {isPalleteOpen && <div className=\"colors-container\">\r\n                    <i onClick={() => changeColor('#ffa350')}><CircleIcon fill=\"#ffa350\" /></i>\r\n                    <i onClick={() => changeColor('#f78888')}><CircleIcon fill=\"#f78888\" /></i>\r\n                    <i onClick={() => changeColor('#fff59d')}><CircleIcon fill=\"#fff59d\" /></i>\r\n                    <i onClick={() => changeColor('#90ccf4')}><CircleIcon fill=\"#90ccf4\" /></i>\r\n                    <i onClick={() => changeColor('#4caf50')}><CircleIcon fill=\"#4caf50\" /></i>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <svg className=\"remove-icon\"  viewBox=\"0 0 512 512\"  xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m256 512c-141.160156 0-256-114.839844-256-256s114.839844-256 256-256 256 114.839844 256 256-114.839844 256-256 256zm0-475.429688c-120.992188 0-219.429688 98.4375-219.429688 219.429688s98.4375 219.429688 219.429688 219.429688 219.429688-98.4375 219.429688-219.429688-98.4375-219.429688-219.429688-219.429688zm0 0\" /><path d=\"m347.429688 365.714844c-4.679688 0-9.359376-1.785156-12.929688-5.359375l-182.855469-182.855469c-7.144531-7.144531-7.144531-18.714844 0-25.855469 7.140625-7.140625 18.714844-7.144531 25.855469 0l182.855469 182.855469c7.144531 7.144531 7.144531 18.714844 0 25.855469-3.570313 3.574219-8.246094 5.359375-12.925781 5.359375zm0 0\" /><path d=\"m164.570312 365.714844c-4.679687 0-9.355468-1.785156-12.925781-5.359375-7.144531-7.140625-7.144531-18.714844 0-25.855469l182.855469-182.855469c7.144531-7.144531 18.714844-7.144531 25.855469 0 7.140625 7.140625 7.144531 18.714844 0 25.855469l-182.855469 182.855469c-3.570312 3.574219-8.25 5.359375-12.929688 5.359375zm0 0\" /></svg>)\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"edit-icon\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 477.873 477.873\"  xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M392.533,238.937c-9.426,0-17.067,7.641-17.067,17.067V426.67c0,9.426-7.641,17.067-17.067,17.067H51.2\r\n           c-9.426,0-17.067-7.641-17.067-17.067V85.337c0-9.426,7.641-17.067,17.067-17.067H256c9.426,0,17.067-7.641,17.067-17.067\r\n           S265.426,34.137,256,34.137H51.2C22.923,34.137,0,57.06,0,85.337V426.67c0,28.277,22.923,51.2,51.2,51.2h307.2\r\n           c28.277,0,51.2-22.923,51.2-51.2V256.003C409.6,246.578,401.959,238.937,392.533,238.937z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M458.742,19.142c-12.254-12.256-28.875-19.14-46.206-19.138c-17.341-0.05-33.979,6.846-46.199,19.149L141.534,243.937\r\n           c-1.865,1.879-3.272,4.163-4.113,6.673l-34.133,102.4c-2.979,8.943,1.856,18.607,10.799,21.585\r\n           c1.735,0.578,3.552,0.873,5.38,0.875c1.832-0.003,3.653-0.297,5.393-0.87l102.4-34.133c2.515-0.84,4.8-2.254,6.673-4.13\r\n           l224.802-224.802C484.25,86.023,484.253,44.657,458.742,19.142z M434.603,87.419L212.736,309.286l-66.287,22.135l22.067-66.202\r\n           L390.468,43.353c12.202-12.178,31.967-12.158,44.145,0.044c5.817,5.829,9.095,13.72,9.12,21.955\r\n           C443.754,73.631,440.467,81.575,434.603,87.419z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"save-icon\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m490.647 133.435c-.101-.103-128.128-129.127-128.02-129.019-2.927-2.938-6.813-4.416-10.627-4.416-13.006 0-293.619 0-305 0-16.542 0-30 13.458-30 30v452c0 16.542 13.458 30 30 30h418c16.542 0 30-13.458 30-30v-338c0-3.958-1.564-7.755-4.353-10.565zm-217.647-103.435v66c0 8.284 6.716 15 15 15s15-6.716 15-15v-66h34v115h-162v-115zm192 452h-418v-452h98v130c0 8.284 6.716 15 15 15h192c8.284 0 15-6.716 15-15v-108.587l98 98.766z\" /><path d=\"m96 241c-8.284 0-15 6.716-15 15v176c0 8.284 6.716 15 15 15h320c8.284 0 15-6.716 15-15v-176c0-8.284-6.716-15-15-15zm305 176h-290v-146h290z\" /><path d=\"m160 335h48c8.284 0 15-6.716 15-15s-6.716-15-15-15h-48c-8.284 0-15 6.716-15 15s6.716 15 15 15z\" /></g></svg>\r\n\r\n\r\n}\r\n","import React, { useEffect, useState, createRef } from 'react'\r\nimport Moment from 'react-moment';\r\n\r\n\r\nimport NoteText from './NoteText'\r\nimport NoteImg from './NoteImg'\r\nimport NoteVideo from './NoteVideo'\r\nimport NoteTodo from './NoteTodo'\r\nimport NoteLoc from './NoteLoc'\r\nimport Features from './Features'\r\n\r\nimport RemoveIcon from '../../cmps/icons/RemoveIcon'\r\nimport EditIcon from '../../cmps/icons/EditIcon'\r\nimport SaveIcon from '../../cmps/icons/SaveIcon'\r\n\r\nexport default ({ note, user, removeNote, saveRoomChanges, togglePinned }) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [isNewTodo, setIsNewTodo] = useState(false);\r\n    const [currTodoIdx, setCurrTodoIdx] = useState('');\r\n\r\n    const cmps = {\r\n        NoteText,\r\n        NoteImg,\r\n        NoteVideo,\r\n        NoteTodo,\r\n        NoteLoc\r\n    }\r\n    const NoteType = cmps[note.type];\r\n\r\n    const noteRef = createRef();\r\n\r\n    const setNoteColor = (color) => {\r\n        note.bgColor = color\r\n        saveRoomChanges()\r\n    }\r\n\r\n    const paintNote = () => {\r\n        if (note.bgColor) noteRef.current.style.backgroundColor = note.bgColor\r\n    }\r\n\r\n    const saveTodoEdits = () => {\r\n        saveRoomChanges();\r\n        setCurrTodoIdx('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        paintNote()\r\n        if (note.createdBy._id !== user._id) return\r\n        if (note.createdBy.imgUrl !== user.imgUrl) {\r\n            note.createdBy.imgUrl = user.imgUrl\r\n            saveRoomChanges()\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        paintNote()\r\n    }, [note.bgColor]);\r\n\r\n    return (\r\n        <div className=\"note-preview\" >\r\n            <div className={user._id === note.createdBy._id ? 'user-container' : 'friend-container'}>\r\n                <img src={note.createdBy.imgUrl} alt=\"Note creator avatar\" className=\"avatar avatar-s\" />\r\n                <div className=\"note-container\" ref={noteRef}>\r\n                    <div className=\"note-header\">\r\n                        <div>\r\n                            {/* {((note.type === 'NoteTodo' || note.type === 'NoteText') && !isEdit) && <img src={editIcon} alt=\"Edit note\" className=\"edit-btn\" onClick={() => setIsEdit(true)} />} */}\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && !isEdit) && <i onClick={() => setIsEdit(true)}><EditIcon /></i>}\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && isEdit) && <i onClick={() => { setIsEdit(false); saveTodoEdits() }}><SaveIcon /></i>}\r\n                            {/* {((note.type === 'NoteTodo' || note.type === 'NoteText') && isEdit) && <img src={saveIcon} alt=\"Save changes\" className=\"save-btn\" onClick={() => { setIsEdit(false); saveRoomChanges(); setCurrTodoIdx('') }} />} */}\r\n                            <i onClick={() => removeNote(note._id)}><RemoveIcon /></i>\r\n                        </div>\r\n                        <Moment format=\"MM/DD/YY ,HH:mm\">{note.createdAt}</Moment>\r\n                    </div>\r\n                    <NoteType note={note} user={user} isEdit={isEdit} currTodoIdx={currTodoIdx} setCurrTodoIdx={setCurrTodoIdx} setIsNewTodo={setIsNewTodo} isNewTodo={isNewTodo} />\r\n                    <Features togglePinned={togglePinned} note={note} user={user} setNoteColor={setNoteColor} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import loading from \"../assets/svg/loading.svg\";\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst Loading = () => {\r\n    return <div>\r\n         <img src={loading} alt=\"loading\" className=\"loading\"/>\r\n    </div>;\r\n}\r\n\r\nexport default Loading;","import React, { useEffect, useState } from 'react'\r\nimport NotePreview from './NotePreview'\r\nimport Loading from '../Loading'\r\n\r\nexport default ({ notes, user, removeNote, saveRoomChanges, togglePinned, setNoteType }) => {\r\n\r\n    const [notesForDisplay, setNotesForDisplay] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fixedNotes = []\r\n        notes.map(note => {\r\n            user.pinnedNotes.find(id => id === note._id) ?\r\n                fixedNotes.unshift(note) : fixedNotes.push(note)\r\n        })\r\n        setNotesForDisplay(fixedNotes)\r\n    }, [notes])\r\n\r\n    return (\r\n\r\n        <div className=\"note-list\" onClick={() => setNoteType('')}>\r\n            {notesForDisplay.length ? notesForDisplay.map(note => {\r\n                return (\r\n                    <NotePreview\r\n                     note={note} \r\n                     key={note._id} \r\n                     user={user} \r\n                     removeNote={removeNote} \r\n                     saveRoomChanges={saveRoomChanges} \r\n                     togglePinned={togglePinned} />\r\n                )\r\n            }) : <Loading />}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default ({ setNoteData, setNoteHeader, handleSubmit }) => {\r\n\r\n\r\n    return (\r\n        <form className=\"input-text\" onSubmit={handleSubmit}>\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input className=\"input-data\" placeholder=\"Say Something\" type=\"text\" onChange={e => setNoteData(e.target.value)} />\r\n            <button hidden>Save</button>\r\n        </form>\r\n    )\r\n}\r\n//save button is a temp solution to onSubmit with enter key","import React, { createRef } from 'react';\r\n\r\nimport uploadImg from '../../assets/svg/upload.svg'\r\n\r\nexport default ({ setNoteHeader, onUploadImg }) => {\r\n\r\n    const inputRef = createRef();\r\n\r\n\r\n    const onUploadImgHandler = () => {\r\n        inputRef.current.click()\r\n        // setNoteType('NoteImg');\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-img\">\r\n            <input className=\"input-header\" placeholder=\"Img Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input type=\"file\" onChange={(ev) => { onUploadImg(ev); }} ref={inputRef} hidden />\r\n            <img src={uploadImg} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { onUploadImgHandler() }} />\r\n        </section >\r\n    );\r\n};\r\n\r\n","import axios from 'axios';\r\n//AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM RAN'S KEY\r\n//AIzaSyD09tfK-pjT-G6kEZmXRfeicoKR-neGKNU alt key\r\nconst API_KEY = 'AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM' \r\nconst limit = 15;\r\n\r\n\r\nexport const YoutubeApiService = {\r\n    youtubeQuery\r\n}\r\n\r\n\r\nasync function youtubeQuery(query) {\r\n    try {\r\n        const res = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&videoEmbeddable=true&type=video&key=${API_KEY}&q=${query}&maxResults=${limit}`);\r\n        return res.data.items;\r\n    } catch (err) {\r\n        console.log('Error while fetching videos',err); \r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { YoutubeApiService } from '../../services/YoutubeApiService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\n\r\nexport default ({ addVideo, setNoteHeader }) => {\r\n    const [videos, setVideos] = useState([]);\r\n    const searchYoutubeVideos = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setVideos([])\r\n            return\r\n        }\r\n        const youtubeVideos = await YoutubeApiService.youtubeQuery(queryStr);\r\n        setVideos(youtubeVideos)\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-video\">\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n            className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Video\"\r\n                onChange={e => searchYoutubeVideos(e.target.value)}\r\n            />\r\n            {!!videos.length &&<h1>Add video!</h1>}\r\n            {!!videos.length && videos.map(video => {\r\n                return (\r\n                    <div className=\"video-card\" key={video.id.videoId}>\r\n                        <img src={video.snippet.thumbnails.default.url} alt=\"Video Thumbnail\" />\r\n                        <h6>{video.snippet.title}</h6>\r\n                        <img src={PlusIcon} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { addVideo(video.id.videoId); setVideos([]) }} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </section >\r\n    );\r\n};","import React, { useState } from 'react'\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport saveIcon from '../../assets/svg/save.svg'\r\n\r\n\r\nexport default ({ setNoteHeader, setNoteData, handleSubmit, noteData }) => {\r\n    const [currTodo, setCurrTodo] = useState('');\r\n\r\n    const textInput = React.useRef();\r\n\r\n    const addTodo = () => {\r\n        setNoteData([\r\n            ...noteData, {\r\n                text: currTodo,\r\n                isDone: false\r\n            }])\r\n        setCurrTodo('')\r\n        textInput.current.value = ''\r\n    };\r\n\r\n    const handleRemoveTodo = (todoIdx) => {\r\n        setNoteData(noteData.filter((todo, idx) => todoIdx !== idx))\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-todo\">\r\n            <input type=\"text\" placeholder=\"Header?\" className=\"input-header\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <ul>\r\n                {!noteData.length && <h5>No Todo's Added</h5>}\r\n                {!!noteData.length && noteData.map((todo, idx) => {\r\n                    return (\r\n                        <li className=\"todo\" key={todo.text}>\r\n                            <span>{todo.text}</span>\r\n                            <img src={xMark} onClick={() => handleRemoveTodo(idx)} className=\"x-mark\" alt=\"Remove Todo\" />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <div className=\"add-todo-container\">\r\n                <input type=\"text\" placeholder=\"task?\" className=\"input-task\" ref={textInput} onChange={e => setCurrTodo(e.target.value)} />\r\n                <img src={PlusIcon} className=\"add-button\" onClick={() => addTodo()} alt=\"Add todo\" />\r\n            </div>\r\n            <img src={saveIcon} className=\"add-button\" onClick={handleSubmit} alt=\"Save\" />\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n// const GAPI_KEY = 'AIzaSyDT_ajKa9WIv5XuaigihgiGJKXyRAXIV7o';\r\nconst GAPI_KEY = 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA';\r\n// const GAPI_KEY = 'AIzaSyAfOgP37XV4mv6RcyxIwOk1ajVevIhN2TM'; \r\n\r\nexport const MapService = {\r\n    searchLocs,\r\n    searchAddress, \r\n    getPosition,\r\n    GAPI_KEY\r\n}\r\n\r\n\r\nasync function searchLocs(txt) {\r\n\r\n    const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${txt.split(\" \").join('+')}&key=${GAPI_KEY}&language=en&region=US`)\r\n    try {\r\n        return res.data.results\r\n        // var position=res.data.results[0].geometry.location ;\r\n        // const address_components_Length =res.data.results[0].address_components.length;   \r\n        // var results=res.data.results[0].address_components;\r\n\r\n\r\n        // for (var i=0;i<address_components_Length;i++){\r\n        //     for (var j=0;j<results[i].types.length;j++){\r\n        //         if(results[i].types[j]==='country'){\r\n        //             var country=results[i].long_name;\r\n        //             var short_country =results[i].short_name; //short name country          \r\n        //         }   \r\n        //         if(results[i].types[j]==='locality'){\r\n        //             var city=results[i].long_name;\r\n        //             // var shortCity =results[i].short_name; //short name city   \r\n        //         }   \r\n\r\n        //         if(results[i].types[j]==='administrative_area_level_1')\r\n        //         {\r\n        //             var region=results[i].long_name;                    \r\n        //         }   \r\n\r\n        //     }\r\n        // }        \r\n        // position.country=country;\r\n        // position.short_country=short_country;\r\n        // // position.city=city;\r\n        // position.region=region;\r\n        //  return position    \r\n\r\n    }\r\n    catch (error) {\r\n        console.error('Address not found');\r\n    }\r\n}\r\n\r\nasync function searchAddress(coords) {\r\n\r\n    const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coords.lat},${coords.lng}&key=${GAPI_KEY}&language=en&region=US`)\r\n    try {\r\n        return res.data.results\r\n    }\r\n    catch (error) {\r\n        console.error('Address not found');\r\n    }\r\n}\r\n\r\n\r\n// FOR USER\r\nfunction getPosition() {\r\n    return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject)\r\n    })\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"gps-icon\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n    viewBox=\"0 0 384 384\"  xmlSpace=\"preserve\">\r\n<g>\r\n   <g>\r\n       <path d=\"M192,136c-30.872,0-56,25.12-56,56s25.128,56,56,56s56-25.12,56-56S222.872,136,192,136z M192,216\r\n           c-13.232,0-24-10.768-24-24s10.768-24,24-24s24,10.768,24,24S205.232,216,192,216z\"/>\r\n   </g>\r\n</g>\r\n<g>\r\n   <g>\r\n       <path d=\"M368,176h-32.944C327.648,109.368,274.632,56.352,208,48.944V16c0-8.832-7.168-16-16-16c-8.832,0-16,7.168-16,16v32.944\r\n           C109.368,56.352,56.352,109.368,48.944,176H16c-8.832,0-16,7.168-16,16c0,8.832,7.168,16,16,16h32.944\r\n           C56.352,274.632,109.368,327.648,176,335.056V368c0,8.832,7.168,16,16,16c8.832,0,16-7.168,16-16v-32.944\r\n           c66.632-7.408,119.648-60.424,127.056-127.056H368c8.832,0,16-7.168,16-16C384,183.168,376.832,176,368,176z M192,304\r\n           c-61.76,0-112-50.24-112-112S130.24,80,192,80s112,50.24,112,112S253.76,304,192,304z\"/>\r\n   </g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n\r\n\r\n\r\n}\r\n","import React, { useState, useEffect, createRef } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { MapService } from '../../services/MapService'\r\n\r\nimport PinIcon from '../../assets/svg/pin.svg'\r\nimport SaveIcon from '../icons/SaveIcon'\r\nimport GpsIcon from '../icons/GpsIcon'\r\n\r\nexport default ({ setNoteHeader, setNoteData, noteData, handleSubmit }) => {\r\n\r\n    const [locs, setLocs] = useState([]);\r\n    const [selectedLoc, setSelectedLoc] = useState(null)\r\n    const addressInputRef = createRef();\r\n\r\n    const searchLoc = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setLocs([])\r\n            return\r\n        }\r\n        let locations = await MapService.searchLocs(queryStr)\r\n        setLocs(locations)\r\n    }\r\n\r\n    const renderMarkers = (map, maps) => {\r\n        let marker = new maps.Marker({\r\n        position: { lat: selectedLoc.lat, lng: selectedLoc.lng},\r\n        map,\r\n        icon:PinIcon\r\n        });\r\n        return marker;\r\n       };\r\n\r\n\r\n    const setLocNote = (loc) => {\r\n        let dataObj = { name: loc.formatted_address, coords: loc.geometry.location }\r\n        setSelectedLoc(dataObj.coords)\r\n        setNoteData(dataObj)\r\n    }\r\n\r\n    const fetchUserCoords = async () => {\r\n        let userPos = await MapService.getPosition()\r\n        if (!userPos) return\r\n        let coords = { lat: userPos.coords.latitude, lng: userPos.coords.longitude }\r\n        setSelectedLoc(coords)\r\n        let res = await MapService.searchAddress(coords)\r\n        if (res) {\r\n            let accurateAddressIdx = res[1] ? 1 : 0\r\n            let address = res[accurateAddressIdx].address_components[accurateAddressIdx].short_name\r\n            let dataObj = { coords: res[accurateAddressIdx].geometry.location }\r\n            if (address) dataObj.name = address\r\n            setNoteData(dataObj)\r\n        }\r\n\r\n    }\r\n\r\n    const saveNoteLoc = () => {\r\n        handleSubmit()\r\n        setSelectedLoc(null)\r\n        addressInputRef.current.value = ''\r\n    }\r\n    useEffect(() => {\r\n        fetchUserCoords()\r\n    }, [selectedLoc])\r\n\r\n\r\n    return (\r\n        <div className=\"input-loc\" >\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n                className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Location\"\r\n                ref={addressInputRef}\r\n                onChange={e => searchLoc(e.target.value)}\r\n            />\r\n            <i onClick={() => fetchUserCoords()}><GpsIcon /></i>\r\n            {!!locs.length && locs.map(loc => {\r\n                return (\r\n                    <div className=\"loc-card\" key={loc.place_id}>\r\n                        <h6 onClick={() => { setLocNote(loc) }}>{loc.formatted_address}</h6>\r\n                    </div>\r\n                )\r\n            })}\r\n            {/* {noteData.name && <h6>{noteData.name}</h6>} */}\r\n            {selectedLoc && <div style={{ height: '30vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA' }}\r\n                    center={selectedLoc}\r\n                    distanceToMouse={() => { }}\r\n                    yesIWantToUseGoogleMapApiInternals={true}\r\n                    defaultZoom={18}\r\n                    onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n\r\n                    >\r\n                </GoogleMapReact>\r\n            </div>}\r\n            {noteData && <i onClick={() => saveNoteLoc()}><SaveIcon /></i>}\r\n            <button onClick={() => console.log('noteData:', noteData)}>Test</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { UtilService } from '../services/UtilService'\r\nimport SocketService from '../services/SocketService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\nimport { loadRoomById, saveRoom, resetCurrRoom } from '../actions/RoomActions';\r\nimport { updateUser } from '../actions/UserActions';\r\nimport ButtonMenu from '../cmps/ButtonMenu'\r\nimport NoteList from '../cmps/Note/NoteList'\r\nimport Filter from '../cmps/Filter'\r\nimport Loading from '../cmps/Loading'\r\nimport InputText from '../cmps/Note/InputText'\r\nimport InputImg from '../cmps/Note/InputImg'\r\nimport InputVideo from '../cmps/Note/InputVideo'\r\nimport InputTodo from '../cmps/Note/InputTodo'\r\nimport InputLoc from '../cmps/Note/InputLoc'\r\nimport { UserService } from '../services/UserService';\r\nimport { RoomService } from '../services/RoomService';\r\n\r\n\r\nconst RoomPage = (props) => {\r\n    const [noteType, setNoteType] = useState('');\r\n    const [noteHeader, setNoteHeader] = useState('');\r\n    const [noteData, setNoteData] = useState('');\r\n    const [noteInputType, setNoteInputType] = useState('InputText');\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [filterBy, setFilterBy] = useState('');\r\n    const [isValidUser, setIsValidUser] = useState(null)\r\n\r\n    if (props.room) var { notes } = props.room\r\n    \r\n    const newNote = {\r\n        header: noteHeader,\r\n        data: noteData,\r\n        type: noteType\r\n    }\r\n    const cmps = {\r\n        InputText,\r\n        InputImg,\r\n        InputVideo,\r\n        InputTodo,\r\n        InputLoc\r\n    }\r\n    const InputType = cmps[noteInputType];\r\n\r\n    const loadRoom = async () => {\r\n        const roomId = props.room ? props.room._id : props.match.params.id;\r\n        if (props.room) {\r\n            checkIsValidUser()\r\n            await props.loadRoomById({ term: filterBy.term, roomId })\r\n            return\r\n        }\r\n        await props.loadRoomById({ term: filterBy.term, roomId });\r\n    }\r\n\r\n\r\n    const saveRoomChanges = async () => {\r\n        await props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n    }\r\n    const onUploadImg = async (ev) => {\r\n        if (noteType === 'NoteImg') {\r\n            const imgUrl = await CloudinaryService.uploadImg(ev)\r\n            setNoteData(imgUrl.secure_url)\r\n            setIsUploading(true)\r\n        }\r\n    }\r\n    const onAddVideo = (videoId) => {\r\n        setNoteData(videoId)\r\n        setIsUploading(true)\r\n    }\r\n    // const onAddLoc = (loc) => {\r\n    //     setNoteData(loc)\r\n    //     setIsUploading(true)\r\n    // }\r\n    const onFilterHandler = (filterBy) => {\r\n        setFilterBy(filterBy)\r\n    };\r\n    const onHandleSubmit = async (ev) => {\r\n        const { user } = props\r\n        if (ev) ev.preventDefault()\r\n        newNote._id = UtilService.makeId(24)\r\n        newNote.createdAt = Date.now()    //maybe server side should handle it\r\n        let minimalUser = UserService.getMinimalUser(user._id, user.imgUrl)\r\n        newNote.createdBy = minimalUser\r\n        const friend = user.friends.find(currFriend => currFriend.roomId === !props.room._id ? props.match.params.id : props.room._id)\r\n        props.room.notes.unshift(newNote)\r\n        props.saveRoom(props.room)\r\n        SocketService.emit(\"added note\", ({ room: props.room, user: props.user, friendId: friend._id }));\r\n        props.showNotification('Note added successfully! So Excited', 'success')\r\n        setNoteHeader('')\r\n        setNoteData('')\r\n        setNoteType('')\r\n        setIsUploading(false)\r\n    }\r\n    const togglePinned = (note) => {\r\n        var choosenNoteIdx = props.user.pinnedNotes.findIndex(id => note._id === id)\r\n        choosenNoteIdx === -1 ? props.user.pinnedNotes.push(note._id) : props.user.pinnedNotes.splice(choosenNoteIdx, 1)\r\n        let idx = props.room.notes.findIndex(currNote => note._id === currNote._id)\r\n        props.room.notes.splice(idx, 1, note)\r\n        props.saveRoom(props.room)\r\n        props.updateUser(props.user)\r\n    }\r\n    const removeNote = async (noteId) => {\r\n        let idx = props.room.notes.findIndex(note => note._id === noteId)\r\n        props.room.notes.splice(idx, 1)\r\n        await props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n         props.showNotification('Note Deleted successfully!', 'error')\r\n\r\n    }\r\n    const checkIsValidUser = async () => {\r\n        const { user, room } = props\r\n        let isValid = await RoomService.checkIsValidUser(user._id, room._id)\r\n        isValid ? setIsValidUser(true) : props.history.push('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadRoom()//created\r\n        return () => { props.resetCurrRoom()  }; //onDestroy\r\n    }, []);\r\n\r\n    //watcher\r\n    useEffect(() => {\r\n        if (props.room) checkIsValidUser()\r\n    }, [props.room]);\r\n\r\n    \r\n    useEffect(() => {\r\n        if ((noteData && noteType === 'NoteImg') ||\r\n            noteType === 'NoteVideo') {\r\n            onHandleSubmit()\r\n        }\r\n    }, [isUploading]);\r\n\r\n    useEffect(() => {\r\n        loadRoom()\r\n    }, [filterBy]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"room-page\">\r\n            \r\n            {(isValidUser && notes) ? <div className=\"note-add\">\r\n                <Filter\r\n                    filterBy={filterBy}\r\n                    setFilterBy={setFilterBy}\r\n                    onFilter={onFilterHandler}\r\n                    placeHolder={\"Search for notes\"} />\r\n                {noteType && <InputType\r\n                    isMarkerShown={true}\r\n                    onUploadImg={onUploadImg}\r\n                    addVideo={onAddVideo}\r\n                    handleSubmit={onHandleSubmit}\r\n                    setNoteHeader={setNoteHeader}\r\n                    setNoteData={setNoteData}\r\n                    noteData={noteData}\r\n                />}\r\n                <ButtonMenu setNoteType={setNoteType} setNoteInputType={setNoteInputType} setNoteData={setNoteData} /> \r\n            </div> : <Loading />}\r\n            {(isValidUser && notes) && <div>\r\n                {!!notes.length && <NoteList notes={notes} user={props.user} removeNote={removeNote} saveRoomChanges={saveRoomChanges} togglePinned={togglePinned} setNoteType={setNoteType} />}\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadRoomById,\r\n    saveRoom,\r\n    resetCurrRoom,\r\n    updateUser\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomPage);","import React from 'react';\r\nimport avatarImg from '../../assets/png/user.png'\r\nimport Loading from \"../Loading\";\r\n\r\n\r\nexport const AvatarEdit = (props) => {\r\n\r\n  // var [{imgUrl}] = useState(props)\r\n  const { imgUrl, isLoading } = props\r\n  \r\n  return <div className=\"avatar-edit\">\r\n    <label>\r\n      <input type=\"file\" onChange={(ev) => props.onUploadImg(ev)} hidden />\r\n      {isLoading ? <Loading /> : <img src={imgUrl ? imgUrl : avatarImg} alt=\"\" className=\"avatar avatar-m\"  />}\r\n    </label>\r\n    {/* <h1>above</h1>\r\n    <div className=\"test-img\" style={{ backgroundImage: `url(${imgUrl})` }}></div>\r\n    <h1>under</h1> */}\r\n  </div>;\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUser, updateUser } from '../actions/UserActions';\r\n\r\n\r\nimport ContactPage from '../pages/ContactPage'\r\nimport RoomPage from '../pages/RoomPage'\r\nimport { loadContacts } from '../actions/ContactActions';\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\nimport ContactList from '../cmps/ContactList'\r\nimport Filter from '../cmps/Filter'\r\n\r\nimport SocketService from '../services/SocketService'\r\nimport { UserService } from '../services/UserService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\nconst HomePage = (props) => {\r\n  const [filterBy, setFilterBy] = useState({ term: '' })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isHome, setIsHome] = useState(true)\r\n\r\n\r\n  const { user, contacts,room,getUpdatedUser } = props;\r\n\r\n\r\n  const loadContacts = async () => {\r\n    await props.loadContacts(filterBy);\r\n  };\r\n\r\n  const onUploadImg = async (ev) => {\r\n    setIsLoading(true)\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n    props.updateUser(updatedUser)\r\n    UserService.updateImgAtContacts(user._id, userImgUrl.secure_url)\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const onAddFriend = (friendId) => {\r\n    const { userName, fullName, _id, imgUrl } = user\r\n    let userId = _id\r\n    let notification = {\r\n      userName,\r\n      fullName,\r\n      type: 'NotificationFriend',\r\n      imgUrl\r\n    }\r\n    SocketService.emit('Add Friend', { notification, userId, friendId })\r\n  }\r\n\r\n\r\n\r\n  const onMoveToRoom = (ev, contact) => {\r\n    const roomId = UserService.getRoomIdFromContact(user,contact).roomId\r\n    console.log('roomId', roomId);\r\n\r\n    ev.stopPropagation()\r\n    props.history.push(`/room/${roomId}`);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    props.getUser()\r\n    if (!props.user) props.history.push(\"/signup\")\r\n    loadContacts()\r\n    return () =>{\r\n      setIsHome(false)\r\n    }\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    loadContacts()\r\n  }, [filterBy])\r\n\r\n\r\n  return (\r\n    <div>\r\n        {user &&\r\n          <div className=\"home-page\">\r\n            <div className=\"mobile\">\r\n            {user.userName && <h2>Hi There <span className=\"user-name\">{user.userName}</span></h2>}\r\n            <AvatarEdit imgUrl={user.imgUrl} onUploadImg={onUploadImg} isLoading={isLoading} />\r\n            <h6>Let's add contacts veze</h6>\r\n            <Filter filterBy={filterBy} setFilterBy={setFilterBy} />\r\n            {contacts && <ContactList onMoveToRoom={onMoveToRoom} contacts={contacts} onAddFriend={onAddFriend} loggedinUser={user} isHome={isHome} />}\r\n            </div>\r\n        <div className=\"desktop\">\r\n          <section className=\"contact-page-desktop\">\r\n        <ContactPage/>\r\n          </section>\r\n        {room && <section className=\"room-page-desktop\">\r\n        <RoomPage/>\r\n        </section>}\r\n        </div>\r\n        </div>\r\n      }\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room:state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  updateUser,\r\n  loadContacts,\r\n  \r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n// import React, { Component } from 'react'\r\n// import { connect } from 'react-redux';\r\n// import Avatar from 'react-avatar';\r\n\r\n// import { getUser,updateUser } from '../actions/UserActions';\r\n// import { loadContacts } from '../actions/ContactActions';\r\n\r\n// import { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n// import ContactList from '../cmps/ContactList'\r\n// import Filter from '../cmps/Filter'\r\n\r\n// import SocketService from '../services/SocketService'\r\n// import {UserService} from '../services/UserService'\r\n// import CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\n// class HomePage extends Component {\r\n//   state = {\r\n//     filterBy: { term: '' },\r\n//     isLoading: false\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.props.getUser()\r\n//     if (!this.props.user) this.props.history.push(\"/signup\")\r\n//     this.loadContacts()\r\n//   }\r\n\r\n//   loadContacts = async () => {\r\n//     await this.props.loadContacts(this.state.filterBy);\r\n//   };\r\n\r\n//   onUploadImg = async (ev) => {\r\n//     let user = this.props.user\r\n//     this.setState({ isLoading: true })\r\n//     let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n//     const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n//     this.props.updateUser(updatedUser)\r\n//     UserService.updateImgAtContacts(user._id, userImgUrl.secure_url)\r\n//     this.setState({ isLoading: false })\r\n//   }\r\n\r\n//   onAddFriend = (friendId) => {\r\n//     const { userName, fullName, _id, imgUrl } = this.props.user\r\n//     let userId = _id\r\n//     let notification = {\r\n//       userName,\r\n//       fullName,\r\n//       type: 'NotificationFriend',\r\n//       imgUrl\r\n//     }\r\n//     SocketService.emit('Add Friend', { notification, userId, friendId })\r\n//   }\r\n\r\n//   onFilterHandler = (filterBy) => {\r\n//     this.setState((prevState) => {\r\n//       return {\r\n//         filterBy: {\r\n//           ...prevState.filterBy,\r\n//           ...filterBy,\r\n//         },\r\n//       };\r\n//     }, this.loadContacts);\r\n\r\n//   };\r\n\r\n//   onMoveToRoom = (ev, roomId) => {\r\n//     console.log(ev);\r\n//     ev.stopPropagation()\r\n//     this.props.history.push(`/board/${roomId}`);\r\n//   }\r\n\r\n//   capitalize = (name) => {\r\n//     return name.charAt(0).toUpperCase() + name.slice(1);\r\n//   };\r\n\r\n\r\n\r\n//   render() {\r\n//     const { user, contacts } = this.props;\r\n//     const { isLoading } = this.state\r\n\r\n//     return (\r\n//       <div>\r\n//         {user &&\r\n//           <div className=\"home-page\">\r\n//             {user.userName && <h2>Hi There {this.capitalize(user.userName)}</h2>}\r\n//             <AvatarEdit imgUrl={user.imgUrl} onUploadImg={this.onUploadImg} isLoading={isLoading} />\r\n//             <h6>Let's add contacts veze</h6>\r\n//             <Filter filterBy={this.state.filterBy} onFilter={this.onFilterHandler} />\r\n//             {contacts && <ContactList onMoveToRoom={this.onMoveToRoom} contacts={contacts} onAddFriend={this.onAddFriend} loggedinUser={user} />}\r\n//           </div>\r\n//         }\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     user: state.user.loggedinUser,\r\n//     contacts: state.contact.contacts,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   getUser,\r\n//   updateUser,\r\n//   loadContacts,\r\n\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ notification,onApprove,onDecline }) => {    \r\n    return (\r\n        <div className=\"notification-friend\">\r\n            <p>{notification.fullName} wants to start a board with you</p>\r\n            <button onClick={()=>onApprove(notification)}>Approve</button>\r\n            <button onClick={()=>onDecline(notification)}>Decline</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ notification }) => {\r\n    return (\r\n        <div className=\"notification-response\">\r\n            <p>{notification.fullName} has {notification.isApproved ? 'Approved' : 'Declined'} your request</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default ({ notification, onDeleteNotification }) => {\r\n\r\n    const {userName, roomId} = notification\r\n\r\n    return (\r\n        <Link to={`/room/${roomId}`} >\r\n        <div className=\"notification-note\" onClick={onDeleteNotification}>\r\n            <p>{userName} just Added A note! go check it out</p>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationFriend from './NotificationFriend'\r\nimport NotificationResponse from './NotificationResponse'\r\nimport NotificationNote from './NotificationNote'\r\nimport Moment from 'react-moment';\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\n\r\n\r\n\r\nexport default ({ notification,onApprove, onDecline, onDeleteNotification }) => {\r\n    const cmps = {\r\n        NotificationFriend,\r\n        NotificationResponse,\r\n        NotificationNote\r\n    }\r\n  \r\n\r\n    const NotificationType = cmps[notification.type];\r\n    return (\r\n        <div className=\"notification-preview\">\r\n            <div className=\"notification-header\">\r\n                <img src={notification.imgUrl} className=\"avatar avatar-xs\" alt=\"User Avatar\"/>\r\n                <div>\r\n            <NotificationType notification={notification} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}/>\r\n            <Moment fromNow>{notification.createdAt}</Moment>\r\n                </div>\r\n            <img src={xMark} onClick={()=> onDeleteNotification(notification)} className=\"x-mark\" alt=\"Close\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationPreview from './NotificationPreview'\r\n\r\nexport default ({notifications, onApprove, onDecline,onDeleteNotification}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"notification-list\">\r\n            {notifications.map(notification => {\r\n                return (\r\n                    <NotificationPreview notification={notification} key={notification._id} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}  />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport SocketService from '../services/SocketService'\r\n\r\n\r\nimport NotificationList from '../cmps/Notification/NotificationList';\r\n\r\nconst InboxPage = (props) => {\r\n\r\n  const { user } = props\r\n\r\n  const onApprove = (notification) => {\r\n\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"approve\", { notification, user });\r\n\r\n  }\r\n  const onDecline = (notification) => {\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"decline\", { notification, user });\r\n  }\r\n\r\n  const onDeleteNotification = (notification) => {\r\n    const idx = user.notifications.findIndex(\r\n      currNotification => currNotification._id === notification._id\r\n    );\r\n    user.notifications.splice(idx, 1);\r\n    props.updateUser(user)\r\n  }\r\n\r\n  const handleForbiddenUser = () => {\r\n    if(props.match.params.id !== user._id) props.history.push('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleForbiddenUser()\r\n  }, [])\r\n  \r\n\r\n  return (\r\n    (!user) ? <h1>Inbox is empty</h1> :\r\n      <div>\r\n        {user && <div>\r\n          {!!user.notifications.length && <NotificationList notifications={user.notifications} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification} ></NotificationList>}\r\n        </div>\r\n        }\r\n      </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    room: state.room.currRoom,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxPage);","import React, { useState, useEffect } from \"react\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport Loading from \"../cmps/Loading\";\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\n// import SocketService from '../services/SocketService'\r\n\r\nimport { signUp, login, getUser } from '../actions/UserActions'\r\nimport { connect } from \"react-redux\";\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\n\r\nconst SignupPage = (props) => {\r\n  const [isSignup, setIsSignup] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isDone, setIsDone] = useState(false)\r\n  const [newUser, setNewUser] = useState({\r\n    userName: '',\r\n    fullName: '',\r\n    password: '',\r\n    imgUrl: '',\r\n  })\r\n  let loggedinUser = null\r\n\r\n  const getLoggedinUser = async () => {\r\n    await props.getUser()\r\n    if (props.user) props.history.push('/')\r\n    return props.user\r\n  }\r\n\r\n\r\n\r\n  const resetInput = () => {\r\n    setNewUser({\r\n      userName: '',\r\n      fullName: '',\r\n      password: '',\r\n      imgUrl: '',\r\n    })\r\n  }\r\n\r\n  const onUploadImg = async (ev) => {\r\n    setIsLoading(true)\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    setNewUser({ ...newUser, imgUrl: userImgUrl.secure_url })\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const connectSockets = (id) => {\r\n    props.onConnectSocket(id)\r\n  }\r\n\r\n  const onHandleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    setIsDone(true)\r\n    isSignup ? await props.signUp({ ...newUser }) : await props.login({ ...newUser })\r\n     await getLoggedinUser()\r\n    loggedinUser = {...props.user}\r\n    if (!loggedinUser) {\r\n      Swal.fire({\r\n        title: 'Wrong password or Username.',\r\n        width: 300,\r\n        confirmButtonText: \"Say what?\",\r\n        confirmButtonColor: \"yellow\",\r\n        padding: '1em',\r\n        background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n        backdrop: `\r\n        rgba(0,0,123,0.4)\r\n        url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n        left top\r\n        no-repeat\r\n        `\r\n      })\r\n      props.history.push(\"/signup\")\r\n      resetInput()\r\n      setIsDone(false)\r\n      return\r\n    }\r\n    props.showNotification('Logged in successfully :)', 'success')\r\n    connectSockets(loggedinUser._id)\r\n    console.log(loggedinUser);\r\n    props.history.push(\"/\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    getLoggedinUser()\r\n  }, [])\r\n\r\n  return (\r\n    isDone ? <Loading /> :\r\n      <div className=\"signup-form\">\r\n        <form onSubmit={(e) => onHandleSubmit(e)}>\r\n          {isSignup ? <h1>SignUp</h1> : <h1>Login</h1>}\r\n          {isSignup && <AvatarEdit onUploadImg={onUploadImg} imgUrl={newUser.imgUrl} isLoading={isLoading} />}\r\n          {isSignup && <MDBInput label=\"Full Name\" name=\"fullName\" value={newUser.fullName || ''} onChange={e => setNewUser({ ...newUser, fullName: e.target.value })} />}\r\n          <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={newUser.userName || ''} onChange={e => setNewUser({ ...newUser, userName: e.target.value })} />\r\n          <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={newUser.password || ''} onChange={e => setNewUser({ ...newUser, password: e.target.value })} />\r\n          <button className=\"signup-login-btn\">{isSignup ? 'Sign up' : 'Login'}</button>\r\n          {!isSignup && <h2 >Don't Have an account?<span className=\"toggle-btn\" onClick={() => setIsSignup(!isSignup)}> Sign up!</span></h2>}\r\n          {isSignup && <h2 >Head Back to <span className=\"toggle-btn\" onClick={() => setIsSignup(!isSignup)}>Login</span></h2>}\r\n        </form>\r\n      </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signUp,\r\n  getUser,\r\n  login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import { MDBInput } from \"mdbreact\";\r\n// import Loading from \"../cmps/Loading\";\r\n\r\n// import Swal from 'sweetalert2'\r\n\r\n// // import SocketService from '../services/SocketService'\r\n\r\n// import { signUp, login, getUser } from '../actions/UserActions'\r\n// import { connect } from \"react-redux\";\r\n// import CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n// import { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\n\r\n// class SignupPage extends Component {\r\n\r\n//   state = {\r\n//     newUser: {\r\n//       userName: '',\r\n//       fullName: '',\r\n//       password: '',\r\n//       imgUrl: '',\r\n//     },\r\n//     isSignUp: false,\r\n//     isLoading: false,\r\n//     isDone: false\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     console.log('hi from signUp', this.state.newUser);\r\n\r\n//     this.getLoggedinUser();\r\n//   }\r\n\r\n//   getLoggedinUser = async () => {\r\n//     await this.props.getUser()\r\n//     if (this.props.user) this.props.history.push('/')\r\n//   }\r\n\r\n//   onChangeHandler = (ev) => {\r\n//     const { value, name } = ev.target;\r\n//     this.setState({\r\n//       newUser: {\r\n//         ...this.state.newUser,\r\n//         [name]: value\r\n//       }\r\n//     })\r\n//   };\r\n\r\n//   resetInput = () => {\r\n//     this.setState({\r\n//       newUser: {\r\n//         userName: '',\r\n//         fullName: '',\r\n//         password: '',\r\n//         imgUrl: '',\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   onUploadImg = async (ev) => {\r\n//     this.setState({ isLoading: true })\r\n//     let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n//     this.setState({\r\n//       newUser: {\r\n//         ...this.state.newUser,\r\n//         imgUrl: userImgUrl.secure_url\r\n//       }\r\n//     })\r\n//     this.setState({ isLoading: false })\r\n//   }\r\n\r\n//   connectSockets(id) {\r\n//     this.props.onConnectSocket(id)\r\n//   }\r\n\r\n//   toggleSignUp = () => {\r\n//     this.setState(prevState => ({\r\n//       isSignUp: !prevState.isSignUp\r\n//     }));\r\n//   }\r\n\r\n//   onHandleSubmit = async (ev) => {\r\n//     ev.preventDefault();\r\n//     this.setState({ isDone: true })\r\n//     this.state.isSignUp ?\r\n//       await this.props.signUp({ ...this.state.newUser })\r\n//       : await this.props.login({ ...this.state.newUser })\r\n//     await this.getLoggedinUser();\r\n//     if (!this.props.user) {\r\n//       Swal.fire({\r\n//         title: 'Wrong password or Username.',\r\n//         width: 300,\r\n//         confirmButtonText: \"Say what?\",\r\n//         confirmButtonColor: \"yellow\",\r\n//         padding: '1em',\r\n//         background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n//         backdrop: `\r\n//         rgba(0,0,123,0.4)\r\n//         url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n//         left top\r\n//         no-repeat\r\n//         `\r\n//       })\r\n//       this.props.history.push(\"/signup\")\r\n//       this.resetInput()\r\n//       this.setState({ isDone: false })\r\n//       return\r\n//     }\r\n//     this.connectSockets(this.props.user._id)\r\n//     this.props.history.push(\"/\")\r\n\r\n//   }\r\n\r\n\r\n\r\n//   render() {\r\n//     const { isSignUp, isLoading, isDone } = this.state\r\n//     const { imgUrl } = this.state.newUser\r\n//     return (\r\n//       isDone ? <Loading /> :\r\n//         <div className=\"signup-form\">\r\n//           <form onSubmit={this.onHandleSubmit}>\r\n//             {isSignUp ? <h1>SignUp</h1> : <h1>Login</h1>}\r\n//             {isSignUp && <AvatarEdit onUploadImg={this.onUploadImg} imgUrl={imgUrl} isLoading={isLoading} />}\r\n//             {isSignUp && <MDBInput label=\"Full Name\" name=\"fullName\" value={this.state.newUser.fullName || ''} onChange={this.onChangeHandler} />}\r\n//             <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={this.state.newUser.userName || ''} onChange={this.onChangeHandler} />\r\n//             <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={this.state.newUser.password || ''} onChange={this.onChangeHandler} />\r\n//             <button className=\"signup-login-btn\">{isSignUp ? 'Sign up' : 'Login'}</button>\r\n//             {!isSignUp && <h2 >Don't Have an account?<span className=\"toggle-btn\" onClick={this.toggleSignUp}> Sign up!</span></h2>}\r\n//             {isSignUp && <h2 >Head Back to <span className=\"toggle-btn\" onClick={this.toggleSignUp}>Login</span></h2>}\r\n//           </form>\r\n//         </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     user: state.user.loggedinUser,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   signUp,\r\n//   getUser,\r\n//   login\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\r\n\r\n\r\n\r\n// //functional handle submit:\r\n// const onHandleSubmit = async (ev) => {\r\n//   ev.preventDefault();\r\n//   setIsDone(true)\r\n//   isSignup ? await props.signUp({ ...newUser }) : await props.login({ ...newUser })\r\n//   await getLoggedinUser()\r\n//   if (!props.user) {\r\n//     Swal.fire({\r\n//       title: 'Wrong password or Username.',\r\n//       width: 300,\r\n//       confirmButtonText: \"Say what?\",\r\n//       confirmButtonColor: \"yellow\",\r\n//       padding: '1em',\r\n//       background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n//       backdrop: `\r\n//       rgba(0,0,123,0.4)\r\n//       url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n//       left top\r\n//       no-repeat\r\n//       `\r\n//     })\r\n//     props.history.push(\"/signup\")\r\n//     resetInput()\r\n//     setIsDone(false)\r\n//     return\r\n//   }\r\n//   connectSockets(props.user._id)\r\n//   props.history.push(\"/\")\r\n// }","import React from \"react\";\r\nimport { getUser } from \"./actions/UserActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport InboxPage from './pages/InboxPage'\r\n\r\nimport ContactPage from './pages/ContactPage'\r\nimport RoomPage from './pages/RoomPage'\r\nimport SignupPage from './pages/SignupPage'\r\n\r\nimport Loading from './cmps/Loading'\r\nclass RoutePage extends React.Component {\r\n\r\n  async componentDidMount() {\r\n    await this.props.getUser(); \r\n    if (!this.isInSignupPage && !this.props.user) {\r\n    this.props.history.push('/signup')\r\n    }\r\n  }\r\n\r\n  get isInSignupPage() {\r\n    return this.props.location.pathname === \"/signup\";\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.props.location !== prevProps.location &&\r\n      !this.props.user &&\r\n      !this.isInSignupPage\r\n    ) {\r\n      this.props.history.push(\"/signup\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.isInSignupPage && !this.props.user) return <Loading />\r\n\r\n    return (\r\n      <div className=\"router-page\">\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/signup\" exact render={(routerProps) => <SignupPage {...routerProps} onConnectSocket={this.props.onConnectSocket} showNotification={this.props.showNotification} />} />\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/contact\" component={ContactPage} />\r\n            <Route path=\"/room/:id\" exact render={(routerProps) => <RoomPage {...routerProps} showNotification={this.props.showNotification} />} />\r\n            {/* <Route path=\"/room/:id\" component={RoomPage} showNotification={this.props.showNotification} /> */}\r\n            <Route path=\"/inbox/:id\" exact component={InboxPage} />\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(RoutePage));\r\n","import React from \"react\";\r\nimport { stack as Menu } from \"react-burger-menu\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport { UtilService } from '../services/UtilService'\r\nimport { getUser } from '../actions/UserActions'\r\nimport { logout } from '../actions/UserActions'\r\n\r\n\r\n\r\nclass BurgerMenu extends React.Component {\r\n  state = {\r\n    menuOpen: false,\r\n    chuckJoke: ''\r\n  };\r\n\r\n  async componentDidMount () {    \r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke });     \r\n   \r\n  }\r\n\r\n async  componentWillUpdate () {\r\n    if(this.props.isClicked && !this.state.menuOpen ) {\r\n      this.setState({ menuOpen: true });\r\n    }\r\n\r\n    \r\n  }\r\n   \r\n\r\n \r\n  \r\n  closeMenu = async (ev) => {\r\n    if (ev) {\r\n      this.handleLogout()\r\n    }\r\n    \r\n    this.setState({ menuOpen: false });\r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke }); \r\n    };\r\n  \r\n  \r\n  handleLogout =  () => {\r\n     this.props.logout()\r\n     this.props.showNotification('Logged out successfully :)', 'success')\r\n\r\n\r\n    // this.props.history.push('/signup')\r\n  }\r\n\r\n\r\n  async handleStateChange(state) {\r\n\r\n    this.setState({ menuOpen: state.isOpen });\r\n    // this.props.onOpenMenu(state.isOpen)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { menuOpen, chuckJoke } = this.state\r\n    const { user } = this.props\r\n    if (!user) return ''\r\n\r\n    return (\r\n      <Menu right isOpen={menuOpen} onStateChange={(state) => this.handleStateChange(state)}>\r\n        <NavLink activeClassName=\"active\" exact to=\"/\" onClick={() => this.closeMenu()}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/contact\" exact onClick={() => this.closeMenu()}>\r\n          Contacts\r\n        </NavLink>\r\n        {user.notifications.length && <span className=\"notification-count\">{user.notifications.length}</span>}\r\n        <NavLink activeClassName=\"active\" to={`/inbox/${user._id}`} exact onClick={() => this.closeMenu()}>\r\n          Inbox\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/signup\" exact onClick={() => this.closeMenu(logout)}  >\r\n          Logout\r\n        </NavLink>\r\n        <div className=\"menu-footer\">\r\n         <h5>{chuckJoke}</h5>\r\n        {/* <img src={imgObj.imgUrl} alt=\"\"/> */}\r\n        </div>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(BurgerMenu));\r\n\r\n","import React ,{useState ,useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport logo from '../../src/assets/png/petek-logo.png'\r\nimport BurgerMenu from './BurgerMenu';\r\n\r\n\r\n\r\nexport default (props) => {\r\n\r\n  const { user,showNotification } = props\r\n  const [isClicked, toggleClick] = useState(false)\r\n   \r\n  useEffect(() => {\r\n    return () => {\r\n      toggleClick(false)\r\n    };\r\n  }, [isClicked])\r\n  \r\n\r\n  return (\r\n     <nav className=\"main-navbar\">\r\n        <Link to={`/`} className=\"home-link\" >\r\n        <img src={logo} alt=\"logo\" className=\"logo\"/>\r\n        </Link>\r\n       {user && !!user.notifications.length && <span className=\"notification-count nav-count\" onClick={() => {toggleClick(true)}} >{user.notifications.length}</span>}\r\n       <BurgerMenu isClicked={isClicked} showNotification={showNotification} />\r\n    </nav>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport './App.scss';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Noty from 'noty';\r\n \r\n\r\n \r\n\r\nimport audioNotification from '../src/assets/sound/sp-tune.mp3'\r\n\r\nimport SocketService from './services/SocketService'\r\nimport { StorageService } from './services/StorageService'\r\nimport { updateUser, getUser } from '../src/actions/UserActions';\r\nimport { saveRoom, loadRoomById } from '../src/actions/RoomActions';\r\n\r\nimport RoutePage from './RoutePage'\r\nimport NavBar from './cmps/NavBar';\r\n\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = (props) => {\r\n  const loggedinUser = props.user;\r\n  const room = props.room\r\n\r\n  const connectSockets = (id) => {   \r\n\r\n    if (room && loggedinUser) {\r\n      SocketService.on(`updateRoom ${room._id}`, async ({ updatedRoom, userId }) => {\r\n        console.log('&&&&&UPDATE ROOM INVOKED');\r\n        if (userId !== loggedinUser._id) {\r\n          console.log('&&&&&after condition updatedRoom._id');\r\n          props.loadRoomById({ roomId: updatedRoom._id })\r\n        }\r\n      });\r\n    }\r\n    if (loggedinUser) {\r\n      SocketService.on(`updateUser ${loggedinUser._id}`, (updatedUser) => {\r\n        console.log('TEST',updatedUser);\r\n        // console.log('$$UPDATED USER FROM SOCKET$$', updatedUser);\r\n        // console.log('$$USER$$:', loggedinUser.userName)\r\n        let user = StorageService.load('user')\r\n        console.log('Storage:', user.userName)\r\n        if (loggedinUser._id === user._id) updateUser(updatedUser)\r\n      });\r\n      SocketService.on(`updateUserWithoutAudio ${loggedinUser._id}`, ( updatedUser ) => { props.updateUser(updatedUser) })\r\n    }\r\n  }\r\n\r\n  const disconnectSockets = () => {\r\n    console.log('disconnect sockets');\r\n    if (room) SocketService.off(`updateRoom ${room._id}`)\r\n    if(loggedinUser){\r\n      SocketService.off(`updateUser ${loggedinUser._id}`)\r\n      SocketService.off(`updateUserWithoutAudio ${loggedinUser._id}`)\r\n    }\r\n  }\r\n\r\n  const updateUser = (updatedUser) => {\r\n    console.log('update that user!');\r\n    let audio = new Audio(audioNotification);\r\n    if (updatedUser) {\r\n      props.updateUser(updatedUser)\r\n      audio.play()\r\n    } else {\r\n      console.log(\"ERROR IN UPDATE USER\");\r\n    }\r\n  }\r\n\r\n  const showNotification = (text, type) =>{\r\n    console.log('clciked');\r\n    new Noty({\r\n    text,\r\n    type,\r\n     theme: 'bootstrap-v4',\r\n      layout: 'topRight',\r\n    animation: {\r\n        open: 'animated bounceInRight', // Animate.css class names\r\n        close: 'animated bounceOutRight' // Animate.css class names\r\n    },\r\n    timeout:1500\r\n  }).show();\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    connectSockets()\r\n    if (loggedinUser) console.log('connect user sockets', loggedinUser._id);\r\n    if (room) console.log('connect room sockets', room._id);\r\n    return () =>{\r\n      disconnectSockets()\r\n          if (room) SocketService.off(`updateRoom ${room._id}`)\r\n\r\n    }\r\n \r\n  }, [loggedinUser, room]);\r\n\r\nuseEffect(() => {\r\n     SocketService.setup()\r\n    \r\n\r\n    return () => {\r\n        console.log('disconnecet user sockets', loggedinUser._id);\r\n        if (room) console.log('disconnecet room sockets', room._id);\r\n        disconnectSockets()\r\n        SocketService.terminate()\r\n      \r\n    };\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <NavBar user={loggedinUser} showNotification={showNotification} />\r\n        <RoutePage onConnectSocket={connectSockets} showNotification={showNotification} />\r\n      </Router>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room: state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n  saveRoom,\r\n  loadRoomById,\r\n  getUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  \r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    loggedinUser: null\r\n}\r\n\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            console.log(action.user);\r\n            if (!action.user) return {...state, loggedinUser: action.user }\r\n            else return {...state, loggedinUser: {...action.user } }\r\n        case 'GET_USER':\r\n            console.log('in reducer bitchhh', action.user);\r\n            return {...state, loggedinUser: action.user }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\n\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':            \r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CURR_CONTACT':\r\n            return { ...state, currContact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    if (contact._id === action.contact._id) return action.contact;\r\n                    return contact;\r\n                })\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => {\r\n                    return contact._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    rooms: [],\r\n    currRoom: null\r\n}\r\n\r\n\r\nexport default function RoomReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_ROOMS':\r\n            return { ...state, rooms: action.rooms }\r\n        case 'SET_CURR_ROOM':\r\n            return { ...state, currRoom: action.room }\r\n        case 'UPDATE_ROOM':\r\n            console.log('UPDATE_ROOM invoked rooms:', state.rooms)\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.map(room => {\r\n                    if (room._id === action.room._id) {\r\n                        //after problems fixed return it to one line term\r\n                        console.log('id match!');\r\n                        \r\n                        return action.room;\r\n                    }\r\n                    return room;\r\n                })\r\n            }\r\n        case 'DELETE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.filter(room => {\r\n                    return room._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_ROOM':\r\n            console.log('UPDATE_ROOM ', action.room);\r\n            return {\r\n                ...state,\r\n                rooms: [...state.rooms, action.room]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport UserReducer from './reducers/UserReducer';\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport RoomReducer from './reducers/RoomReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer,\r\n    room: RoomReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\n\r\nexport default store\r\n\r\n\r\n//*********STOREEEEE****************\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App.jsx'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/plus.867418af.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c79dce59.png\";","module.exports = __webpack_public_path__ + \"static/media/pin.5f588246.svg\";","module.exports = __webpack_public_path__ + \"static/media/x-mark.002e9675.svg\";"],"sourceRoot":""}