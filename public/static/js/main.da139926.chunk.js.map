{"version":3,"sources":["assets/sound/notification.mp3","assets/svg/loading.svg","assets/svg/friends.svg","assets/svg/ok.svg","assets/svg/edit.svg","assets/svg/cross.svg","assets/svg/arrow.svg","assets/svg/empty-star.svg","assets/svg/star.svg","assets/svg/paint.svg","assets/svg/splash-orange.svg","assets/svg/splash-pink.svg","assets/svg/splash-yellow.svg","assets/svg/splash-blue.svg","assets/svg/splash-green.svg","assets/svg/upload.svg","assets/png/petek-logo.png","services/SocketService.js","services/StorageService.js","services/HttpService.js","services/UserService.js","actions/UserActions.js","services/RoomService.js","actions/RoomActions.js","services/UtilService.js","services/ContactService.js","actions/ContactActions.js","cmps/Loading.jsx","cmps/User/AvatarEdit.jsx","cmps/ContactPreview.jsx","cmps/ContactList.jsx","cmps/Filter.jsx","services/CloudinaryService.js","pages/HomePage.jsx","cmps/Notification/NotificationFriend.jsx","cmps/Notification/NotificationResponse.jsx","cmps/Notification/NotificationNote.jsx","cmps/Notification/NotificationPreview.jsx","cmps/Notification/NotificationList.jsx","pages/InboxPage.jsx","pages/ContactPage.jsx","cmps/ButtonMenu.jsx","cmps/Note/NoteText.jsx","cmps/Note/NoteImg.jsx","cmps/Note/NoteVideo.jsx","cmps/Note/NoteTodo.jsx","cmps/Features.jsx","cmps/NotePreview.jsx","cmps/NoteList.jsx","cmps/InputText.jsx","cmps/InputImg.jsx","services/YoutubeApiService.js","cmps/InputVideo.jsx","cmps/InputTodo.jsx","pages/BoardPage.jsx","pages/SignUp.jsx","RoutePage.jsx","cmps/BurgerMenu.jsx","cmps/NavBar.jsx","App.jsx","serviceWorker.js","store/reducers/UserReducer.js","store/reducers/ContactReducer.js","store/reducers/RoomReducer.js","store/index.js","index.js","assets/svg/x-mark.svg","assets/svg/plus.svg","assets/png/user.png","assets/svg/save.svg"],"names":["module","exports","socket","setup","io","terminate","on","eventName","cb","off","emit","data","StorageService","save","key","value","item","JSON","stringify","localStorage","setItem","load","getItem","parse","axios","Axios","create","withCredentials","HttpService","endpoint","ajax","a","method","url","res","response","status","KEY","credentials","userName","fullName","password","pinnedNotes","notifications","imgUrl","avatarImg","Date","now","USER","console","log","msg","removeItem","user","_id","updatedUser","UserService","getUser","signUp","update","login","logout","getMinimalUser","dispatch","type","updateUser","room","prm","RoomService","query","critirea","params","URLSearchParams","getById","filterBy","queryParams","property","set","remove","id","loadRoomById","saveRoom","notes","isEdit","UtilService","makeId","length","txt","possible","i","charAt","Math","floor","random","getRandomMeme","get","imgObj","memes","imgHeader","title","contacts","ContactService","getContactById","Promise","resolve","reject","contact","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","push","_addContact","getEmptyContact","loadContacts","Loading","src","loading","alt","className","AvatarEdit","props","isLoading","onChange","ev","onUploadImg","hidden","onAddFriend","loggedinUser","moveToRoom","useState","isFriendSent","setIsFriendSent","isFriend","setIsFriend","roomId","setRoomId","useEffect","friend","friends","toggleIsFriend","preventDefault","onClick","friendReqSent","addFriendImg","handelClick","onMoveToRoom","map","ContactPreview","Filter","state","term","onChangeHandler","target","name","setState","onFilter","onKeyHandler","keyCode","moveToContact","placeHolder","this","minLength","debounceTimeout","placeholder","onKeyDown","Component","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","secure","then","json","catch","err","error","HomePage","CloudinaryService","userImgUrl","Object","assign","secure_url","friendId","SocketService","onFilterHandler","prevState","stopPropagation","history","capitalize","toUpperCase","slice","ContactList","mapDispatchToProps","connect","notification","onApprove","onDecline","isApproved","onDeleteNotification","to","NotificationType","NotificationFriend","NotificationResponse","NotificationNote","fromNow","createdAt","xMark","NotificationPreview","currRoom","NotificationList","idx","currNotification","ContactPage","handleKeyPress","setNoteType","setNoteInputType","setNoteData","isOpen","setIsOpen","slideSpeed","direction","spacing","iconResting","style","fontSize","nativecolor","iconActive","backgroundColor","size","icon","fill","note","header","width","allow","userId","currTodoIdx","setCurrTodoIdx","setIsNewTodo","isNewTodo","editedTodo","setEditedTodo","newTodo","setNewTodo","editInputRef","createRef","newTodoInputRef","toggleIsDone","isDone","current","focus","text","PlusIcon","todo","xmark","removeTodo","ref","e","ArrowIcon","todoToAdd","addTodo","togglePinned","setNoteColor","isPalleteOpen","setIsPalleteOpen","star","emptyStar","colorPallete","splashOrange","splashPink","splashYellow","splashBlue","splashGreen","removeNote","saveRoomChanges","isPinned","setIsEdit","NoteType","NoteText","NoteImg","NoteVideo","NoteTodo","noteRef","paintNote","bgColor","createdBy","editIcon","saveIcon","format","Features","color","notesForDisplay","setNotesForDisplay","fixedNotes","unshift","NotePreview","setNoteHeader","handleSubmit","onSubmit","inputRef","click","API_KEY","YoutubeApiService","youtubeQuery","items","addVideo","videos","setVideos","searchYoutubeVideos","queryStr","youtubeVideos","video","videoId","snippet","thumbnails","default","noteData","currTodo","setCurrTodo","textInput","React","useRef","todoIdx","filter","resetCurrRoom","noteType","noteHeader","noteInputType","isUploading","setIsUploading","setfilterBy","newNote","InputType","InputText","InputImg","InputVideo","InputTodo","loadRoom","match","onHandleSubmit","minimalUser","noteId","ButtonMenu","NoteList","currNote","SignUp","newUser","isSignUp","getLoggedinUser","resetInput","toggleSignUp","Swal","fire","confirmButtonText","confirmButtonColor","padding","background","backdrop","connectSockets","onConnectSocket","label","RoutePage","isInSignupPage","prevProps","location","path","exact","render","routerProps","component","BoardPage","InboxPage","pathname","withRouter","BurgerMenu","menuOpen","closeMenu","handleLogout","onOpenMenu","right","onStateChange","handleStateChange","activeClassName","toggleClick","logo","setTimeout","createBrowserHistory","updatedRoom","audio","Audio","audioNotification","play","NavBar","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","currContact","rooms","composeEnhancers","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.da139926.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notification.4571a73b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/loading.ecf90307.svg\";","module.exports = __webpack_public_path__ + \"static/media/friends.e8f88cde.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.251fc800.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.70454fa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.21df9a01.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.15b12873.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-star.d1d08460.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.7dc6e5d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/paint.7eefbfe1.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-orange.9f89683d.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-pink.5dca2b20.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-yellow.5bd94ad1.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-blue.edf66db8.svg\";","module.exports = __webpack_public_path__ + \"static/media/splash-green.d3c3573a.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.926d5c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/petek-logo.e7a6391d.png\";","import io from 'socket.io-client';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/' :\r\n    '//localhost:3030'\r\nvar socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit,\r\n}\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb)\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb)\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    \r\n    socket.emit(eventName, data)\r\n}\r\n\r\n","function save(key, value) {\r\n    let item = JSON.stringify(value);\r\n    localStorage.setItem(key, item);\r\n}\r\nfunction load(key) {\r\n    let item = localStorage.getItem(key)\r\n    let value = JSON.parse(item);\r\n    return value;\r\n}\r\n\r\n\r\nexport const StorageService = {\r\n    save,\r\n    load\r\n}","// import router from '@/router'\r\n// import store from '@/store'\r\n\r\nimport Axios from 'axios';\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nconst BASE_URL = process.env.NODE_ENV !== 'development'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nexport const HttpService =  {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        const res = await axios({\r\n            method,\r\n            url: `${BASE_URL}${endpoint}`,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            return false\r\n            // throw new Error('error:  http.service page')\r\n            // router.push('/');\r\n        }\r\n    }\r\n}\r\n\r\n","// import { UtilService } from './UtilService'\r\nimport { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\nimport avatarImg from '../assets/png/user.png'\r\n\r\n\r\n// var USER = { userName: 'Ramus', fullName: 'Rami Davidov', password: '123456', friends: [] };\r\nconst KEY = 'user';\r\n\r\nfunction getUser() {\r\n    const USER = StorageService.load(KEY);\r\n    return USER ? USER : null;\r\n}\r\nasync function signUp(credentials) {\r\n    let USER = {\r\n        userName: credentials.userName,\r\n        fullName: credentials.fullName,\r\n        password: credentials.password,\r\n        pinnedNotes: [],\r\n        notifications: [],\r\n        pinnedNotes : [],\r\n        imgUrl: credentials.imgUrl ? credentials.imgUrl : avatarImg,\r\n        joinedAt: Date.now(),\r\n        friends:[]\r\n    };\r\n    console.log('USER', USER);\r\n    \r\n    USER = await HttpService.post('auth/signup', USER)\r\n    StorageService.save(KEY, USER);\r\n    // getUser()\r\n    return USER;\r\n}\r\n\r\nasync function login(credentials) {\r\n    const USER = await HttpService.post('auth/login', credentials)\r\n    if (!USER) return\r\n    StorageService.save(KEY, USER);\r\n    return USER;\r\n}\r\n\r\n\r\nasync function logout() {\r\n    const msg = await HttpService.post('auth/logout');\r\n    localStorage.removeItem(KEY)\r\n    return (msg)\r\n}\r\n\r\nasync function update(user) {\r\n    const updatedUser = await HttpService.put(`user/${user._id}`, user)\r\n    StorageService.save(KEY, updatedUser);\r\n    return updatedUser\r\n}\r\n\r\nasync function getMinimalUser(_id, imgUrl){\r\n    return{\r\n        _id,\r\n        imgUrl\r\n    }\r\n}\r\n\r\nexport const UserService = {\r\n    getUser,\r\n    signUp,\r\n    update,\r\n    login,\r\n    logout,\r\n    getMinimalUser\r\n}","import { UserService } from '../services/UserService'\r\n\r\nexport function signUp(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.signUp(user);\r\n        dispatch({ type: 'SET_USER', newUser })\r\n    }\r\n}\r\nexport function login(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.login(user);\r\n        dispatch({ type: 'SET_USER', newUser })\r\n    }\r\n}\r\nexport function logout() {\r\n    const user = null\r\n    return async dispatch => {\r\n        await UserService.logout();\r\n        dispatch({ type: 'SET_USER', user })\r\n    }\r\n}\r\n\r\nexport function getUser() {\r\n    return async dispatch => {\r\n        const user = await UserService.getUser();\r\n        dispatch({ type: 'GET_USER', user })\r\n    }\r\n}\r\nexport function updateUser(user) {\r\n    console.log('user in actions', user);\r\n\r\n    return async dispatch => {\r\n        const updatedUser = await UserService.update(user);\r\n        dispatch({ type: 'SET_USER', user: updatedUser })\r\n    }\r\n}\r\n\r\n\r\n//ADD Move\r\n// export function addMove(contact, amount){\r\n//     return async dispatch => {\r\n//       const user = await UserService.addMove(contact,amount);\r\n//       dispatch({ type: 'SET_USER', user })\r\n//     }\r\n// }","\r\nimport { HttpService } from './HttpService';\r\n// import { StorageService } from './StorageService';\r\n\r\n\r\n// const ROOM_KEY = 'notes';\r\n\r\n\r\n\r\nfunction query(critirea) {\r\n    const params = new URLSearchParams(critirea);\r\n    return HttpService.get(`room?${params}`);\r\n}\r\n\r\n\r\nfunction getById(filterBy) {\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]){\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        } \r\n        return HttpService.get(`room?${queryParams}`);\r\n    }\r\n}\r\n\r\n\r\n\r\n// function getById(filterBy) {\r\n//     console.log(id);\r\n//     return HttpService.get(`room/${id}`);\r\n// }\r\n\r\n\r\n\r\n\r\nfunction remove(id) {\r\n    return HttpService.delete(`room/${id}`);\r\n}\r\n\r\nasync function save(room) {\r\n    let prm;\r\n\r\n    if (room._id) prm = HttpService.put(`room/${room._id}`, room);\r\n    else {\r\n        prm = HttpService.post('room', room);\r\n    }\r\n    const res = await prm;\r\n    return res;\r\n}\r\n\r\n// function getEmptyRoom() {\r\n//     return {\r\n//         roomId: '',\r\n//         notes: [],\r\n//         createdAt: ''\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport const RoomService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n}\r\n\r\n\r\n// function getEmptyCritirea() {\r\n//     return {\r\n//         txt: '',\r\n//         searchIn: '',\r\n//         page: '',\r\n//         sortBy: ''\r\n//     }\r\n// }\r\n\r\n\r\n","import { RoomService } from '../services/RoomService'\r\n\r\n// LIST\r\nexport function loadRooms(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            const rooms = await RoomService.query(filterBy);\r\n            dispatch({ type: 'SET_ROOMS', rooms })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadRoomById(filterBy) {\r\n    console.log('filterBy in actions',filterBy);\r\n    \r\n    return async dispatch => {\r\n        try {\r\n            const room = await RoomService.getById(filterBy);\r\n            dispatch({ type: 'SET_CURR_ROOM', room })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrRoom() {\r\n    console.log('made it');\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const room = null\r\n            dispatch({ type: 'SET_CURR_ROOM', room })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveRoom(room) {\r\nconsole.log(room.notes);\r\n\r\n    return async dispatch => {\r\n        const isEdit = !!room._id;\r\n        room = await RoomService.save(room);\r\n        if (isEdit) dispatch({ type: 'SET_CURR_ROOM', room })\r\n        // dispatch({ type: 'UPDATE_ROOM', room }) \r\n        else dispatch({ type: 'ADD_ROOM', room })\r\n        return room;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteRoom(id) {\r\n    return async dispatch => {\r\n        await RoomService.remove(id);\r\n        dispatch({ type: 'DELETE_ROOM', id })\r\n    }\r\n}","import axios from 'axios';\r\n\r\n\r\n\r\nexport const UtilService = {\r\n    makeId,\r\n    getRandomMeme\r\n}\r\n\r\nfunction makeId(length = 12) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nasync function getRandomMeme(){\r\n    const res = await axios.get(`https://meme-api.herokuapp.com/gimme/dankmemes/1`);\r\n     let imgObj = {imgUrl:res.data.memes[0].url, imgHeader:res.data.memes[0].title }\r\n     return imgObj\r\n}","import { UtilService } from './UtilService'\r\nimport { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\n\r\n\r\nconst CONTACT_KEY = 'contacts';\r\n\r\nvar contacts = [\r\n    {\r\n        \"_id\": \"aa56640269f443a5d64b32ca\",\r\n        \"fullName\": \"Eyal Golan\",\r\n        \"userName\": \"Eyalush\",\r\n        \"friends\": []\r\n    },\r\n    {\r\n        \"_id\": \"ba56640269f443a5d64b32cb\",\r\n        \"fullName\": \"Omer Adam\",\r\n        \"userName\": \"Omerush\",\r\n        \"friends\": []\r\n    },\r\n    {\r\n        \"_id\": \"ca56640269f443a5d64b32cc\",\r\n        \"fullName\": \"Zohar Argov\",\r\n        \"userName\": \"Ha Melech\",\r\n        \"friends\": []\r\n    }\r\n];\r\n\r\n// function sort(arr) {\r\n//     return arr.sort((a, b) => {\r\n//         if (a.userName.toLocaleLowerCase() < b.userName.toLocaleLowerCase()) {\r\n//             return -1;\r\n//         }\r\n//         if (a.userName.toLocaleLowerCase() > b.userName.toLocaleLowerCase()) {\r\n//             return 1;\r\n//         }\r\n\r\n//         return 0;\r\n//     })\r\n// }\r\n\r\n// function query(filterBy = null) {\r\n//     return new Promise((resolve, reject) => {\r\n//         var contactsToReturn = StorageService.load(CONTACT_KEY);\r\n//         if (!contactsToReturn || !contactsToReturn.length) {\r\n//             contactsToReturn = [...contacts]\r\n//             StorageService.save(CONTACT_KEY, contactsToReturn)\r\n//         }\r\n//         contacts = [...contactsToReturn]\r\n//         if (filterBy && filterBy.term) {\r\n//             contactsToReturn = filter(filterBy.term)\r\n//         }\r\n//         contactsToReturn ? resolve(sort(contactsToReturn)) : reject(`Contacts not found!`)\r\n//     })\r\n// }\r\nfunction query(filterBy) {\r\n    // if (!filterBy.term) return []\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]) {\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        }\r\n        return HttpService.get(`user?${queryParams}`);\r\n    }\r\n    // return HttpService.get('user');\r\n}\r\n\r\n\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        // console.log('(edit)Contacts after replace ', contacts)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    // console.log('add contact')\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = UtilService.makeId()\r\n        contacts.push(contact)\r\n        // console.log('(ADD)Contacts after push ', contacts)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    // console.log('save contact', contact)\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        fullName: '',\r\n        userName: '',\r\n    }\r\n}\r\n\r\n// function filter(term) {\r\n//     term = term.toLocaleLowerCase()\r\n//     return contacts.filter(contact => {\r\n//         return contact.userName.toLocaleLowerCase().includes(term) ||\r\n//             contact.fullName.toLocaleLowerCase().includes(term)\r\n//     })\r\n// }\r\n\r\nexport const ContactService = {\r\n    query,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}\r\n","import { ContactService } from '../services/ContactService'\r\n\r\n// LIST\r\nexport function loadContacts(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            const contacts = await ContactService.query(filterBy);\r\n            dispatch({ type: 'SET_CONTACTS', contacts })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadContactById(id) {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = await ContactService.getContactById(id);\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrContact() {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = null\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveContact(contact) {\r\n    return async dispatch => {\r\n        const isEdit = !!contact._id\r\n        contact = await ContactService.saveContact(contact);\r\n        if (isEdit) dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        else dispatch({ type: 'ADD_CONTACT', contact })\r\n        return contact;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', id })\r\n    }\r\n}\r\n","import loading from \"../assets/svg/loading.svg\";\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst Loading = () => {\r\n    return <div>\r\n         <img src={loading} alt=\"loading\" className=\"loading\"/>\r\n    </div>;\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport avatarImg from '../../assets/png/user.png'\r\nimport Loading from \"../Loading\";\r\n\r\n\r\nexport const AvatarEdit = (props) => {\r\n\r\n  // var [{imgUrl}] = useState(props)\r\n  const {imgUrl, isLoading} = props  \r\nreturn <div className=\"avatar-edit\">\r\n          <label>\r\n            <input type=\"file\" onChange={(ev) => props.onUploadImg(ev)} hidden />\r\n            {isLoading ? <Loading/> : <img src={imgUrl? imgUrl : avatarImg} alt=\"\" className=\"avatar avatar-m\"/>}\r\n          </label>\r\n    </div>;\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport addFriendImg from '../assets/svg/friends.svg'\r\nimport friendReqSent from '../assets/svg/ok.svg'\r\n\r\n\r\nexport default ({ contact, onAddFriend, loggedinUser, moveToRoom }) => {\r\n\r\n\r\n    const [isFriendSent, setIsFriendSent] = useState(false)\r\n    const [isFriend, setIsFriend] = useState(false)\r\n    const [roomId, setRoomId] = useState('')\r\n\r\n    useEffect(() => {\r\n        // console.log('cmon',roomId);\r\n        if (!loggedinUser) return\r\n        let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n        if (friend) {\r\n            setIsFriend(true)\r\n            setRoomId(friend.roomId)\r\n        } else {\r\n            setIsFriend(false)\r\n        }\r\n    },[loggedinUser, contact._id]);\r\n\r\n    const toggleIsFriend = (ev) => {\r\n        ev.preventDefault()\r\n        setIsFriendSent(true)\r\n\r\n    }\r\n\r\n    const handelClick = (ev) => {\r\n        onAddFriend(ev, contact._id);\r\n        toggleIsFriend(ev)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) moveToRoom(ev,roomId) }}>\r\n            <img src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" />\r\n            <div className=\"user-name-container\">\r\n                <span>Full Name: {contact.fullName}</span>\r\n                <span>User Name: {contact.userName}</span>\r\n            </div>\r\n            {!contact.roomId &&\r\n                <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n                    alt=\"\"\r\n                    className=\"add-friend-img\"\r\n                    onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}\r\n        </div>\r\n    );\r\n};","import React from 'react'\r\n\r\nimport ContactPreview from './ContactPreview'\r\nexport default (props) => {\r\n    const { onAddFriend, loggedinUser, onMoveToRoom } = props\r\n\r\n    // const getRoomId = () => {\r\n    //     const roomId = contact.friends.find(friend => friend._id === loggedinUser._id).roomId\r\n    //     console.log(roomId);\r\n    //     return roomId\r\n    // }\r\n\r\n    return (\r\n        <div className=\"contact-list\">\r\n            {props.contacts.map(contact => {\r\n                return (\r\n                    <ContactPreview\r\n                        contact={contact}\r\n                        onAddFriend={onAddFriend}\r\n                        loggedinUser={loggedinUser}\r\n                        key={contact._id}\r\n                        moveToRoom={onMoveToRoom}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nexport default class Filter extends Component {\r\n    state = { term: '' };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...props.filterBy };\r\n    }\r\n\r\n    onChangeHandler = (ev) => {\r\n        \r\n        const { value, name } = ev.target;\r\n        \r\n        this.setState({ [name]: value }, () => {\r\n            this.props.onFilter({ ...this.state });\r\n        });\r\n    };\r\n    onKeyHandler = (ev) => {\r\n        if (ev.keyCode === 13) {\r\n            ev.preventDefault()\r\n            this.props.moveToContact()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {placeHolder} = this.props\r\n        \r\n        return (\r\n            <form>\r\n                <DebounceInput\r\n                    minLength={0}\r\n                    className=\"filter-input\"\r\n                    debounceTimeout={300}\r\n                    type=\"text\"\r\n                    placeholder={placeHolder ? placeHolder: 'Search Contacts'}\r\n                    onChange={this.onChangeHandler}\r\n                    name=\"term\"\r\n                    value={this.state.term}\r\n                    onKeyDown={this.onKeyHandler}\r\n                     />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","function uploadImg(ev) {\r\n    const CLOUD_NAME = \"tamir\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n        if (ev.target) {\r\n            formData.append('file', ev.target.files[0])\r\n        } else {\r\n            formData.append('file', ev)\r\n        }\r\n    formData.append('upload_preset', 'u1inrfbp'); // second parameter is the upload preset\r\n\r\n    return fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData,\r\n            secure:true\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport default {\r\n    uploadImg\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUser } from '../actions/UserActions';\r\nimport { updateUser } from '../actions/UserActions';\r\nimport { loadContacts } from '../actions/ContactActions';\r\n\r\nimport {AvatarEdit} from '../cmps/User/AvatarEdit'\r\nimport ContactList from '../cmps/ContactList'\r\nimport Filter from '../cmps/Filter'\r\n\r\nimport SocketService from '../services/SocketService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    filterBy: { term: '' },\r\n    isLoading: false\r\n  }\r\n  componentDidMount() {\r\n    if (!this.props.user) this.props.history.push(\"/signup\")\r\n    this.loadContacts()\r\n  }\r\n  loadContacts = async () => {\r\n    await this.props.loadContacts(this.state.filterBy);\r\n  };\r\n\r\n  onUploadImg = async (ev) => {\r\n    let user = this.props.user\r\n    this.setState({ isLoading: true })\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n    this.props.updateUser(updatedUser)\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\nonAddFriend = (ev,friendId) => {\r\n  \r\n  ev.preventDefault()\r\n  const {user} = this.props\r\n  SocketService.emit('Add Friend', {friendId, _id: user._id, userName:user.userName, fullName:user.fullName, type:'NotificationFriend',imgUrl:user.imgUrl })\r\n}\r\n\r\n  onFilterHandler = (filterBy) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        filterBy: {\r\n          ...prevState.filterBy,\r\n          ...filterBy,\r\n        },\r\n      };\r\n    }, this.loadContacts);\r\n\r\n  };\r\n\r\n  onMoveToRoom = (ev,roomId) => {   \r\n    console.log(ev);    \r\n    ev.stopPropagation()\r\n    this.props.history.push(`/board/${roomId}`);\r\n}\r\n\r\n  capitalize = (name) => {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n  };\r\n\r\n  render() {\r\n    const { user, contacts } = this.props;\r\n    const { isLoading } = this.state\r\n\r\n    return (\r\n      <div>\r\n        {user &&\r\n          <div className=\"home-page\">\r\n            {user.userName && <h2>Hi There {this.capitalize(user.userName)}</h2>}\r\n            <AvatarEdit imgUrl={user.imgUrl} onUploadImg={this.onUploadImg} isLoading={isLoading} />\r\n            <h6>Let's add contacts veze</h6>\r\n            <Filter filterBy={this.state.filterBy} onFilter={this.onFilterHandler} />\r\n            {contacts && <ContactList onMoveToRoom={this.onMoveToRoom} contacts={contacts} onAddFriend={this.onAddFriend} loggedinUser={user} />}\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  updateUser,\r\n  loadContacts,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ notification,onApprove,onDecline }) => {    \r\n    return (\r\n        <div className=\"notification-friend\">\r\n            <p>{notification.fullName} wants to start a board with you</p>\r\n            <button onClick={()=>onApprove(notification)}>Approve</button>\r\n            <button onClick={()=>onDecline(notification)}>Decline</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ notification }) => {\r\n    return (\r\n        <div className=\"notification-response\">\r\n            <p>{notification.fullName} has {notification.isApproved ? 'Approved' : 'Declined'} your request</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default ({ notification, onDeleteNotification }) => {\r\n\r\n    const {userName, roomId} = notification\r\n\r\n    return (\r\n        <Link to={`/board/${roomId}`} >\r\n        <div className=\"notification-note\" onClick={onDeleteNotification}>\r\n            <p>{userName} just Added A note! go check it out</p>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationFriend from './NotificationFriend'\r\nimport NotificationResponse from './NotificationResponse'\r\nimport NotificationNote from './NotificationNote'\r\nimport Moment from 'react-moment';\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\n\r\n\r\n\r\nexport default ({ notification,onApprove, onDecline, onDeleteNotification }) => {\r\n    const cmps = {\r\n        NotificationFriend,\r\n        NotificationResponse,\r\n        NotificationNote\r\n    }\r\n  \r\n\r\n    const NotificationType = cmps[notification.type];\r\n    return (\r\n        <div className=\"notification-preview\">\r\n            <div className=\"notification-header\">\r\n                <img src={notification.imgUrl} className=\"avatar avatar-xs\" alt=\"User Avatar\"/>\r\n                <div>\r\n            <NotificationType notification={notification} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}/>\r\n            <Moment fromNow>{notification.createdAt}</Moment>\r\n                </div>\r\n            <img src={xMark} onClick={()=> onDeleteNotification(notification)} className=\"x-mark\" alt=\"Close\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationPreview from './NotificationPreview'\r\n\r\nexport default ({notifications, onApprove, onDecline,onDeleteNotification}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"notification-list\">\r\n            {notifications.map(notification => {\r\n                return (\r\n                    <NotificationPreview notification={notification} key={notification._id} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}  />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport SocketService from '../services/SocketService'\r\n\r\n\r\nimport NotificationList from '../cmps/Notification/NotificationList';\r\n\r\nconst InboxPage = (props) => {\r\n  \r\n  const { user } = props\r\n\r\n  const onApprove = (notification) => {\r\n    SocketService.emit(\"approve\", { notification,user });\r\n\r\n  }\r\n  const onDecline = (notification) => {\r\n    SocketService.emit(\"decline\", { notification, user });\r\n  }\r\n\r\n  const onDeleteNotification = (notification) => {\r\n    const idx = user.notifications.findIndex(\r\n      currNotification => currNotification._id === notification._id\r\n    );\r\n    user.notifications.splice(idx, 1);\r\n      props.updateUser(user)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    (!user) ? <h1>Inbox is empty</h1> :\r\n      <div>\r\n        {user && <div>\r\n          {!!user.notifications.length && <NotificationList notifications={user.notifications} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification} ></NotificationList>}\r\n        </div>\r\n        }\r\n      </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    room: state.room.currRoom,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxPage);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadContacts } from '../actions/ContactActions';\r\n\r\nimport Filter from '../cmps/Filter'\r\nimport ContactList from '../cmps/ContactList'\r\n\r\nclass ContactPage extends Component {\r\n    state = {\r\n        filterBy: { term: '', roomId: '' }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.loadContacts()\r\n    }\r\n\r\n    onMoveToRoom = (ev,roomId) => {   \r\n        console.log(ev);    \r\n        ev.stopPropagation()\r\n        this.props.history.push(`/board/${roomId}`);\r\n    }\r\n    loadContacts = async () => {\r\n        await this.props.loadContacts(this.state.filterBy);\r\n    };\r\n\r\n    onFilterHandler = (filterBy) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                filterBy: {\r\n                    ...prevState.filterBy,\r\n                    ...filterBy,\r\n                },\r\n            };\r\n        }, this.loadContacts);\r\n    };\r\n\r\n    handleKeyPress = () => {\r\n        if (this.props.contacts.length === 1) {\r\n            let id = this.props.contacts[0]._id\r\n            this.props.history.push(`/board/${id}`);\r\n        }\r\n    }\r\n\r\n \r\n\r\n    render() {\r\n        const { contacts, user } = this.props\r\n        return (\r\n            <div>\r\n                {user && <div>\r\n                    <Filter\r\n                        filterBy={this.state.filterBy}\r\n                        onFilter={this.onFilterHandler}\r\n                        moveToContact={this.handleKeyPress}/>\r\n                    {!!contacts && <ContactList onMoveToRoom={this.onMoveToRoom} loggedinUser={user} contacts={user.friends}></ContactList>}\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage);","import React, { useState } from 'react';\r\nimport {\r\n    FloatingMenu,\r\n    MainButton,\r\n    ChildButton,\r\n} from 'react-floating-button-menu';\r\nimport MdAdd from '@material-ui/icons/Add';\r\nimport MdClose from '@material-ui/icons/Clear';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\n// import SvgIcon from '@material-ui/core/SvgIcon';    //PROBABLY NOT NEEDED\r\n// import styled from 'styled-components' //PROBABLY NOT NEEDED\r\n\r\nexport default ({ setNoteType, setNoteInputType, setNoteData }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    return (\r\n        <FloatingMenu\r\n            slideSpeed={500}\r\n            direction=\"up\"\r\n            spacing={8}\r\n            isOpen={isOpen}\r\n            className=\"button-menu\"\r\n        >\r\n            <MainButton\r\n                iconResting={<MdAdd style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                iconActive={<MdClose style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                backgroundColor=\"black\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                size={56}\r\n            />\r\n            <ChildButton\r\n                icon={<TextFieldsIcon style={{ fontSize: 20, fill: '#51a255' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteText'); setIsOpen(!isOpen); setNoteInputType('InputText') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ImageIcon style={{ fontSize: 20, fill: '#28b5f2' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteImg'); setIsOpen(!isOpen); setNoteInputType('InputImg') }}\r\n            />\r\n            <ChildButton\r\n                icon={<VideocamIcon style={{ fontSize: 20, fill: '#ff0000' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteVideo'); setIsOpen(!isOpen); setNoteInputType('InputVideo') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ListIcon style={{ fontSize: 20, fill: '#ffa350' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteTodo'); setIsOpen(!isOpen); setNoteInputType('InputTodo'); setNoteData([])}}\r\n            />\r\n        </FloatingMenu>\r\n    )\r\n}\r\n\r\n\r\n// export default class ButtonMenu extends Component {\r\n//     state = {\r\n//         isOpen: false,\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <FloatingMenu\r\n//                 slideSpeed={500}\r\n//                 direction=\"down\"\r\n//                 spacing={8}\r\n//                 isOpen={this.state.isOpen}\r\n//             >\r\n//                 <MainButton\r\n//                     iconResting={<MdAdd style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n//                     iconActive={<MdClose style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n//                     backgroundColor=\"black\"\r\n//                     onClick={() => this.setState({ isOpen: !this.state.isOpen })}\r\n//                     size={56}\r\n//                 />\r\n//                 <ChildButton\r\n//                     icon={<TextFieldsIcon style={{ fontSize: 20, fill: '#51a255' }} nativecolor=\"black\" />}\r\n//                     backgroundColor=\"white\"\r\n//                     size={40}\r\n//                     onClick={() => console.log('First button clicked')}\r\n//                 />\r\n//                 <ChildButton\r\n//                     icon={<ImageIcon style={{ fontSize: 20, fill: '#28b5f2' }} nativecolor=\"black\" />}\r\n//                     backgroundColor=\"white\"\r\n//                     size={40}\r\n//                 />\r\n//                 <ChildButton\r\n//                     icon={<VideocamIcon style={{ fontSize: 20, fill: '#ff0000'}} nativecolor=\"black\" />}\r\n//                     backgroundColor=\"white\"\r\n//                     size={40}\r\n//                 />\r\n//                 <ChildButton\r\n//                     icon={<ListIcon style={{ fontSize: 20, fill: '#ffa350' }} nativecolor=\"black\" />}\r\n//                     backgroundColor=\"white\"\r\n//                     size={40}\r\n//                 />\r\n//             </FloatingMenu>\r\n//         )\r\n//     }\r\n// }\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-text\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <p>{note.data}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-img\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <img src={note.data} alt={note.data} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    const formattedVidLink = () => {\r\n        return 'https://www.youtube.com/embed/' + note.data\r\n    }\r\n    return (\r\n        <div className=\"note-video\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <iframe width=\"100%\" allow=\"fullscreen\" src={formattedVidLink()} title=\"Video Player\"></iframe>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, createRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport xmark from '../../assets/svg/cross.svg'\r\nimport ArrowIcon from '../../assets/svg/arrow.svg'\r\n\r\nimport { saveRoom } from '../../actions/RoomActions';\r\n//TODO: IMPROVE EDIT INPUT AND MINUS UI +++ reflect trough socket\r\n\r\nconst NoteTodo = ({ note, saveRoom, room, userId, isEdit, currTodoIdx, setCurrTodoIdx, setIsNewTodo, isNewTodo }) => {\r\n    const [editedTodo, setEditedTodo] = useState('');\r\n    const [newTodo, setNewTodo] = useState('');\r\n    const editInputRef = createRef();\r\n    const newTodoInputRef = createRef()\r\n\r\n    const toggleIsDone = async (idx) => {\r\n        if (isEdit) return\r\n        note.data[idx].isDone = !note.data[idx].isDone\r\n        await saveRoom(room)\r\n        SocketService.emit(\"roomUpdated\", { room, userId });\r\n    }\r\n\r\n\r\n    const addTodo =  () => {\r\n        \r\n        let todoToAdd = { text: newTodo, isDone: false }\r\n        \r\n         note.data.push(todoToAdd);\r\n        setIsNewTodo(false)\r\n        setNewTodo('')\r\n        newTodoInputRef.current.value = ''\r\n    };\r\n    \r\n    const removeTodo = (idx) => {\r\n        note.data.splice(idx, 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (editInputRef.current) editInputRef.current.focus()\r\n        if (currTodoIdx !== '' && editInputRef.current) note.data[currTodoIdx].text = editedTodo\r\n    }, [editedTodo, currTodoIdx],)\r\n\r\n    return (\r\n        <div className=\"note-todo\">\r\n            <div className=\"todo-header\">\r\n                {note.header && <h4>{note.header}</h4>}\r\n                {isEdit && <img src={PlusIcon} className=\"new-todo-btn\" onClick={() => { setIsNewTodo(true) }} />}\r\n            </div>\r\n            <ul>\r\n                {!!note.data.length && note.data.map((todo, idx) => {\r\n                    return (\r\n                        <li key={todo.text} onClick={() => {\r\n                            if (isEdit) {\r\n                                setCurrTodoIdx(idx);\r\n                                setEditedTodo(todo.text)\r\n                            }\r\n                        }}>\r\n                            {(currTodoIdx !== idx) && <span className={todo.isDone ? 'done' : ''} onClick={(ev) => toggleIsDone(idx)}>{todo.text}</span>}\r\n                            {isEdit && <img src={xmark} className=\"remove-todo-btn\" onClick={() => removeTodo(idx)} />}\r\n                            {(isEdit && currTodoIdx === idx) && <input type=\"text\" value={editedTodo} ref={editInputRef} onChange={(e) => { setEditedTodo(e.target.value); }} />\r\n                            }\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            {isNewTodo && <div>\r\n                <input type=\"text\" placeholder=\"New Todo\" ref={newTodoInputRef} onChange={e => setNewTodo(e.target.value)} />\r\n                <img src={ArrowIcon} className=\"add-todo-btn\" onClick={() =>  addTodo() } />\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    saveRoom,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTodo);","import React, { useState, useEffect } from 'react';\r\nimport emptyStar from '../assets/svg/empty-star.svg'\r\nimport star from '../assets/svg/star.svg'\r\nimport colorPallete from '../assets/svg/paint.svg'\r\nimport splashOrange from '../assets/svg/splash-orange.svg'\r\nimport splashPink from '../assets/svg/splash-pink.svg'\r\nimport splashYellow from '../assets/svg/splash-yellow.svg'\r\nimport splashBlue from '../assets/svg/splash-blue.svg'\r\nimport splashGreen from '../assets/svg/splash-green.svg'\r\n\r\nexport default ({ togglePinned, note, user, setNoteColor }) => {\r\n    const [isPalleteOpen, setIsPalleteOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n    }, [note])\r\n\r\n    return (\r\n        <div className=\"features-container\">\r\n            <img className=\"pin-btn\" src={user.pinnedNotes.find(id => { return id === note._id }) ? star : emptyStar} alt=\"Pin Note\" onClick={() => togglePinned(note)} />\r\n            <div className=\"color-pallete\">\r\n                <img src={colorPallete} alt=\"Change Color\" className=\"color-pallete-icon\" onClick={() => setIsPalleteOpen(!isPalleteOpen)} />\r\n                {isPalleteOpen && <div className=\"colors-container\">\r\n                    <img src={splashOrange} className=\"color1\" onClick={() => { setNoteColor('#ffa350'); setIsPalleteOpen(false) }} />\r\n                    <img src={splashPink} className=\"color2\" onClick={() => { setNoteColor('#f78888'); setIsPalleteOpen(false) }} />\r\n                    <img src={splashYellow} className=\"color3\" onClick={() => { setNoteColor('#f3d250'); setIsPalleteOpen(false) }} />\r\n                    <img src={splashBlue} className=\"color4\" onClick={() => { setNoteColor('#90ccf4'); setIsPalleteOpen(false) }} />\r\n                    <img src={splashGreen} className=\"color5\" onClick={() => { setNoteColor('#4caf50'); setIsPalleteOpen(false) }} />\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//save button is a temp solution to onSubmit with enter key","import React, { useEffect, useState, createRef } from 'react'\r\nimport Moment from 'react-moment';\r\n\r\nimport xMark from '../assets/svg/x-mark.svg'\r\nimport editIcon from '../assets/svg/edit.svg'\r\nimport saveIcon from '../assets/svg/save.svg'\r\n\r\nimport NoteText from './Note/NoteText'\r\nimport NoteImg from './Note/NoteImg'\r\nimport NoteVideo from './Note/NoteVideo'\r\nimport NoteTodo from './Note/NoteTodo'\r\nimport Features from '../cmps/Features'\r\n\r\n\r\nexport default ({ note, user, removeNote, saveRoomChanges, togglePinned, isPinned }) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [isNewTodo, setIsNewTodo] = useState(false);\r\n    const [currTodoIdx, setCurrTodoIdx] = useState('');\r\n\r\n    const cmps = {\r\n        NoteText,\r\n        NoteImg,\r\n        NoteVideo,\r\n        NoteTodo\r\n    }\r\n    const NoteType = cmps[note.type];\r\n\r\n    const noteRef = createRef();\r\n\r\n    const setNoteColor = (color) => {\r\n        note.bgColor = color\r\n        saveRoomChanges()\r\n    }\r\n\r\n    const paintNote = () => {\r\n        if (note.bgColor) noteRef.current.style.backgroundColor = note.bgColor\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        paintNote()\r\n        if(note.createdBy._id !== user._id) return\r\n        if (note.createdBy.imgUrl !== user.imgUrl){\r\n            note.createdBy.imgUrl = user.imgUrl\r\n            saveRoomChanges()\r\n        } \r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        paintNote()\r\n    }, [note.bgColor]);\r\n\r\n    return (\r\n        <div className=\"note-preview\" >\r\n            <div className={user._id === note.createdBy._id ? 'user-container' : 'friend-container'}>\r\n                <img src={note.createdBy.imgUrl} alt=\"Note creator avatar\" className=\"avatar avatar-s\" />\r\n                <div className=\"note-container\" ref={noteRef}>\r\n                    <div className=\"note-header\">\r\n                        <div>\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && !isEdit) && <img src={editIcon} alt=\"Edit note\" className=\"edit-btn\" onClick={() => setIsEdit(true)} />}\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && isEdit) && <img src={saveIcon} alt=\"Save changes\" className=\"save-btn\" onClick={() => { setIsEdit(false); saveRoomChanges(); setCurrTodoIdx('') }} />}\r\n                            <img src={xMark} className=\"remove-btn\" onClick={() => removeNote(note._id)} alt=\"Delete\" />\r\n                        </div>\r\n                        <Moment format=\"MM/DD/YY ,HH:mm\">{note.createdAt}</Moment>\r\n                    </div>\r\n                    <NoteType note={note} user={user} isEdit={isEdit} currTodoIdx={currTodoIdx} setCurrTodoIdx={setCurrTodoIdx} setIsNewTodo={setIsNewTodo} isNewTodo={isNewTodo} />\r\n                    <Features togglePinned={togglePinned} isPinned={isPinned} note={note} user={user} setNoteColor={setNoteColor} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport NotePreview from './NotePreview'\r\nimport Loading from '../cmps/Loading'\r\n\r\nexport default ({ notes, user, removeNote,  saveRoomChanges, togglePinned, isPinned, setNoteType }) => {\r\n    \r\n    const [notesForDisplay, setNotesForDisplay] = useState([])\r\n\r\n    useEffect(() => {\r\n        \r\n        const fixedNotes = []\r\n        notes.map(note =>{\r\n            user.pinnedNotes.find(id =>{return id === note._id })  ? \r\n            fixedNotes.unshift(note) : fixedNotes.push(note)       \r\n        })\r\n     \r\n        setNotesForDisplay(fixedNotes)\r\n        }, [notes])\r\n\r\n    return (\r\n        \r\n        <div className=\"note-list\" onClick={()=>setNoteType('')}>\r\n            {notesForDisplay.length ? notesForDisplay.map(note => {\r\n                return (\r\n                    <NotePreview note={note} key={note._id} user={user} removeNote={removeNote} saveRoomChanges={saveRoomChanges} togglePinned={togglePinned} isPinned={isPinned} />\r\n                )\r\n            }) : <Loading/>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default ({ setNoteData, setNoteHeader, handleSubmit }) => {\r\n\r\n\r\n    return (\r\n        <form className=\"input-text\" onSubmit={handleSubmit}>\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input className=\"input-data\" placeholder=\"Say Something\" type=\"text\" onChange={e => setNoteData(e.target.value)} />\r\n            <button hidden>Save</button>\r\n        </form>\r\n    )\r\n}\r\n//save button is a temp solution to onSubmit with enter key","import React, { createRef } from 'react';\r\n\r\nimport uploadImg from '../assets/svg/upload.svg'\r\n\r\nexport default ({ setNoteHeader, onUploadImg }) => {\r\n\r\n    const inputRef = createRef();\r\n\r\n\r\n    const onUploadImgHandler = () => {\r\n        inputRef.current.click()\r\n        // setNoteType('NoteImg');\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-img\">\r\n            <input className=\"input-header\" placeholder=\"Img Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input type=\"file\" onChange={(ev) => { onUploadImg(ev); }} ref={inputRef} hidden />\r\n            <img src={uploadImg} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { onUploadImgHandler() }} />\r\n        </section >\r\n    );\r\n};\r\n\r\n","import axios from 'axios';\r\n//AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM RAN'S KEY\r\n//AIzaSyD09tfK-pjT-G6kEZmXRfeicoKR-neGKNU alt key\r\nconst API_KEY = 'AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM' \r\nconst limit = 15;\r\n\r\n\r\nexport const YoutubeApiService = {\r\n    youtubeQuery\r\n}\r\n\r\n\r\nasync function youtubeQuery(query) {\r\n    try {\r\n        const res = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&videoEmbeddable=true&type=video&key=${API_KEY}&q=${query}&maxResults=${limit}`);\r\n        return res.data.items;\r\n    } catch (err) {\r\n        console.log('Error while fetching videos',err); \r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { YoutubeApiService } from '../services/YoutubeApiService'\r\n\r\nimport PlusIcon from '../assets/svg/plus.svg'\r\n\r\nexport default ({ addVideo, setNoteHeader }) => {\r\n    const [videos, setVideos] = useState([]);\r\n\r\n    const searchYoutubeVideos = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setVideos([])\r\n            return\r\n        }\r\n        const youtubeVideos = await YoutubeApiService.youtubeQuery(queryStr);\r\n        setVideos(youtubeVideos)\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-video\">\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n            className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Video\"\r\n                onChange={e => searchYoutubeVideos(e.target.value)}\r\n            />\r\n            {!!videos.length &&<h1>Add video!</h1>}\r\n            {!!videos.length && videos.map(video => {\r\n                return (\r\n                    <div className=\"video-card\" key={video.id.videoId}>\r\n                        <img src={video.snippet.thumbnails.default.url} alt=\"Video Thumbnail\" />\r\n                        <h6>{video.snippet.title}</h6>\r\n                        <img src={PlusIcon} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { addVideo(video.id.videoId); setVideos([]) }} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </section >\r\n    );\r\n};","import React, { useState } from 'react'\r\n\r\nimport xMark from '../assets/svg/x-mark.svg'\r\nimport PlusIcon from '../assets/svg/plus.svg'\r\nimport saveIcon from '../assets/svg/save.svg'\r\n\r\n\r\nexport default ({ setNoteHeader, setNoteData, handleSubmit, noteData }) => {\r\n    const [currTodo, setCurrTodo] = useState('');\r\n\r\n    const textInput = React.useRef();\r\n\r\n    const addTodo = () => {\r\n        setNoteData([\r\n            ...noteData, {\r\n                text: currTodo,\r\n                isDone: false\r\n            }])\r\n        setCurrTodo('')\r\n        textInput.current.value = ''\r\n    };\r\n\r\n    const handleRemoveTodo = (todoIdx) => {\r\n        setNoteData(noteData.filter((todo, idx) => todoIdx !== idx))\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-todo\">\r\n            <input type=\"text\" placeholder=\"Header?\" className=\"input-header\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <ul>\r\n                {!noteData.length && <h5>No Todo's Added</h5>}\r\n                {!!noteData.length && noteData.map((todo, idx) => {\r\n                    return (\r\n                        <li className=\"todo\" key={todo.text}>\r\n                            <span>{todo.text}</span>\r\n                            <img src={xMark} onClick={() => handleRemoveTodo(idx)} className=\"x-mark\" alt=\"Remove Todo\" />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <div className=\"add-todo-container\">\r\n                <input type=\"text\" placeholder=\"task?\" className=\"input-task\" ref={textInput} onChange={e => setCurrTodo(e.target.value)} />\r\n                <img src={PlusIcon} className=\"add-button\" onClick={() => addTodo()} alt=\"Add todo\" />\r\n            </div>\r\n            <img src={saveIcon} className=\"add-button\" onClick={handleSubmit} alt=\"Save\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { UtilService } from '../services/UtilService'\r\nimport SocketService from '../services/SocketService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\nimport { loadRoomById, saveRoom, resetCurrRoom } from '../actions/RoomActions';\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport ButtonMenu from '../cmps/ButtonMenu'\r\nimport NoteList from '../cmps/NoteList'\r\nimport Filter from '../cmps/Filter'\r\nimport Loading from '../cmps/Loading'\r\nimport SplashIcon from '../cmps/icons/SplashIcon'\r\n\r\nimport InputText from '../cmps/InputText'\r\nimport InputImg from '../cmps/InputImg'\r\nimport InputVideo from '../cmps/InputVideo'\r\nimport InputTodo from '../cmps/InputTodo'\r\n\r\nimport { UserService } from '../services/UserService';\r\n\r\nconst BoardPage = (props) => {\r\n    const [noteType, setNoteType] = useState('');\r\n    const [noteHeader, setNoteHeader] = useState('');\r\n    const [noteData, setNoteData] = useState('');\r\n    const [noteInputType, setNoteInputType] = useState('InputText');\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [isPinned, setIsPinned] = useState(false);\r\n    const [filterBy, setfilterBy] = useState('');\r\n\r\n\r\n    const newNote = {\r\n        header: noteHeader,\r\n        data: noteData,\r\n        type: noteType,\r\n    }\r\n\r\n    const cmps = {\r\n        InputText,\r\n        InputImg,\r\n        InputVideo,\r\n        InputTodo\r\n    }\r\n\r\n    const InputType = cmps[noteInputType];\r\n\r\n\r\n    const loadRoom = async () => {\r\n        const roomId = props.match.params.id;\r\n        await props.loadRoomById({ term: filterBy.term, roomId });\r\n    }\r\n\r\n\r\n    const saveRoomChanges = async () => {\r\n        await props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n\r\n    }\r\n\r\n\r\n    const onUploadImg = async (ev) => {\r\n        if (noteType === 'NoteImg') {\r\n            const imgUrl = await CloudinaryService.uploadImg(ev)\r\n            setNoteData(imgUrl.secure_url)\r\n            setIsUploading(true)\r\n        }\r\n\r\n    }\r\n\r\n    const onAddVideo = (videoId) => {\r\n        setNoteData(videoId)\r\n        setIsUploading(true)\r\n    }\r\n\r\n    const onFilterHandler = (filterBy) => {\r\n        setfilterBy(filterBy)\r\n    };\r\n\r\n\r\n    const onHandleSubmit = async (ev) => {\r\n        const { user } = props\r\n        if (ev) ev.preventDefault()\r\n        newNote._id = UtilService.makeId(24)\r\n        newNote.createdAt = Date.now() //maybe server side should handle it\r\n        let minimalUser = await UserService.getMinimalUser(user._id, user.imgUrl)\r\n        newNote.createdBy = minimalUser\r\n        const friend = user.friends.find(friend => { return friend.roomId === props.match.params.id })\r\n        props.room.notes.unshift(newNote)\r\n        props.saveRoom(props.room)\r\n        SocketService.emit(\"added note\", ({ room: props.room, user: props.user, friendId: friend._id }));\r\n        setNoteHeader('')\r\n        setNoteData('')\r\n        setNoteType('')\r\n        setIsUploading(false)\r\n    }\r\n\r\n    const togglePinned = (note) => {\r\n        let choosenNote = props.user.pinnedNotes.find(id => note._id === id)\r\n        !choosenNote ? props.user.pinnedNotes.push(note._id) : props.user.pinnedNotes.splice(note._id, 1)\r\n        let idx = props.room.notes.findIndex(currNote => note._id === currNote._id)\r\n        props.room.notes.splice(idx, 1, note)\r\n        props.saveRoom(props.room)\r\n        props.updateUser(props.user)\r\n    }\r\n\r\n\r\n    const removeNote = async (noteId) => {\r\n        let idx = props.room.notes.findIndex(note => note._id === noteId)\r\n        props.room.notes.splice(idx, 1)\r\n        await props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadRoom()\r\n        return () => { props.resetCurrRoom() };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if ((noteData && noteType === 'NoteImg') || noteType === 'NoteVideo') {\r\n            onHandleSubmit()\r\n        }\r\n    }, [isUploading]);\r\n\r\n    useEffect(() => {\r\n        loadRoom()\r\n    }, [filterBy]);\r\n\r\n\r\n    if (props.room) var { notes } = props.room\r\n\r\n    return (\r\n        <div className=\"board-page\">\r\n            {notes ? <div className=\"note-add\">\r\n            <Filter filterBy={filterBy} onFilter={onFilterHandler} placeHolder={\"Search for notes\"} />\r\n                {noteType && <InputType\r\n                    addVideo={onAddVideo}\r\n                    onUploadImg={onUploadImg}\r\n                    handleSubmit={onHandleSubmit}\r\n                    setNoteHeader={setNoteHeader}\r\n                    setNoteData={setNoteData}\r\n                    noteData={noteData} />}\r\n                <ButtonMenu setNoteType={setNoteType} setNoteInputType={setNoteInputType} setNoteData={setNoteData}/>\r\n            </div> :  <Loading />}\r\n            {notes && <div>\r\n                {!!notes.length && <NoteList notes={notes} user={props.user} removeNote={removeNote} saveRoomChanges={saveRoomChanges} togglePinned={togglePinned} setNoteType={setNoteType} isPinned={isPinned} />}\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n        user: state.user.loggedinUser,\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadRoomById,\r\n    saveRoom,\r\n    resetCurrRoom,\r\n    updateUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardPage);","import React, { Component } from \"react\";\r\nimport { MDBInput } from \"mdbreact\";\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\n// import SocketService from '../services/SocketService'\r\n\r\nimport { signUp } from '../actions/UserActions'\r\nimport { login } from '../actions/UserActions'\r\nimport { getUser } from '../actions/UserActions'\r\nimport { connect } from \"react-redux\";\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n  state = {\r\n    newUser: {\r\n      userName: '',\r\n      fullName: '',\r\n      password: '',\r\n      imgUrl: '',\r\n    },\r\n    isSignUp: false,\r\n    isLoading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLoggedinUser();\r\n  }\r\n\r\n  getLoggedinUser = async () => {\r\n    await this.props.getUser()\r\n\r\n    if (this.props.user) this.props.history.push('/')\r\n  }\r\n\r\n  onChangeHandler = (ev) => {\r\n    const { value, name } = ev.target;\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        [name]: value\r\n      }\r\n    })\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({\r\n      newUser: {\r\n        userName: '',\r\n        password: ''\r\n      }\r\n    })\r\n  }\r\n\r\n  onUploadImg = async (ev) => {\r\n    this.setState({ isLoading: true })\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        imgUrl: userImgUrl.secure_url\r\n      }\r\n    })\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\n  connectSockets(id) {\r\n    this.props.onConnectSocket(id)\r\n  }\r\n\r\n  toggleSignUp = () => {\r\n    this.setState(prevState => ({\r\n      isSignUp: !prevState.isSignUp\r\n    }));\r\n  }\r\n\r\n  onHandleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n\r\n    this.state.isSignUp ?\r\n      await this.props.signUp({ ...this.state.newUser })\r\n      : await this.props.login({ ...this.state.newUser })\r\n    await this.getLoggedinUser();\r\n    if (!this.props.user) {\r\n      Swal.fire({\r\n        title: 'Wrong password or Username.',\r\n        width: 300,\r\n        confirmButtonText: \"Say what?\",\r\n        confirmButtonColor: \"yellow\",\r\n        padding: '1em',\r\n        background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n        backdrop: `\r\n          rgba(0,0,123,0.4)\r\n          url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n          left top\r\n          no-repeat\r\n        `\r\n      })\r\n      this.props.history.push(\"/signup\")\r\n      this.resetInput()\r\n      return\r\n    }\r\n    this.connectSockets(this.props.user._id)\r\n    this.props.history.push(\"/\")\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { isSignUp, isLoading } = this.state\r\n    const { imgUrl } = this.state.newUser\r\n    return (\r\n      <div className=\"signup-form\">\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          {!isSignUp && <h1>Login</h1>}\r\n          {isSignUp && <h1>SignUp</h1>}\r\n          {isSignUp && <AvatarEdit onUploadImg={this.onUploadImg} imgUrl={imgUrl} isLoading={isLoading} />}\r\n          {isSignUp && <MDBInput label=\"Full Name\" name=\"fullName\" value={this.state.newUser.fullName || ''} onChange={this.onChangeHandler} />}\r\n          <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={this.state.newUser.userName || ''} onChange={this.onChangeHandler} />\r\n          <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={this.state.newUser.password || ''} onChange={this.onChangeHandler} />\r\n          <button>{isSignUp ? 'SignUp' : 'Login'}</button>\r\n          {!isSignUp && <h2 onClick={this.toggleSignUp}>Don't Have an account? Sign Up!</h2>}\r\n          {isSignUp && <h2 onClick={this.toggleSignUp}>Head Back to Login</h2>}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signUp,\r\n  getUser,\r\n  login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from \"react\";\r\nimport { getUser } from \"./actions/UserActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport InboxPage from './pages/InboxPage'\r\n\r\nimport ContactPage from './pages/ContactPage'\r\nimport BoardPage from './pages/BoardPage'\r\nimport SignUp from './pages/SignUp'\r\nclass RoutePage extends React.Component {\r\n\r\n  async  componentDidMount() {\r\n    \r\n     await this.props.getUser();    \r\n      if(!this.isInSignupPage && !this.props.user){\r\n        this.props.history.push('/signup')\r\n      }\r\n    }\r\n\r\n    get isInSignupPage(){\r\n      return this.props.location.pathname === \"/signup\";\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (\r\n        this.props.location !== prevProps.location &&\r\n        !this.props.user &&\r\n        !this.isInSignupPage\r\n      ) {\r\n        this.props.history.push(\"/signup\");\r\n      }\r\n    }\r\n\r\n  render() {\r\n    // if(!this.isInSignupPage && !this.props.user ) return <h1>Nothing for you here</h1>\r\n\r\n    return (\r\n      <div className=\"router-page\">\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/signup\" exact render={(routerProps)=><SignUp {...routerProps} onConnectSocket={this.props.onConnectSocket}/>} />\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/contact\" component={ContactPage} />\r\n            <Route path=\"/board/:id\" component={BoardPage} />\r\n            <Route path=\"/inbox/:id\" exact component={InboxPage} />\r\n            {/* <Route path=\"/contact/edit/:id?\" component={ContactEdit} /> */}\r\n            {/* <Route path=\"/contact/:id\" component={ContactDetails} /> */}\r\n            {/* <Route path=\"/statistics\" component={Statistics} /> */}\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(RoutePage));\r\n","import React from \"react\";\r\nimport { stack as Menu } from \"react-burger-menu\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport { UtilService } from '../services/UtilService'\r\nimport { getUser } from '../actions/UserActions'\r\nimport { logout } from '../actions/UserActions'\r\n\r\n\r\n\r\nclass BurgerMenu extends React.Component {\r\n  state = {\r\n    menuOpen: false,\r\n    imgObj: {}\r\n  };\r\n\r\n \r\n  \r\n  closeMenu = (ev) => {\r\n    if (ev) {\r\n      this.handleLogout()\r\n    }\r\n    this.setState({ menuOpen: false });\r\n  };\r\n  \r\n  \r\n  handleLogout = async () => {\r\n \r\n    await this.props.logout()\r\n    this.props.history.push('/signup')\r\n  }\r\n\r\n\r\n  async handleStateChange(state) {\r\n    let imgObj = await UtilService.getRandomMeme()\r\n    this.setState({ imgObj }); \r\n    this.setState({ menuOpen: state.isOpen });\r\n    this.props.onOpenMenu(state.isOpen)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { menuOpen, imgObj } = this.state\r\n    const { user } = this.props\r\n    if (!user) return ''\r\n\r\n    return (\r\n      <Menu right isOpen={menuOpen} onStateChange={(state) => this.handleStateChange(state)}>\r\n        <NavLink activeClassName=\"active\" exact to=\"/\" onClick={() => this.closeMenu()}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/contact\" exact onClick={() => this.closeMenu()}>\r\n          Contacts\r\n        </NavLink>\r\n        {user.notifications.length && <span className=\"notification-count\">{user.notifications.length}</span>}\r\n        <NavLink activeClassName=\"active\" to={`/inbox/${user._id}`} exact onClick={() => this.closeMenu()}>\r\n          Inbox\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/signup\" exact onClick={() => this.closeMenu(logout)}  >\r\n          Logout\r\n        </NavLink>\r\n        <div className=\"menu-footer\">\r\n         <h5>{imgObj.imgHeader}</h5>\r\n        <img src={imgObj.imgUrl} alt=\"\"/>\r\n        </div>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(BurgerMenu));\r\n\r\n","import React ,{useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport logo from '../../src/assets/png/petek-logo.png'\r\nimport BurgerMenu from './BurgerMenu';\r\n\r\n\r\n\r\nexport default (props) => {\r\n\r\n  const { user } = props\r\n  const [isClicked, toggleClick] = useState(false)\r\n  \r\n  const onOpenMenu = (term) =>{\r\n    (!term) ? setTimeout(() => {\r\n      toggleClick(term)\r\n    }, 450) : \r\n    toggleClick(term)\r\n  }\r\n\r\n\r\n  return (\r\n     <nav className=\"NavBar\">\r\n        <Link to={`/`} className=\"home-link\" >\r\n        <img src={logo} alt=\"logo\" className=\"logo\"/>\r\n        </Link>\r\n       {user && !!user.notifications.length && <span className=\"notification-count nav-count\" >{user.notifications.length}</span>}\r\n       <BurgerMenu onOpenMenu={onOpenMenu}/>\r\n    </nav>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport './App.scss';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport audioNotification from '../src/assets/sound/notification.mp3'\r\n\r\nimport SocketService from './services/SocketService'\r\nimport { updateUser } from '../src/actions/UserActions';\r\nimport { saveRoom, loadRoomById } from '../src/actions/RoomActions';\r\n// import { getUser } from '../src/actions/UserActions';\r\n\r\n\r\n\r\nimport RoutePage from './RoutePage'\r\nimport NavBar from './cmps/NavBar';\r\n\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = (props) => {\r\n \r\n  const loggedinUser = props.user;\r\n  const room = props.room\r\n\r\n  const connectSockets =  (id) => {\r\n    SocketService.setup()\r\n    if(room) {\r\n      SocketService.on(`updateRoom ${room._id}`, async ({ updatedRoom, userId }) => {\r\n        console.log('here?');\r\n        \r\n        // let newRoom = await props.saveRoom(updatedRoom)        \r\n        if(updatedRoom.notes[0].createdBy._id !== loggedinUser._id || userId !== loggedinUser._id ){    \r\n          \r\n          props.loadRoomById(updatedRoom._id)\r\n        }\r\n        \r\n      });\r\n    }\r\n    if(loggedinUser) {\r\n      \r\n      SocketService.on(`updateUser ${loggedinUser._id}`, updateUser);\r\n      SocketService.on(`updateUserWithoutAudio ${loggedinUser._id}`, ({ user }) => {props.updateUser(user)})\r\n    }\r\n  }\r\n\r\n const disconnectSockets = () =>{\r\n  SocketService.off(`updateRoom ${room._id}`)\r\n  SocketService.off(`updateUser ${loggedinUser._id}`)\r\n  SocketService.off(`updateUserWithoutAudio ${loggedinUser._id}`)\r\n  }\r\n  \r\n  const updateUser = (updatedUser) => {\r\n    let audio = new Audio(audioNotification);\r\n    if (updatedUser) {\r\n      props.updateUser(updatedUser)\r\n      audio.play()\r\n      console.log('notifications');\r\n      \r\n\r\n    } else {\r\n      console.log(\"ERROR IN UPDATE USER\");\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    connectSockets()\r\n    \r\n    return () => {\r\n      if(room && loggedinUser){\r\n        disconnectSockets()\r\n      }\r\n     };\r\n\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <NavBar user={props.user} />\r\n        <RoutePage onConnectSocket={connectSockets} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room:state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  // getUser,\r\n  updateUser,\r\n  saveRoom,\r\n  loadRoomById,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    loggedinUser: null\r\n}\r\n\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return { ...state, loggedinUser: action.user  }\r\n            case 'GET_USER':\r\n            return { ...state, loggedinUser: action.user }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\n\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':            \r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CURR_CONTACT':\r\n            return { ...state, currContact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    if (contact._id === action.contact._id) return action.contact;\r\n                    return contact;\r\n                })\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => {\r\n                    return contact._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    rooms: [],\r\n    currRoom: null\r\n}\r\n\r\n\r\nexport default function RoomReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_ROOMS':\r\n            return { ...state, rooms: action.rooms }\r\n        case 'SET_CURR_ROOM':\r\n            return { ...state, currRoom: action.room }\r\n        case 'UPDATE_ROOM':\r\n            console.log('UPDATE_ROOM invoked rooms:', state.rooms)\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.map(room => {\r\n                    if (room._id === action.room._id) {\r\n                        //after problems fixed return it to one line term\r\n                        console.log('id match!');\r\n                        \r\n                        return action.room;\r\n                    }\r\n                    return room;\r\n                })\r\n            }\r\n        case 'DELETE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.filter(room => {\r\n                    return room._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_ROOM':\r\n            console.log('UPDATE_ROOM ', action.room);\r\n            return {\r\n                ...state,\r\n                rooms: [...state.rooms, action.room]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport UserReducer from './reducers/UserReducer';\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport RoomReducer from './reducers/RoomReducer'\r\nconst composeEnhancers = compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer,\r\n    room: RoomReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\nexport default store\r\n\r\n\r\n//*********STOREEEEE****************\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App.jsx'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/x-mark.082519b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.867418af.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c79dce59.png\";","module.exports = __webpack_public_path__ + \"static/media/save.d5a09bc5.svg\";"],"sourceRoot":""}