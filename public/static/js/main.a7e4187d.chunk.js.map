{"version":3,"sources":["assets/sound/sp-tune.mp3","assets/svg/add-note.svg","assets/svg/delete-user.svg","assets/gif/avatarLoader.gif","assets/svg/friends.svg","assets/svg/ok.svg","assets/svg/cross.svg","assets/svg/arrow.svg","assets/svg/loading.svg","assets/svg/upload.svg","assets/svg/save.svg","services/SocketService.js","services/StorageService.js","services/HttpService.js","services/UserService.js","actions/UserActions.js","services/RoomService.js","actions/RoomActions.js","services/UtilService.js","services/ContactService.js","actions/ContactActions.js","cmps/Filter.jsx","cmps/AvatarLoader.jsx","cmps/ContactPreview.jsx","cmps/ContactList.jsx","pages/ContactPage.jsx","services/NoteService.js","actions/NoteActions.js","cmps/ButtonMenu.jsx","cmps/Note/NoteFilter.jsx","cmps/LongText.jsx","cmps/Note/NoteText.jsx","cmps/Note/NoteImg.jsx","cmps/Note/NoteVideo.jsx","cmps/Note/NoteTodo.jsx","cmps/Note/NoteLoc.jsx","cmps/icons/NotePinIcon.jsx","cmps/icons/CircleIcon.jsx","cmps/icons/ColorPaletteIcon.jsx","cmps/icons/StarIcon.jsx","cmps/Note/Features.jsx","cmps/icons/RemoveIcon.jsx","cmps/icons/EditIcon.jsx","cmps/icons/SaveIcon.jsx","cmps/Note/NotePreview.jsx","cmps/icons/SpreadIcon.jsx","cmps/icons/ListIcon.jsx","cmps/Note/NoteList.jsx","cmps/Note/NotesContainer.jsx","cmps/Loading.jsx","cmps/Note/InputText.jsx","cmps/Note/InputImg.jsx","services/YoutubeApiService.js","cmps/Note/InputVideo.jsx","cmps/Note/InputTodo.jsx","services/MapService.js","cmps/icons/GpsIcon.jsx","cmps/Note/InputLoc.jsx","services/CloudinaryService.js","pages/RoomPage.jsx","cmps/User/AvatarEdit.jsx","pages/HomePage.jsx","cmps/Notification/NotificationFriend.jsx","cmps/Notification/NotificationResponse.jsx","cmps/Notification/NotificationNote.jsx","cmps/Notification/NotificationStarredNote.jsx","cmps/Notification/NotificationPreview.jsx","cmps/Notification/NotificationList.jsx","pages/InboxPage.jsx","pages/RandomGame.jsx","cmps/Note/StarredContainer.jsx","pages/StarredPage.jsx","pages/SignupPage.jsx","RoutePage.jsx","cmps/BurgerMenu.jsx","cmps/MyNavbar.jsx","App.jsx","serviceWorker.js","store/reducers/UserReducer.js","store/reducers/ContactReducer.js","store/reducers/RoomReducer.js","store/index.js","index.js","assets/svg/plus.svg","assets/png/user.png","assets/svg/pin.svg","assets/svg/x-mark.svg","assets/png/petek-logo.png"],"names":["module","exports","socket","setup","io","terminate","on","eventName","cb","off","emit","data","StorageService","save","key","value","item","JSON","stringify","localStorage","setItem","load","getItem","parse","axios","Axios","create","withCredentials","HttpService","endpoint","ajax","a","method","url","res","response","status","KEY","user","_id","getById","id","credentials","userName","fullName","password","imgUrl","notifications","starredNotes","avatarImg","joinedAt","Date","now","friends","removeItem","msg","updatedUser","userId","friendId","friend","userIdx","findIndex","splice","UserService","signUp","update","login","logout","getMinimalUser","updateImgAtContacts","getLoggedinUser","getRoomIdFromContact","loggedinUser","contact","find","updateFriend","dispatch","type","getUser","updateUser","room","prm","roomId","RoomService","query","critirea","params","URLSearchParams","filterBy","queryParams","property","set","remove","checkIsValidUser","loadRoomById","console","log","resetCurrRoom","err","saveRoom","isEdit","UtilService","makeId","length","txt","possible","i","charAt","Math","floor","random","getRandomChuck","get","contacts","ContactService","term","toLowerCase","filteredFriends","filter","includes","getContactById","Promise","resolve","reject","deleteContact","index","saveContact","c","_updateContact","push","_addContact","getEmptyContact","loadContacts","setFilterBy","moveToContact","placeHolder","minLength","className","debounceTimeout","placeholder","onChange","e","target","onKeyDown","ev","keyCode","preventDefault","AvatarLoader","isHome","src","avatarLoader","alt","onAddFriend","moveToRoom","setRoomId","useState","isFriendSent","setIsFriendSent","isFriend","setIsFriend","isLoaded","setIsLoaded","onLoad","useCallback","useEffect","toggleIsFriend","onClick","style","display","friendReqSent","addFriendImg","props","onMoveToRoom","showNotification","onDeleteFriend","map","ContactPreview","swipeLeft","content","deleteUser","action","swipeRight","addNote","mapDispatchToProps","connect","state","history","friendIdx","Filter","ContactList","friendName","n","Noty","text","layout","theme","animation","open","close","buttons","button","show","note","noteId","color","NoteService","removeNote","changeNoteColor","toggleNotePin","updateNote","toggleStarredNote","getStarredNotes","isStarredPage","notes","setNoteType","setNoteInputType","setNoteData","isOpen","setIsOpen","slideSpeed","direction","spacing","iconResting","fontSize","nativecolor","iconActive","backgroundColor","size","icon","fill","htmlFor","limit","isLongText","setIsLongText","textToShow","setTextToShow","setText","substring","class","setTextEdit","textEdit","header","LongText","width","allow","title","currRoom","currTodoIdx","setCurrTodoIdx","updateMembers","editedTodo","setEditedTodo","newTodo","setNewTodo","progress","setProgress","isNewTodo","setIsNewTodo","editInputRef","createRef","toggleIsDone","idx","noteCopy","isDone","addTodo","todoToAdd","removeTodo","doneTodosCount","reduce","acc","todo","prog","parseInt","culcProgress","current","focus","PlusIcon","checked","readOnly","ref","xmark","stopPropagation","ArrowIcon","completed","labelSize","name","height","navigator","platform","indexOf","window","coords","lat","lng","bootstrapURLKeys","center","yesIWantToUseGoogleMapApiInternals","defaultZoom","distanceToMouse","onGoogleApiLoaded","maps","Marker","position","PinIcon","renderMarkers","isPinned","enableBackground","viewBox","xmlns","d","version","xmlnsXlink","x","y","xmlSpace","clipRule","fillRule","isStarred","isPalleteOpen","setIsPalleteOpen","setIsStarred","handleStarClicked","handleColorClicked","ans","some","starredNote","checkIsStarred","StarIcon","NotePinIcon","TransitionGroup","component","CSSTransition","classNames","in","timeout","enter","exit","unmountOnExit","CircleIcon","saveRoomChanges","togglePinned","isSpreadView","setIsEdit","NoteType","NoteText","NoteImg","NoteVideo","NoteTodo","NoteLoc","noteRef","paintNote","bgColor","saveNoteEdits","handleRemoveClicked","getRoomId","createdBy","backgroudColor","EditIcon","SaveIcon","RemoveIcon","format","createdAt","Features","setNoteColor","setIsSpreadView","ListIcon","SpreadIcon","NotePreview","resetFilterBy","SocketService","NoteFilter","NoteList","members","Loading","loading","setNoteHeader","handleSubmit","onSubmit","onUploadImg","inputRef","hidden","uploadImg","click","API_KEY","YoutubeApiService","youtubeQuery","items","addVideo","videos","setVideos","searchYoutubeVideos","queryStr","youtubeVideos","video","videoId","snippet","thumbnails","default","noteData","currTodo","setCurrTodo","textInput","React","useRef","xMark","todoId","saveIcon","GAPI_KEY","MapService","searchLocs","searchAddress","getPosition","geolocation","getCurrentPosition","split","join","results","error","locs","setLocs","selectedLoc","setSelectedLoc","addressInputRef","searchLoc","locations","fetchUserCoords","userPos","latitude","longitude","accurateAddressIdx","address","address_components","short_name","dataObj","geometry","location","GpsIcon","loc","place_id","formatted_address","setLocNote","UPLOAD_URL","formData","FormData","append","files","fetch","body","secure","then","json","catch","noteType","noteHeader","noteInputType","isUploading","setIsUploading","newNote","InputType","InputText","InputImg","InputVideo","InputTodo","InputLoc","loadRoom","match","CloudinaryService","secure_url","onHandleSubmit","currFriend","isMarkerShown","ButtonMenu","AvatarEdit","isLoading","setIsLoading","setIsHome","getUpdatedUser","userImgUrl","Object","assign","notification","onApprove","onDecline","isApproved","onDeleteNotification","to","NotificationType","NotificationFriend","NotificationResponse","NotificationNote","NotificationStarredNote","fromNow","NotificationPreview","currNotification","NotificationList","RandomGame","gameName","setGameName","gamesName","randomInt","setGame","getNotes","SignupPage","newUser","isSignUp","onChangeHandler","setState","resetInput","toggleSignUp","prevState","Swal","fire","confirmButtonText","confirmButtonColor","padding","background","backdrop","connectSockets","this","onConnectSocket","label","Component","RoutePage","isInSignupPage","prevProps","path","exact","render","routerProps","HomePage","ContactPage","StarredPage","InboxPage","pathname","withRouter","BurgerMenu","menuOpen","chuckJoke","closeMenu","handleLogout","isClicked","right","onStateChange","handleStateChange","activeClassName","isMenuOpen","setIsMenuOpen","checkboxRef","handleCheboxClicked","bool","logo","createBrowserHistory","updatedRoom","disconnectSockets","audio","Audio","audioNotification","play","MyNavbar","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","currContact","rooms","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a7e4187d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sp-tune.a3eeb710.mp3\";","module.exports = __webpack_public_path__ + \"static/media/add-note.91ab0319.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-user.9760c031.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatarLoader.2c9b45c9.gif\";","module.exports = __webpack_public_path__ + \"static/media/friends.e8f88cde.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.251fc800.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.21df9a01.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.15b12873.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.a4b15b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.926d5c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.d5a09bc5.svg\";","import io from 'socket.io-client';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/' :\r\n    '//localhost:3030'\r\nvar socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit,\r\n}\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb)\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb)\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    \r\n    socket.emit(eventName, data)\r\n}\r\n\r\n","function save(key, value) {\r\n  let item = JSON.stringify(value);\r\n  localStorage.setItem(key, item);\r\n}\r\nfunction load(key) {\r\n  let item = localStorage.getItem(key);\r\n  let value = JSON.parse(item);\r\n  return value;\r\n}\r\n\r\nexport const StorageService = {\r\n  save,\r\n  load,\r\n};\r\n","// import router from '@/router'\r\n// import store from '@/store'\r\n\r\nimport Axios from 'axios';\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nconst BASE_URL = process.env.NODE_ENV !== 'development' ?\r\n    '/api/' :\r\n    '//localhost:3030/api/'\r\n\r\n\r\nexport const HttpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            method,\r\n            url: `${BASE_URL}${endpoint}`,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            return false\r\n                // throw new Error('error:  http.service page')\r\n                // router.push('/');\r\n        }\r\n    }\r\n}","import { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\nimport avatarImg from '../assets/png/user.png'\r\n\r\n\r\nconst KEY = 'user';\r\n\r\nasync function getLoggedinUser() {\r\n    var user = StorageService.load(KEY);\r\n    if (!user) return null\r\n    user = await HttpService.get(`user/${user._id}`)\r\n    return user\r\n}\r\n\r\n\r\n\r\nasync function getById(id) {\r\n    const user = await HttpService.get(`user/${id}`)\r\n    return user\r\n}\r\n\r\nasync function signUp(credentials) {\r\n    let { userName, fullName, password, imgUrl } = credentials\r\n    let user = {\r\n        userName,\r\n        fullName,\r\n        password,\r\n        notifications: [],\r\n        starredNotes: [],\r\n        imgUrl: imgUrl ? imgUrl : avatarImg,\r\n        joinedAt: Date.now(),\r\n        friends: []\r\n    };\r\n\r\n    user = await HttpService.post('auth/signup', user)\r\n    StorageService.save(KEY, user);\r\n    // getUser()\r\n    return user;\r\n}\r\n\r\nasync function login(credentials) {\r\n    const user = await HttpService.post('auth/login', credentials)\r\n    if (!user) return null;\r\n    StorageService.save(KEY, user);\r\n    return user;\r\n}\r\n\r\n\r\nasync function logout() {\r\n    localStorage.removeItem(KEY)\r\n    const msg = await HttpService.post('auth/logout');\r\n    return (msg)\r\n}\r\n\r\nasync function update(user) {\r\n    const updatedUser = await HttpService.put(`user/${user._id}`, user)\r\n    StorageService.save(KEY, updatedUser);\r\n    return updatedUser\r\n}\r\n\r\nasync function updateImgAtContacts(userId, imgUrl) {\r\n    await HttpService.put(`user/${userId}/update`, { userId, imgUrl })\r\n}\r\n\r\nasync function updateFriend(userId, friendId) {\r\n    let friend = await getById(friendId)\r\n    let userIdx = friend.friends.findIndex(user => user._id === userId)\r\n    friend.friends.splice(userIdx, 1)\r\n    await HttpService.put(`user/${friend._id}`, friend)\r\n}\r\n\r\n\r\nfunction getMinimalUser(_id, imgUrl) {\r\n    return {\r\n        _id,\r\n        imgUrl\r\n    }\r\n}\r\n\r\nfunction getRoomIdFromContact(loggedinUser, contact) {\r\n    return loggedinUser.friends.find(friend =>  friend._id === contact._id )\r\n\r\n}\r\n\r\nexport const UserService = {\r\n    getById,\r\n    signUp,\r\n    update,\r\n    login,\r\n    logout,\r\n    getMinimalUser,\r\n    updateImgAtContacts,\r\n    getLoggedinUser,\r\n    getRoomIdFromContact,\r\n    updateFriend,\r\n}","import { UserService } from '../services/UserService';\r\n\r\nexport function signUp(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.signUp(user);\r\n        dispatch({ type: 'SET_USER', newUser })\r\n    }\r\n}\r\nexport function login(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.login(user);\r\n        dispatch({ type: 'SET_USER', user: newUser })\r\n    }\r\n}\r\nexport function logout() {\r\n    const user = null\r\n    return async dispatch => {\r\n        await UserService.logout();\r\n        dispatch({ type: 'SET_USER', user })\r\n    }\r\n}\r\n\r\nexport function getUser() {\r\n    return async dispatch => {\r\n        const user = await UserService.getLoggedinUser();\r\n        dispatch({ type: 'GET_USER', user })\r\n        // const latestUser = await UserService.getUpdatedUser();\r\n        // dispatch({ type: 'GET_USER', latestUser })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function updateUser(user) {\r\n    return async dispatch => {\r\n        const updatedUser = await UserService.update(user);\r\n        dispatch({ type: 'SET_USER', user: updatedUser })\r\n    }\r\n}","import { HttpService } from \"./HttpService\";\r\n\r\nfunction query(critirea) {\r\n  const params = new URLSearchParams(critirea);\r\n  return HttpService.get(`room?${params}`);\r\n}\r\n\r\nfunction getById(filterBy) {\r\n  const queryParams = new URLSearchParams();\r\n  if (filterBy) {\r\n    for (const property in filterBy) {\r\n      if (filterBy[property]) {\r\n        queryParams.set(property, filterBy[property]);\r\n      }\r\n    }\r\n    return HttpService.get(`room?${queryParams}`);\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction remove(id) {\r\n  return HttpService.delete(`room/${id}`);\r\n}\r\n\r\nasync function save(room) {\r\n  let prm;\r\n\r\n  if (room._id) prm = HttpService.put(`room/${room._id}`, room);\r\n  else {\r\n    prm = HttpService.post(\"room\", room);\r\n  }\r\n  const res = await prm;\r\n  return res;\r\n}\r\n\r\n\r\n\r\nasync function checkIsValidUser(userId, roomId) {\r\n  return HttpService.post(`room/${roomId}/validate`, { userId, roomId });\r\n}\r\n\r\n\r\nexport const RoomService = {\r\n  query,\r\n  getById,\r\n  save,\r\n  remove,\r\n  checkIsValidUser\r\n};\r\n","import { RoomService } from \"../services/RoomService\";\r\n// LIST\r\nexport function loadRooms(filterBy) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const rooms = await RoomService.query(filterBy);\r\n      dispatch({ type: \"SET_ROOMS\", rooms });\r\n    } catch (err) {\r\n      console.log(\"ERROR\", err);\r\n    }\r\n  };\r\n}\r\n\r\n// READ\r\nexport function loadRoomById(filterBy) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const room = await RoomService.getById(filterBy);\r\n      dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    } catch (err) {\r\n      console.log(\"ERROR\", err);\r\n    }\r\n  };\r\n}\r\n\r\n//RESET\r\nexport function resetCurrRoom() {\r\n  return async (dispatch) => {\r\n    try {\r\n      const room = null;\r\n      dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    } catch (err) {\r\n      console.log(\"ERROR:\", err);\r\n    }\r\n  };\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveRoom(room) {\r\n  return async (dispatch) => {\r\n    const isEdit = !!room._id;\r\n    room = await RoomService.save(room);\r\n    if (isEdit) dispatch({ type: \"SET_CURR_ROOM\", room });\r\n    // dispatch({ type: 'UPDATE_ROOM', room })\r\n    else dispatch({ type: \"ADD_ROOM\", room });\r\n    return room;\r\n  };\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteRoom(id) {\r\n  return async (dispatch) => {\r\n    await RoomService.remove(id);\r\n    dispatch({ type: \"DELETE_ROOM\", id });\r\n  };\r\n}\r\n\r\n//setFilterBy\r\n\r\nexport function setFilterBy(filterBy) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"SET_FILTER_BY\", filterBy });\r\n  };\r\n}\r\n\r\n//RESET FILTER BY\r\nexport function resetFilterBy() {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"RESET_FILTER_BY\" });\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\n\r\n\r\nexport const UtilService = {\r\n    makeId,\r\n    getRandomChuck\r\n    // getRandomMeme\r\n}\r\n\r\nfunction makeId(length = 12) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nasync function getRandomChuck(){\r\n    const res = await axios.get(`https://api.chucknorris.io/jokes/random`);\r\n    return res.data.value\r\n}\r\n// async function getRandomMeme(){\r\n//     const res = await axios.get(`https://meme-api.herokuapp.com/gimme/dankmemes/1`);\r\n//      let imgObj = {imgUrl:res.data.memes[0].url, imgHeader:res.data.memes[0].title }\r\n//      return imgObj\r\n// }","import { UtilService } from './UtilService'\r\nimport { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\n\r\n\r\nconst CONTACT_KEY = 'contacts';\r\nvar contacts = []\r\n\r\n// function sort(arr) {\r\n//     return arr.sort((a, b) => {\r\n//         if (a.userName.toLocaleLowerCase() < b.userName.toLocaleLowerCase()) {\r\n//             return -1;\r\n//         }\r\n//         if (a.userName.toLocaleLowerCase() > b.userName.toLocaleLowerCase()) {\r\n//             return 1;\r\n//         }\r\n\r\n//         return 0;\r\n//     })\r\n// }\r\n\r\n// function query(filterBy = null) {\r\n//     return new Promise((resolve, reject) => {\r\n//         var contactsToReturn = StorageService.load(CONTACT_KEY);\r\n//         if (!contactsToReturn || !contactsToReturn.length) {\r\n//             contactsToReturn = [...contacts]\r\n//             StorageService.save(CONTACT_KEY, contactsToReturn)\r\n//         }\r\n//         contacts = [...contactsToReturn]\r\n//         if (filterBy && filterBy.term) {\r\n//             contactsToReturn = filter(filterBy.term)\r\n//         }\r\n//         contactsToReturn ? resolve(sort(contactsToReturn)) : reject(`Contacts not found!`)\r\n//     })\r\n// }\r\nfunction query(filterBy, user) {\r\n    if (filterBy.term && user) {\r\n        filterBy.term = filterBy.term.toLowerCase()\r\n        var filteredFriends = user.friends.filter(friend => {\r\n            return friend.userName.toLowerCase().includes(filterBy.term) || friend.fullName.toLowerCase().includes(filterBy.term)\r\n        })\r\n        return filteredFriends.length ? filteredFriends : ''\r\n    }\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]) {\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        }\r\n        return HttpService.get(`user?${queryParams}`);\r\n    }\r\n\r\n}\r\n// function query(filterBy, user) {\r\n//     console.log(filterBy);\r\n//     console.log(user);\r\n//     // if (!filterBy.term) return []\r\n//     const queryParams = new URLSearchParams();\r\n//     if (filterBy) {\r\n//         for (const property in filterBy) {\r\n//             if (filterBy[property]) {\r\n//                 queryParams.set(property, filterBy[property])\r\n//             }\r\n//         }\r\n//         console.log(queryParams);\r\n//         return HttpService.get(`user?${queryParams}`);\r\n//     }\r\n//     // return HttpService.get('user');\r\n// }\r\n\r\n\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = UtilService.makeId()\r\n        contacts.push(contact)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        fullName: '',\r\n        userName: '',\r\n    }\r\n}\r\n\r\n// function filter(term) {\r\n//     term = term.toLocaleLowerCase()\r\n//     return contacts.filter(contact => {\r\n//         return contact.userName.toLocaleLowerCase().includes(term) ||\r\n//             contact.fullName.toLocaleLowerCase().includes(term)\r\n//     })\r\n// }\r\n\r\nexport const ContactService = {\r\n    query,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}","import { ContactService } from '../services/ContactService'\r\n\r\n// LIST\r\nexport function loadContacts(filterBy,user) {\r\n    return async dispatch => {\r\n        try {\r\n            const contacts = await ContactService.query(filterBy,user);\r\n            dispatch({ type: 'SET_CONTACTS', contacts })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadContactById(id) {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = await ContactService.getContactById(id);\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrContact() {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = null\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveContact(contact) {\r\n    return async dispatch => {\r\n        const isEdit = !!contact._id\r\n        contact = await ContactService.saveContact(contact);\r\n        if (isEdit) dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        else dispatch({ type: 'ADD_CONTACT', contact })\r\n        return contact;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', id })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nexport default ({ filterBy, setFilterBy, moveToContact, placeHolder }) => {\r\n\r\n    const onKeyHandler = (ev) => {\r\n        if (ev.keyCode === 13) {\r\n            ev.preventDefault()\r\n            moveToContact()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <DebounceInput\r\n                minLength={0}\r\n                className=\"filter-input\"\r\n                debounceTimeout={300}\r\n                type=\"text\"\r\n                placeholder={placeHolder ? placeHolder : 'Search Contacts'}\r\n                onChange={e => setFilterBy({ ...filterBy, term: e.target.value })}\r\n                onKeyDown={onKeyHandler}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n","import avatarLoader from '../assets/gif/avatarLoader.gif'\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst AvatarLoader = ({ isHome }) => {\r\n    return <div>\r\n         <img src={avatarLoader} alt=\"loading\" className={isHome ? \"avatar avatar-loader home\" : \"avatar avatar-loader\"}/>\r\n    </div>;\r\n}\r\n\r\nexport default AvatarLoader;","import React, { useState, useEffect,useCallback } from 'react';\r\n\r\nimport AvatarLoader from './AvatarLoader'\r\n\r\nimport addFriendImg from '../assets/svg/friends.svg'\r\nimport friendReqSent from '../assets/svg/ok.svg'\r\n\r\n\r\n\r\nexport default ({ contact, onAddFriend, loggedinUser, moveToRoom,setRoomId,roomId }) => {\r\n\r\n\r\n    const [isFriendSent, setIsFriendSent] = useState(false)\r\n    const [isFriend, setIsFriend] = useState(false)\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  const onLoad = useCallback(() => {\r\n    console.log('loaded');\r\n    setIsLoaded(true);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!loggedinUser) return\r\n        let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n        if (friend) {\r\n            setIsFriend(true)\r\n            setRoomId(friend.roomId)\r\n        } else {\r\n            setIsFriend(false)\r\n        }\r\n       \r\n    },[loggedinUser, contact._id]);\r\n\r\n    const toggleIsFriend = (ev) => {\r\n        // ev.preventDefault()\r\n        setIsFriendSent(true)\r\n\r\n    }\r\n    \r\n\r\n    const handelClick = (ev) => {\r\n        onAddFriend(contact._id);\r\n        toggleIsFriend(ev)\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) contact.roomId ?  moveToRoom(ev,contact.roomId) : moveToRoom(ev,contact)  }}>    \r\n           <img  onLoad={onLoad} src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" style={{display: isLoaded? 'block': 'none'}}/> \r\n          {!isLoaded && <AvatarLoader/>}\r\n            <div className=\"user-name-container\">\r\n                <span>Full Name: {contact.fullName}</span>\r\n                <span>User Name: {contact.userName}</span>\r\n            </div>\r\n            {!contact.roomId &&\r\n                <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n                    alt=\"\"\r\n                    className=\"add-friend-img\"\r\n                    onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}      \r\n           \r\n        </div>\r\n       \r\n\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\n// import '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\n\r\n\r\n// import addFriendImg from '../assets/svg/friends.svg'\r\n// import friendReqSent from '../assets/svg/ok.svg'\r\n// import addNote from '../assets/svg/notes.svg'\r\n// import deleteUser from '../assets/svg/delete.svg'\r\n\r\n\r\n// export default ({ contact, onAddFriend, loggedinUser, moveToRoom,isHome }) => {\r\n\r\n\r\n//     const [isFriendSent, setIsFriendSent] = useState(false)\r\n//     const [isFriend, setIsFriend] = useState(false)\r\n//     const [roomId, setRoomId] = useState('')\r\n\r\n//     useEffect(() => {\r\n//         if (!loggedinUser) return\r\n//         let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n//         if (friend) {\r\n//             setIsFriend(true)\r\n//             setRoomId(friend.roomId)\r\n//         } else {\r\n//             setIsFriend(false)\r\n//         }\r\n//     },[loggedinUser, contact._id]);\r\n\r\n//     const toggleIsFriend = (ev) => {\r\n//         // ev.preventDefault()\r\n//         setIsFriendSent(true)\r\n\r\n//     }\r\n    \r\n\r\n//     const handelClick = (ev) => {\r\n//         onAddFriend(contact._id);\r\n//         toggleIsFriend(ev)\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div className=\"swipe-container\">\r\n//       <SwipeableListItem \r\n      \r\n//     swipeLeft={{\r\n//         content:<img className=\"swipe-content-left\" src={deleteUser}/>,\r\n//         action: (ev) => {console.log('balls');},\r\n        \r\n//     }}\r\n//     swipeRight={{\r\n//         content:isHome ? <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg} className=\"add-friend-img\"/> :  <img className=\"swipe-content-right\" src={addNote}/>,\r\n//         action: isHome ?  (ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev) : (ev) => { moveToRoom(ev,roomId)},\r\n        \r\n//     }} \r\n//     >\r\n//       <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) moveToRoom(ev,roomId) }}>    \r\n//           <img src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" />\r\n//             <div className=\"user-name-container\">\r\n//                 <span>Full Name: {contact.fullName}</span>\r\n//                 <span>User Name: {contact.userName}</span>\r\n//             </div>\r\n//             {!contact.roomId &&\r\n//                 <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n//                     alt=\"\"\r\n//                     className=\"add-friend-img\"\r\n//                     onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}      \r\n           \r\n//         </div>\r\n//          </SwipeableListItem>\r\n//         </div>\r\n       \r\n\r\n//     );\r\n// };","import React, { useState } from 'react'\r\nimport { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\nimport addNote from '../assets/svg/add-note.svg'\r\nimport deleteUser from '../assets/svg/delete-user.svg'\r\n\r\nimport ContactPreview from './ContactPreview'\r\n\r\nexport default (props) => {\r\n    const { onAddFriend, loggedinUser, onMoveToRoom, isHome, onDeleteFriend, showNotification } = props\r\n    const [roomId, setRoomId] = useState('')\r\n\r\n\r\n    return (\r\n        <div className=\"contact-list swipe-container\">\r\n            {props.contacts.map(contact => {\r\n                return (\r\n                    <div key={contact._id}>\r\n                        {!isHome ? <SwipeableListItem\r\n                            swipeLeft={{\r\n                                content: <div className=\"delete-btn-container\"><img className=\"swipe-content-left\" src={deleteUser} /></div>,\r\n                                action: () => { showNotification(contact.userName, contact._id) },\r\n                            }}\r\n                            swipeRight={{\r\n                                content: <div className=\"add-btn-container\"><img className=\"swipe-content-right\" src={addNote} /></div>,\r\n                                action: (ev) => { onMoveToRoom(ev, contact.roomId) },\r\n                                key: contact._id\r\n\r\n                            }}\r\n                        >\r\n                            <ContactPreview\r\n                                contact={contact}\r\n                                onAddFriend={onAddFriend}\r\n                                loggedinUser={loggedinUser}\r\n                                key={contact._id}\r\n                                moveToRoom={onMoveToRoom}\r\n                                isHome={isHome}\r\n                                setRoomId={setRoomId}\r\n                                roomId={roomId}\r\n                            />\r\n                        </SwipeableListItem> :\r\n                            <ContactPreview\r\n                                contact={contact}\r\n                                onAddFriend={onAddFriend}\r\n                                loggedinUser={loggedinUser}\r\n                                key={contact._id}\r\n                                moveToRoom={onMoveToRoom}\r\n                                isHome={isHome}\r\n                                setRoomId={setRoomId}\r\n                                roomId={roomId}\r\n\r\n                            />}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n// import React, { useState } from 'react'\r\n// import { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\n// import '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\n// import addNote from '../assets/svg/notes.svg'\r\n// import deleteUser from '../assets/svg/delete.svg'\r\n\r\n// import ContactPreview from './ContactPreview'\r\n\r\n// export default (props) => {\r\n//     const { onAddFriend, loggedinUser, onMoveToRoom, isHome, onDeleteFriend, showNotification } = props\r\n//     const [roomId, setRoomId] = useState('')\r\n\r\n\r\n//     return (\r\n//         <div className=\"contact-list swipe-container\">\r\n//             {props.contacts.map(contact => {\r\n//                 return (\r\n//                     <div key={contact._id}>\r\n//                         {!isHome ? <SwipeableListItem\r\n//                             swipeLeft={{\r\n//                                 content: <img className=\"swipe-content-left\" src={deleteUser} />,\r\n//                                 action: (ev) => { showNotification(contact.userName, contact._id) },\r\n//                                 // action: (ev) => { onDeleteFriend(contact._id) },\r\n\r\n\r\n//                             }}\r\n//                             swipeRight={{\r\n//                                 content: <img className=\"swipe-content-right\" src={addNote} />,\r\n//                                 action: (ev) => { onMoveToRoom(ev, contact.roomId) },\r\n//                                 key: contact._id\r\n\r\n//                             }}\r\n//                         >\r\n//                             <ContactPreview\r\n//                                 contact={contact}\r\n//                                 onAddFriend={onAddFriend}\r\n//                                 loggedinUser={loggedinUser}\r\n//                                 key={contact._id}\r\n//                                 moveToRoom={onMoveToRoom}\r\n//                                 isHome={isHome}\r\n//                                 setRoomId={setRoomId}\r\n//                                 roomId={roomId}\r\n//                             />\r\n//                         </SwipeableListItem> :\r\n//                             <ContactPreview\r\n//                                 contact={contact}\r\n//                                 onAddFriend={onAddFriend}\r\n//                                 loggedinUser={loggedinUser}\r\n//                                 key={contact._id}\r\n//                                 moveToRoom={onMoveToRoom}\r\n//                                 isHome={isHome}\r\n//                                 setRoomId={setRoomId}\r\n//                                 roomId={roomId}\r\n\r\n//                             />}\r\n//                     </div>\r\n//                 )\r\n//             })}\r\n//         </div>\r\n\r\n//     );\r\n// };\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n\r\n// import ContactPreview from './ContactPreview'\r\n// export default (props) => {\r\n//     const { onAddFriend, loggedinUser, onMoveToRoom, isHome } = props\r\n\r\n\r\n//     return (\r\n//         <div className=\"contact-list\">\r\n//             {props.contacts.map(contact => {\r\n//                 return (\r\n//                     <ContactPreview\r\n//                         contact={contact}\r\n//                         onAddFriend={onAddFriend}\r\n//                         loggedinUser={loggedinUser}\r\n//                         key={contact._id}\r\n//                         moveToRoom={onMoveToRoom}\r\n//                         isHome={isHome}\r\n//                     />\r\n//                 )\r\n//             })}\r\n//         </div>\r\n//     );\r\n// };\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Noty from 'noty';\r\n\r\nimport { loadContacts } from '../actions/ContactActions';\r\nimport { loadRoomById } from '../actions/RoomActions';\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport { UserService } from '../services/UserService'\r\n\r\n\r\nimport Filter from '../cmps/Filter'\r\nimport ContactList from '../cmps/ContactList'\r\n\r\nconst ContactPage = (props) => {\r\n    const [filterBy, setFilterBy] = useState({ term: '', roomId: '' })\r\n    const { contacts, user } = props\r\n\r\n\r\n\r\n    const onMoveToRoom = async (ev, roomId) => {\r\n        if (!props.history) {\r\n            await props.loadRoomById({ roomId });\r\n            return\r\n        }\r\n        props.history.push(`/room/${roomId}`);\r\n    }\r\n\r\n    const loadContacts = async () => {\r\n        await props.loadContacts(filterBy, user);\r\n    };\r\n\r\n    const handleKeyPress = () => {\r\n        if (props.contacts.length === 1) {\r\n            let id = props.contacts[0]._id\r\n            props.history.push(`/room/${id}`);\r\n        }\r\n    }\r\n\r\n    const showNotification = (friendName, friendId) => {\r\n        //bgc \r\n        let n = new Noty({\r\n            text: `Remove ${friendName} from your contact list?`,\r\n            layout: 'center',\r\n            theme: 'sunset',\r\n            type: 'alert',\r\n            // theme: 'bootstrap-v4',\r\n\r\n            animation: {\r\n                open: 'animated bounceInRight', // Animate.css class names\r\n                close: 'animated bounceOutRight' // Animate.css class names\r\n            },\r\n            buttons: [\r\n                Noty.button('YES', 'btn btn-danger', () => {\r\n                    onDeleteFriend(friendId)\r\n                    n.close();\r\n                }, { id: 'button1', 'data-status': 'ok' }),\r\n\r\n                Noty.button('NO', 'btn btn-error', () => {\r\n                    n.close();\r\n                })\r\n            ]\r\n        });\r\n        n.show()\r\n    }\r\n\r\n    const onDeleteFriend = (friendId) => {\r\n        let friendIdx = user.friends.findIndex(friend => friend._id === friendId)\r\n        user.friends.splice(friendIdx, 1)\r\n        props.updateUser(user)\r\n        UserService.updateFriend(user._id, friendId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadContacts()\r\n    }, [filterBy])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {user && <div>\r\n                <Filter\r\n                    filterBy={filterBy}\r\n                    setFilterBy={setFilterBy}\r\n                    moveToContact={handleKeyPress} />\r\n                {!!contacts && <ContactList showNotification={showNotification} onDeleteFriend={onDeleteFriend} onMoveToRoom={onMoveToRoom} loggedinUser={user} contacts={contacts.length ? contacts : user.friends} />}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts,\r\n    loadRoomById,\r\n    updateUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage);","import { HttpService } from './HttpService.js'\r\n\r\nasync function addNote(userId, roomId, note) {\r\n    return await HttpService.post(`note/add`, { userId, roomId, note })\r\n}\r\n\r\nasync function removeNote(roomId, noteId) {\r\n    return HttpService.delete(`note/removeNote`, { roomId, noteId });\r\n}\r\n\r\nasync function changeNoteColor(roomId, noteId, color) {\r\n    return HttpService.put(`note/changeNoteColor`, {\r\n        roomId,\r\n        noteId,\r\n        color,\r\n    });\r\n}\r\n\r\nasync function toggleNotePin(roomId, noteId) {\r\n    return HttpService.put(`note/toggleNotePin`, { roomId, noteId });\r\n}\r\n\r\nasync function updateNote(roomId, note) {\r\n    return HttpService.put(`note/updateNote`, { roomId, note });\r\n}\r\n\r\nasync function toggleStarredNote(userId, roomId, noteId) {\r\n    return await HttpService.put(`note/toggleStar`, { userId, roomId, noteId })\r\n}\r\n\r\nfunction getStarredNotes(user) {\r\n    const queryParams = new URLSearchParams();\r\n    if (user) {\r\n        for (const property in user) {\r\n            if (user[property]) {\r\n                queryParams.set(property, JSON.stringify(user[property]));\r\n            }\r\n        }\r\n        return HttpService.get(`note/starredNotes/?${queryParams}`);\r\n    }\r\n}\r\n\r\n\r\nexport const NoteService = {\r\n    addNote,\r\n    removeNote,\r\n    changeNoteColor,\r\n    toggleNotePin,\r\n    updateNote,\r\n    toggleStarredNote,\r\n    getStarredNotes\r\n}","import { NoteService } from '../services/NoteService'\r\n\r\n\r\nexport function addNote(userId, roomId, note) {\r\n    return async (dispatch) => {\r\n        try {\r\n            let room = await NoteService.addNote(userId, roomId, note);\r\n            dispatch({ type: \"SET_CURR_ROOM\", room });\r\n        } catch (err) {\r\n            console.log(\"ERROR\", err);\r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\nexport function toggleStarredNote(userId, roomId, noteId, isStarredPage) {\r\n    return async dispatch => {\r\n        try {\r\n            let user = await NoteService.toggleStarredNote(userId, roomId, noteId);\r\n            dispatch({ type: 'SET_USER', user })\r\n            if (isStarredPage) {\r\n                let notes = await NoteService.getStarredNotes(user)\r\n                dispatch({ type: \"SET_CURR_ROOM\", room: { notes } })\r\n            }\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeNote(roomId, noteId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            let room = await NoteService.removeNote(roomId, noteId);\r\n            dispatch({ type: \"SET_CURR_ROOM\", room });\r\n            //SET_USER AFTER REMOVING NOTE\r\n        } catch (err) {\r\n            console.log(\"ERROR\", err);\r\n        }\r\n    };\r\n}\r\n\r\nexport function changeNoteColor(roomId, noteId, color) {\r\n    return async (dispatch) => {\r\n        try {\r\n            let room = await NoteService.changeNoteColor(roomId, noteId, color);\r\n            dispatch({ type: \"SET_CURR_ROOM\", room });\r\n        } catch (err) {\r\n            console.log(\"ERROR\", err);\r\n        }\r\n    };\r\n}\r\n\r\nexport function toggleNotePin(roomId, noteId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            let room = await NoteService.toggleNotePin(roomId, noteId);\r\n            dispatch({ type: \"SET_CURR_ROOM\", room });\r\n        } catch (err) {\r\n            console.log(\"ERROR\", err);\r\n        }\r\n    };\r\n}\r\n\r\nexport function updateNote(roomId, note) {\r\n    return async (dispatch) => {\r\n        try {\r\n            let room = await NoteService.updateNote(roomId, note);\r\n            dispatch({ type: \"SET_CURR_ROOM\", room });\r\n        } catch (err) {\r\n            console.log(\"ERROR\", err);\r\n        }\r\n    };\r\n}\r\n\r\nexport function getStarredNotes(user) {\r\n    return async (dispatch) => {\r\n        try {\r\n            let notes = await NoteService.getStarredNotes(user);\r\n            let room = { notes };\r\n            dispatch({ type: \"SET_CURR_ROOM\", room });\r\n        } catch (err) {\r\n            console.log(\"ERROR\", err);\r\n        }\r\n    };\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport {\r\n    FloatingMenu,\r\n    MainButton,\r\n    ChildButton,\r\n} from 'react-floating-button-menu';\r\nimport MdAdd from '@material-ui/icons/Add';\r\nimport MdClose from '@material-ui/icons/Clear';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport LocIcon from '@material-ui/icons/Room';\r\n\r\n// import SvgIcon from '@material-ui/core/SvgIcon';    //PROBABLY NOT NEEDED\r\n// import styled from 'styled-components' //PROBABLY NOT NEEDED\r\n\r\nexport default ({ setNoteType, setNoteInputType, setNoteData }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    return (\r\n        <FloatingMenu\r\n            slideSpeed={500}\r\n            direction=\"up\"\r\n            spacing={8}\r\n            isOpen={isOpen}\r\n            className=\"button-menu\"\r\n        >\r\n            <MainButton\r\n                iconResting={<MdAdd style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                iconActive={<MdClose style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                backgroundColor=\"black\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                size={56}\r\n            />\r\n            <ChildButton\r\n                icon={<TextFieldsIcon style={{ fontSize: 20, fill: '#51a255' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteText'); setIsOpen(!isOpen); setNoteInputType('InputText') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ImageIcon style={{ fontSize: 20, fill: '#28b5f2' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteImg'); setIsOpen(!isOpen); setNoteInputType('InputImg') }}\r\n            />\r\n            <ChildButton\r\n                icon={<VideocamIcon style={{ fontSize: 20, fill: '#ff0000' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteVideo'); setIsOpen(!isOpen); setNoteInputType('InputVideo') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ListIcon style={{ fontSize: 20, fill: '#ffa350' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteTodo'); setIsOpen(!isOpen); setNoteInputType('InputTodo'); setNoteData([]) }}\r\n            />\r\n              <ChildButton\r\n                icon={<LocIcon style={{ fontSize: 20, fill: '#800080' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteLoc'); setIsOpen(!isOpen); setNoteInputType('InputLoc'); setNoteData(null) }}\r\n            />\r\n        </FloatingMenu>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nexport default ({ filterBy, setFilterBy, roomId }) => {\r\n    return (\r\n        <section>\r\n            <DebounceInput\r\n                minLength={0}\r\n                className=\"note-filter-input\"\r\n                debounceTimeout={300}\r\n                type=\"text\"\r\n                placeholder={'Search Notes'}\r\n                onChange={e => setFilterBy({ ...filterBy, roomId, term: e.target.value,  })}\r\n            />\r\n            <label htmlFor=\"type-select\">Type</label>\r\n            <select id=\"type-select\" onChange={e => setFilterBy({ ...filterBy, roomId, type: e.target.value })}>\r\n                <option value=\"\">All</option>\r\n                <option value=\"NoteText\">Text</option>\r\n                <option value=\"NoteImg\">Image</option>\r\n                <option value=\"NoteVideo\">Video</option>\r\n                <option value=\"NoteTodo\">Todos</option>\r\n                <option value=\"NoteLoc\">Location</option>\r\n            </select>\r\n        </section >\r\n    )\r\n\r\n}\r\n//filterBy Model{\r\n    // roomId,\r\n    // term,\r\n    // type\r\n    // }","import React, { useState, useEffect } from 'react'\r\n\r\nexport default ({ text, limit }) => {\r\n    const [isLongText, setIsLongText] = useState('')\r\n    const [textToShow, setTextToShow] = useState('')\r\n\r\n    const toggleIsLongText = () => {\r\n        setIsLongText(!isLongText)\r\n        setText()\r\n    }\r\n\r\n    const setText = () => {\r\n        isLongText ? setTextToShow(text.substring(0, limit) + '...') : setTextToShow(text)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLongText(text.length > limit)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setText()\r\n    }, [isLongText])\r\n\r\n    return (\r\n        <div className=\"long-text\">\r\n            {textToShow.length && <p className=\"long-text\" >\r\n                {textToShow}\r\n                {text.length > limit && <span class=\"long-text-btn\" onClick={toggleIsLongText}>{textToShow.length > limit + 4 ? 'Read Less' : 'Read More'}</span>}\r\n            </p>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport LongText from '../LongText'\r\n\r\nexport default ({ note, isEdit, textEdit, setTextEdit }) => {\r\n    return (\r\n        <div className=\"note-text\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            {isEdit\r\n                ? <input type=\"text\" onChange={(e) => setTextEdit(e.target.value)} />\r\n                : <LongText text={note.data} limit={25} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n// export default ({ note, isEdit, textEdit, setTextEdit }) => {\r\n\r\n//     return (\r\n//         <div className=\"note-text\">\r\n//             {note.header && <h4>{note.header}</h4>}\r\n//             {isEdit\r\n//                 ? <input type=\"text\" onChange={(e) => setTextEdit(e.target.value)} />\r\n//                 : <p>{note.data}</p>}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n//Trying to animate the switch between edit and text. the problem is that altough its not edit mode \r\n// the input is shown. after the first time we switch isEdit the problem is fixed.import React, { useState } from 'react'\r\n// import { CSSTransition } from 'react-transition-group';\r\n\r\n// export default ({ note, isEdit, textEdit, setTextEdit, isNotEdit }) => {\r\n\r\n//     return (\r\n//         <div className=\"note-text\">\r\n//             {note.header && <h4>{note.header}</h4>}\r\n//             {/* {isEdit\r\n//                 ? <input type=\"text\" onChange={(e) => setTextEdit(e.target.value)} />\r\n//                 : <p>{note.data}</p>} */}\r\n//             <CSSTransition\r\n//                 classNames={'fade'}\r\n//                 timeout={300}\r\n//                 in={isEdit}>\r\n//                 <input type=\"text\" onChange={(e) => setTextEdit(e.target.value)} />\r\n//             </CSSTransition>\r\n//             <CSSTransition\r\n//                 classNames={'fade'}\r\n//                 timeout={300}\r\n//                 in={isNotEdit}>\r\n//                 <p>{note.data}</p>\r\n//             </CSSTransition>\r\n//             {isEdit ? <h1>true</h1> : <h1>false</h1>}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-img\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <img src={note.data} alt={note.data} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    const formattedVidLink = () => {\r\n        return 'https://www.youtube.com/embed/' + note.data\r\n    }\r\n    return (\r\n        <div className=\"note-video\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <iframe width=\"100%\" allow=\"fullscreen\" src={formattedVidLink()} title=\"Video Player\"></iframe>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, createRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport ProgressBar from '@ramonak/react-progress-bar';\r\n\r\nimport { UtilService } from '../../services/UtilService'\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport xmark from '../../assets/svg/cross.svg'\r\nimport ArrowIcon from '../../assets/svg/arrow.svg'\r\n\r\nimport { saveRoom } from '../../actions/RoomActions';\r\n//TODO: IMPROVE EDIT INPUT AND MINUS UI +++ reflect trough socket\r\n\r\nconst NoteTodo = ({ note, saveRoom, room, userId, isEdit, currTodoIdx, setCurrTodoIdx, updateNote, updateMembers }) => {\r\n\r\n    const [editedTodo, setEditedTodo] = useState('');\r\n    const [newTodo, setNewTodo] = useState('');\r\n    const [progress, setProgress] = useState(0)\r\n    const [isNewTodo, setIsNewTodo] = useState(false)\r\n\r\n    const editInputRef = createRef();\r\n\r\n    const toggleIsDone = async (idx) => {\r\n        if (isEdit) return\r\n        let noteCopy = JSON.parse(JSON.stringify(note))\r\n        noteCopy.data[idx].isDone = !noteCopy.data[idx].isDone\r\n        await updateNote(room._id, noteCopy)\r\n        updateMembers()\r\n    }\r\n    //*********CHECKPOINT */\r\n\r\n    const addTodo = async () => {\r\n        \r\n        let todoToAdd = {\r\n            text: newTodo,\r\n            isDone: false,\r\n            _id: UtilService.makeId(5)\r\n        }\r\n\r\n        let noteCopy = JSON.parse(JSON.stringify(note))\r\n        noteCopy.data.push(todoToAdd);\r\n        console.log(noteCopy);\r\n        await updateNote(room._id, noteCopy)\r\n        updateMembers()\r\n        setIsNewTodo(false)\r\n        setNewTodo('')\r\n    };\r\n\r\n    const removeTodo = async (idx) => {\r\n        let noteCopy = JSON.parse(JSON.stringify(note))\r\n        noteCopy.data.splice(idx, 1)\r\n        await updateNote(room._id, noteCopy)\r\n        updateMembers()\r\n    }\r\n\r\n    const culcProgress = () => {\r\n        let doneTodosCount = note.data.reduce((acc, todo) => {\r\n            if (todo.isDone) acc++\r\n            return acc;\r\n        }, 0);\r\n        let prog = parseInt(doneTodosCount / note.data.length * 100)\r\n        setProgress(prog)\r\n    }\r\n\r\n    useEffect(() => {\r\n        culcProgress()\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if (editInputRef.current) editInputRef.current.focus()\r\n        if (currTodoIdx !== '' && editInputRef.current) note.data[currTodoIdx].text = editedTodo\r\n    }, [editedTodo, currTodoIdx])\r\n\r\n    return (\r\n        <div className=\"note-todo\">\r\n            <div className=\"todo-header\">\r\n                {note.header && <h4>{note.header}</h4>}\r\n                {isEdit && <img src={PlusIcon} className=\"new-todo-btn\" onClick={() => { setIsNewTodo(true) }} />}\r\n            </div>\r\n            <ul>\r\n                {!!note.data.length && note.data.map((todo, idx) => {\r\n                    return (\r\n                        <li key={todo._id} onClick={() => {\r\n                            if (isEdit) {\r\n                                setCurrTodoIdx(idx);\r\n                                setEditedTodo(todo.text)\r\n                            }\r\n                            //later remove this func from template to so called \"methods\"\r\n                        }}>\r\n                            <div>\r\n                                <input type=\"checkbox\" onClick={(ev) => toggleIsDone(idx)} checked={todo.isDone} readOnly />\r\n                                {(currTodoIdx !== idx) && <span className={todo.isDone ? 'done' : ''} >{todo.text}</span>}\r\n                            </div>\r\n                            {(isEdit && currTodoIdx === idx) && <input type=\"text\" value={editedTodo} ref={editInputRef} onChange={(e) => { setEditedTodo(e.target.value); }} />}\r\n                            {isEdit && <img src={xmark} className=\"remove-todo-btn\" onClick={(ev) => {ev.stopPropagation(); removeTodo(idx); }} />}\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n            {isNewTodo && <div className=\"add-todo-container\">\r\n                <input type=\"text\" className=\"add-todo-input\" placeholder=\"New Todo\" onChange={e => setNewTodo(e.target.value)} />\r\n                <img src={ArrowIcon} className=\"add-todo-btn\" onClick={() => addTodo()} />\r\n            </div>}\r\n            <div className=\"progress-bar\">\r\n                <ProgressBar completed={progress} labelSize={!progress ? '0' : '0.75rem'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//checkbox read only prop makes error go away, we will let it stay for a while\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    saveRoom,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTodo);","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nimport PinIcon from '../../assets/svg/pin.svg'\r\n\r\n\r\n\r\nexport default ({ note }) => {\r\n    const mapsSelector = () => {\r\n        if /* if we're on iOS, open in Apple Maps */\r\n            ((navigator.platform.indexOf(\"iPhone\") != -1) ||\r\n            (navigator.platform.indexOf(\"iPod\") != -1) ||\r\n            (navigator.platform.indexOf(\"iPad\") != -1))\r\n            window.open(`maps://maps.google.com/maps?daddr=${note.data.coords.lat},${note.data.coords.lng}&amp;ll=`);\r\n\r\n        else /* else use Google */\r\n            window.open(`https://maps.google.com/maps?daddr=${note.data.coords.lat},${note.data.coords.lng}&amp;ll=\"`);\r\n    }\r\n\r\n    const renderMarkers = (map, maps) => {\r\n        let marker = new maps.Marker({\r\n            position: { lat: note.data.coords.lat, lng: note.data.coords.lng },\r\n            map,\r\n            icon: PinIcon\r\n        });\r\n        return marker;\r\n    };\r\n\r\n    return (\r\n        <div className=\"note-loc\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            {note.data.name && <h6>{note.data.name}</h6>}\r\n            {note && <div style={{ height: '30vh', width: '100%' }} onClick={mapsSelector}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA' }}\r\n                    center={note.data.coords}\r\n                    yesIWantToUseGoogleMapApiInternals={true}\r\n                    defaultZoom={18}\r\n                    distanceToMouse={() => { }}\r\n                    onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n                >\r\n                </GoogleMapReact>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default ({ isPinned }) => {\r\n    return <svg className={isPinned ? 'note-pin-icon pinned' : 'note-pin-icon'}  enableBackground=\"new 0 0 494.982 494.982\" viewBox=\"0 0 494.982 494.982\"  xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g>\r\n    <g>\r\n    <path className=\"clr clr-5\" d=\"m15.871 486.565 28.585-18.848c26.039-17.169 50.274-36.934 72.332-58.992l106.088-106.088-30.521-30.521-106.087 106.089c-22.058 22.058-41.824 46.293-58.992 72.332l-18.848 28.585c-3.227 4.894 2.549 10.67 7.443 7.443z\" />\r\n    <path className=\"clr clr-4\" d=\"m55.526 450.537c17.168-26.039 36.934-50.274 58.992-72.332l91.963-91.963-14.125-14.125-106.088 106.088c-22.058 22.058-41.824 46.293-58.992 72.332l-18.848 28.585c-3.227 4.894 2.549 10.67 7.443 7.443l28.126-18.545z\" />\r\n    <path className=\"clr clr-3\" d=\"m431.826 139.878c-8.131-8.131-68.579-68.579-76.711-76.711l-108.84 101.993 83.559 83.559z\" />\r\n    <path className=\"clr clr-2\" d=\"m391.099 99.151c-16.327-16.327-32.106-32.106-35.984-35.984l-108.84 101.993 35.984 35.984z\" />\r\n    <path className=\"clr clr-1\" d=\"m479.42 98.532-82.96-82.96c-10.726-10.726-28.277-10.726-39.003 0l-6.727 6.728c-10.726 10.726-10.726 28.277 0 39.003l82.96 82.96c10.726 10.726 28.277 10.726 39.003 0l6.728-6.728c10.725-10.725 10.725-28.277-.001-39.003z\" />\r\n    <path className=\"clr clr-3\" d=\"m398.94 72.924 8.231-8.23c7.855-7.855 18.701-11.002 28.958-9.453l-39.668-39.668c-10.726-10.726-28.277-10.726-39.003 0l-6.728 6.728c-10.726 10.726-10.726 28.277 0 39.003l38.508 38.508c-.857-9.628 2.374-19.56 9.702-26.888z\" />\r\n    <path className=\"clr clr-1\" d=\"m327.702 384.766c18.417-33.878 23.816-64.549 24.813-85.94.824-17.688-5.84-34.896-18.361-47.417l-90.57-90.57c-12.521-12.521-29.729-19.185-47.417-18.361-21.391.997-52.062 6.396-85.94 24.813-7.866 4.277-9.384 14.942-3.053 21.273l199.255 199.255c6.331 6.331 16.997 4.813 21.273-3.053z\" />\r\n    <path className=\"clr clr-3\" d=\"m165.482 223.656c32.836-20.465 61.329-28.735 80.898-31.985 12.602-2.093 24.431-.004 33.785 5.749l-36.581-36.581c-12.521-12.521-29.729-19.185-47.417-18.361-21.391.997-52.062 6.396-85.941 24.813-7.866 4.277-9.384 14.942-3.053 21.273l51.003 51.003c-1.541-5.246 1.296-12.165 7.306-15.911z\" /></g>\r\n    <path d=\"m2.152 474.996c-3.396 5.159-2.718 11.812 1.649 16.181 4.369 4.368 11.022 5.046 16.183 1.65 33.379-21.971 63.783-40.488 101.729-78.435l38.352-38.352c2.929-2.93 2.929-7.678 0-10.607-2.93-2.928-7.678-2.928-10.607 0l-38.352 38.353c-36.021 36.022-66.054 54.582-90.754 70.841 16.023-24.346 34.617-54.531 70.841-90.755l100.349-100.35 19.915 19.915-37.25 37.249c-2.929 2.93-2.929 7.678 0 10.607 2.93 2.928 7.678 2.928 10.607 0l37.249-37.249 79.063 79.063c9.885 9.882 26.49 7.506 33.165-4.775 19.49-35.851 24.743-68.28 25.717-89.174.884-18.978-6.019-37.569-18.966-51.399l89.811-95.967c13.697 11.335 34.221 10.681 47.143-2.241l6.729-6.729c13.676-13.677 13.676-35.933-.001-49.61l-31.18-31.179c-2.927-2.927-7.676-2.93-10.606.001-2.929 2.929-2.929 7.677.001 10.606l31.179 31.178c7.829 7.83 7.829 20.568.001 28.397l-6.729 6.728c-7.826 7.829-20.567 7.829-28.396 0-8.836-8.836-71.82-71.82-82.96-82.96-7.806-7.806-7.804-20.593.001-28.396l6.728-6.729c7.805-7.805 20.593-7.804 28.396.001l27.031 27.031c2.93 2.928 7.678 2.928 10.607 0 2.929-2.93 2.929-7.678 0-10.607l-27.031-27.03c-13.67-13.67-35.942-13.667-49.61-.001l-6.727 6.728c-12.905 12.905-13.594 33.428-2.242 47.144l-95.967 89.811c-13.828-12.947-32.404-19.842-51.4-18.966-20.892.974-53.322 6.226-89.173 25.716-12.283 6.677-14.655 23.286-4.774 33.166l79.063 79.063-100.351 100.351c-38.07 38.073-56.665 68.656-78.433 101.731zm351.53-400.15 66.449 66.45-89.66 95.806-72.595-72.595zm-241.203 108.399c-2.794-2.792-2.132-7.498 1.331-9.381 33.35-18.13 63.385-23.009 82.708-23.909 15.524-.727 30.756 5.165 41.764 16.172l90.57 90.57c11.002 11.001 16.896 26.224 16.172 41.763-.9 19.323-5.779 49.358-23.91 82.708-1.874 3.443-6.569 4.145-9.38 1.332-4.936-4.936-194.483-194.483-199.255-199.255z\"/></g></svg>\r\n}\r\n\r\n\r\n// reds:\r\n// clr-1:#FB5252\r\n// clr-2:#F04141\r\n// clr-3:#FF4A3C\r\n// clr-4:#b1dbfc\r\n// clr-5:#dfebfa","import React from 'react';\r\n\r\n\r\nexport default ({ fill }) => {\r\n\r\n    return <svg className=\"circle-icon\" style={{ fill }} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 512 512\" xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"color-pallete-icon\" enableBackground=\"new 0 0 512.037 512.037\" viewBox=\"0 0 512.037 512.037\" xmlns=\"http://www.w3.org/2000/svg\"><g>\r\n        <g clipRule=\"evenodd\" fillRule=\"evenodd\">\r\n            <path d=\"m237.033 233.985 41.012 41.013 64.978-69.184 153.518-163.455c7.154-7.617 7.389-19.481 0-26.87s-19.253-7.154-26.87 0l-163.455 153.519z\" fill=\"#6d91ac\" />\r\n            <path d=\"m278.045 274.998-41.012-41.013c-68.762 18.425-23.075 64.087-57.278 98.291 28.514 16.463 98.291-4.426 98.29-57.278z\" fill=\"#f4e9e2\" />\r\n            <path d=\"m179.754 332.276c34.203-34.203-11.484-79.866 57.278-98.291l69.183-64.977c-7.007-13.059-10.558-27.482-10.655-41.924-.175-26.127 24.949-56.528-41.774-63.75-63.943-6.921-130.337 14.12-179.356 63.14-85.915 85.916-85.915 225.211 0 311.127 85.916 85.916 225.211 85.916 311.127 0 49.019-49.019 70.061-115.413 63.14-179.356-7.222-66.723-37.623-41.6-63.75-41.774-14.442-.097-28.866-3.648-41.925-10.655l-64.978 69.184c.002 52.85-69.775 73.739-98.29 57.276zm5.074-164.71c-15.307 6.34-32.857-.929-39.197-16.236s.929-32.856 16.236-39.197 32.857.929 39.198 16.236c6.339 15.307-.93 32.856-16.237 39.197zm-66.154 66.13c-6.34 15.307-23.89 22.576-39.197 16.236-15.307-6.341-22.576-23.89-16.236-39.197s23.89-22.577 39.197-16.236 22.576 23.89 16.236 39.197zm-.017 93.538c6.34 15.307-.929 32.857-16.236 39.197s-32.856-.929-39.197-16.236c-6.34-15.307.929-32.857 16.236-39.197s32.857.929 39.197 16.236zm159.669 66.171c15.307-6.34 32.857.929 39.198 16.236 6.34 15.307-.929 32.856-16.236 39.197s-32.857-.929-39.197-16.236c-6.341-15.307.928-32.857 16.235-39.197zm-93.539-.016c15.307 6.34 22.576 23.89 16.236 39.197-6.341 15.307-23.89 22.576-39.197 16.236-15.308-6.341-22.577-23.89-16.236-39.197 6.341-15.308 23.89-22.577 39.197-16.236zm159.693-66.114c6.34-15.307 23.89-22.577 39.197-16.236 15.307 6.34 22.576 23.889 16.236 39.197-6.341 15.307-23.89 22.577-39.197 16.236-15.308-6.341-22.577-23.89-16.236-39.197z\" fill=\"#ddb9a3\" />\r\n            <path d=\"m145.63 151.33c6.341 15.307 23.89 22.576 39.197 16.236 15.307-6.341 22.576-23.89 16.236-39.197s-23.89-22.577-39.198-16.236c-15.306 6.34-22.575 23.89-16.235 39.197z\" fill=\"#000\" />\r\n            <path d=\"m118.674 233.696c6.34-15.307-.929-32.856-16.236-39.197s-32.857.929-39.197 16.236c-6.341 15.307.929 32.856 16.236 39.197 15.307 6.34 32.856-.929 39.197-16.236z\" fill=\"#ffa350\" />\r\n            <path d=\"m118.657 327.234c-6.341-15.307-23.89-22.577-39.197-16.236s-22.577 23.89-16.236 39.197 23.89 22.576 39.197 16.236 22.576-23.889 16.236-39.197z\" fill=\"#f78888\" />\r\n            <path d=\"m184.787 393.389c-15.307-6.341-32.856.929-39.197 16.236s.929 32.857 16.236 39.197 32.856-.929 39.197-16.236c6.341-15.308-.929-32.857-16.236-39.197z\" fill=\"#fff59d\" />\r\n            <path d=\"m278.326 393.405c-15.307 6.34-22.576 23.89-16.236 39.197 6.341 15.307 23.89 22.577 39.197 16.236s22.576-23.89 16.236-39.197-23.89-22.576-39.197-16.236z\" fill=\"#90ccf4\" />\r\n            <path d=\"m344.48 327.275c-6.341 15.307.929 32.856 16.236 39.197s32.857-.929 39.197-16.236-.929-32.856-16.236-39.197-32.857.929-39.197 16.236z\" fill=\"#4caf50\" /></g>\r\n        <g>\r\n            <path d=\"m75.633 301.76c-20.377 8.44-30.088 31.886-21.648 52.263 6.375 15.388 21.303 24.693 37.008 24.693 5.091 0 10.267-.979 15.255-3.045 20.377-8.44 30.088-31.885 21.648-52.262-8.441-20.378-31.884-30.09-52.263-21.649zm22.961 55.433c-10.188 4.219-21.911-.635-26.132-10.824-4.22-10.189.636-21.912 10.824-26.132 2.495-1.033 5.081-1.522 7.627-1.522 7.852 0 15.317 4.653 18.504 12.347 4.221 10.188-.634 21.911-10.823 26.131z\" />\r\n            <path d=\"m54.002 237.522c4.089 9.872 11.777 17.56 21.648 21.648 4.99 2.067 10.163 3.045 15.255 3.045 15.704 0 30.634-9.306 37.007-24.693 8.44-20.377-1.271-43.822-21.647-52.262-9.872-4.089-20.744-4.089-30.615 0s-17.559 11.777-21.647 21.648c-4.09 9.871-4.09 20.743-.001 30.614zm18.478-22.96c2.044-4.936 5.888-8.78 10.824-10.824 2.468-1.022 5.061-1.533 7.653-1.533s5.187.511 7.654 1.533c10.188 4.22 15.044 15.942 10.824 26.131-4.221 10.188-15.944 15.045-26.131 10.824-4.936-2.044-8.78-5.888-10.824-10.824-2.045-4.935-2.045-10.371 0-15.307z\" />\r\n            <path d=\"m158.04 176.805c4.936 2.044 10.121 3.066 15.308 3.066 5.185 0 10.372-1.022 15.307-3.066 9.871-4.089 17.559-11.777 21.648-21.648 4.088-9.871 4.088-20.744 0-30.615s-11.776-17.559-21.647-21.648-20.744-4.089-30.615 0c-9.872 4.088-17.56 11.776-21.648 21.648-4.088 9.871-4.088 20.744 0 30.614 4.087 9.871 11.775 17.56 21.647 21.649zm-3.171-44.61c2.044-4.936 5.888-8.779 10.824-10.824 2.468-1.022 5.06-1.533 7.653-1.533s5.186.511 7.654 1.533c4.936 2.044 8.779 5.888 10.824 10.824 2.044 4.936 2.044 10.372 0 15.307-2.044 4.936-5.888 8.78-10.824 10.824-4.936 2.044-10.372 2.044-15.308 0s-8.779-5.889-10.824-10.825c-2.043-4.934-2.043-10.37.001-15.306z\" />\r\n            <path d=\"m157.999 458.06c4.99 2.067 10.163 3.045 15.255 3.045 15.704 0 30.634-9.306 37.007-24.693 4.089-9.871 4.089-20.744 0-30.615s-11.777-17.56-21.648-21.648c-9.872-4.089-20.744-4.089-30.615 0s-17.559 11.777-21.648 21.648c-8.439 20.378 1.272 43.823 21.649 52.263zm-3.17-44.608c2.044-4.936 5.889-8.78 10.824-10.824 2.468-1.022 5.061-1.533 7.653-1.533s5.186.511 7.654 1.533c4.935 2.044 8.779 5.888 10.823 10.824s2.044 10.372 0 15.308c-4.22 10.188-15.941 15.043-26.131 10.824-10.188-4.222-15.043-15.944-10.823-26.132z\" />\r\n            <path d=\"m274.499 458.077c4.936 2.044 10.121 3.066 15.307 3.066s10.372-1.022 15.307-3.067c9.872-4.088 17.56-11.776 21.648-21.648 4.088-9.871 4.088-20.744 0-30.614-4.088-9.871-11.776-17.56-21.648-21.648-9.871-4.089-20.743-4.089-30.614 0-20.377 8.44-30.088 31.885-21.648 52.263 4.089 9.871 11.777 17.559 21.648 21.648zm7.654-55.433c2.468-1.022 5.061-1.533 7.654-1.533s5.186.511 7.654 1.533c4.936 2.044 8.779 5.888 10.824 10.824 2.044 4.936 2.044 10.372 0 15.307-2.044 4.936-5.888 8.779-10.824 10.824s-10.372 2.044-15.307 0c-4.936-2.044-8.78-5.888-10.824-10.824-4.221-10.189.634-21.911 10.823-26.131z\" />\r\n            <path d=\"m372.144 378.756c15.704 0 30.633-9.305 37.007-24.693 4.089-9.871 4.089-20.744 0-30.615-4.089-9.872-11.777-17.56-21.648-21.648-20.377-8.441-43.821 1.271-52.262 21.647-8.44 20.377 1.271 43.822 21.647 52.262 4.99 2.068 10.164 3.047 15.256 3.047zm-18.426-47.654c4.22-10.188 15.943-15.043 26.131-10.824 10.188 4.22 15.044 15.943 10.824 26.131s-15.94 15.044-26.132 10.824c-10.187-4.22-15.042-15.942-10.823-26.131z\" />\r\n            <path d=\"m503.612 8.418c-11.14-11.14-29.056-11.235-40.788-.218l-153.092 143.787c-2.685-8.018-4.114-16.474-4.171-24.97-.032-4.704 1.005-9.935 2.103-15.473 2.426-12.244 5.176-26.121-3.679-38.173-7.985-10.868-23.594-17.216-49.122-19.979-53.057-5.746-106.697 7.146-151.041 36.294-4.615 3.034-5.897 9.234-2.864 13.849s9.235 5.897 13.849 2.864c40.475-26.605 89.448-38.369 137.903-33.124 23.692 2.565 32.195 7.907 35.156 11.938 3.398 4.625 2.334 11.564.178 22.443-1.243 6.273-2.529 12.76-2.484 19.494.091 13.626 3.004 27.178 8.454 39.597l-62.038 58.267c-45.251 13.055-46.243 39.977-47.04 61.685-.537 14.623-1 27.252-12.254 38.506-2.198 2.199-3.249 5.294-2.843 8.376.406 3.083 2.222 5.801 4.915 7.355 7.952 4.591 18.161 6.829 29.188 6.829 15.456 0 32.515-4.398 47.203-12.878 22.479-12.979 35.411-32.679 36.773-55.795l57.365-61.078c12.421 5.451 25.968 8.364 39.597 8.455 6.758.047 13.221-1.241 19.494-2.483 10.881-2.155 17.82-3.219 22.444.178 4.03 2.961 9.373 11.464 11.938 35.156 6.886 63.618-15.082 126.021-60.27 171.208-81.879 81.879-215.105 81.879-296.984 0-70.092-70.09-81.507-180.985-27.142-263.682 3.034-4.615 1.752-10.815-2.863-13.849-4.615-3.035-10.816-1.753-13.849 2.863-28.631 43.552-41.621 96.267-36.578 148.438 5.112 52.886 28.654 102.738 66.29 140.374 43.441 43.441 101.2 67.365 162.635 67.365s119.193-23.924 162.634-67.365c49.492-49.491 73.552-117.833 66.011-187.503-2.763-25.528-9.112-41.136-19.979-49.121-12.052-8.855-25.93-6.105-38.174-3.679-5.538 1.097-10.771 2.144-15.473 2.102-8.498-.057-16.952-1.486-24.97-4.171l143.786-153.094c11.018-11.731 10.923-29.647-.218-40.788zm-262.467 309.149c-15.374 8.876-32.501 11.493-44.984 9.672 7.8-13.57 8.323-27.813 8.763-39.806.725-19.763 1.231-33.205 29.232-42.183l33.719 33.72c-1.761 21.055-17.265 33.132-26.73 38.597zm248.107-282.054-211.432 225.118-26.42-26.42 225.117-211.432c3.809-3.577 9.499-3.673 12.953-.218 3.455 3.455 3.359 9.144-.218 12.952z\" />\r\n            <path d=\"m74.438 136.473c5.523 0 10-4.477 10-10s-4.477-10-10-10h-.007c-5.523 0-9.996 4.477-9.996 10s4.48 10 10.003 10z\" />\r\n        </g>\r\n    </g>\r\n    </svg>\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default ({ isStarred }) => {\r\n    console.log('!$@$#@IS STARRED$%@$%#', isStarred);\r\n    return <svg className={isStarred ? 'star-icon starred' : 'star-icon'} viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\" /></svg>\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport NotePinIcon from '../icons/NotePinIcon'\r\nimport CircleIcon from '../icons/CircleIcon'\r\nimport ColorPalleteIcon from '../icons/ColorPaletteIcon'\r\nimport StarIcon from '../icons/StarIcon'\r\n\r\nexport default ({ room, note, user, toggleStarredNote, changeNoteColor, toggleNotePin, updateMembers, isStarredPage, roomId }) => {\r\n    const [isPalleteOpen, setIsPalleteOpen] = useState(false)\r\n    const [isStarred, setIsStarred] = useState(false)\r\n    const colors = ['#ffa350', '#f78888', '#fff59d', '#90ccf4', '#4caf50']\r\n\r\n    const checkIsStarred = () => {//We can make preformance better by removing from the array every starred we found \r\n        const ans = user.starredNotes.some(starredNote => starredNote.noteId === note._id)\r\n        setIsStarred(ans)\r\n    }\r\n\r\n\r\n    const handleStarClicked = async () => {\r\n        setIsStarred(!isStarred)\r\n        await toggleStarredNote(user._id, roomId, note._id, isStarredPage)\r\n    }\r\n\r\n    const handleColorClicked = async (color) => {\r\n        await changeNoteColor(roomId, note._id, color);\r\n        setIsPalleteOpen(false)\r\n        if (!isStarredPage) updateMembers();\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        checkIsStarred()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"features-container\">\r\n            <i onClick={handleStarClicked}><StarIcon isStarred={isStarred} /></i>\r\n            {!isStarredPage && <i onClick={async () => { await toggleNotePin(roomId, note._id); updateMembers(); }}><NotePinIcon isPinned={note.isPinned} /></i>}\r\n            <div className=\"color-pallete\">\r\n                <i onClick={() => setIsPalleteOpen(!isPalleteOpen)}><ColorPalleteIcon /></i>\r\n\r\n                <TransitionGroup component={null} ><div className=\"colors-container\">{\r\n                    colors.map((color, idx) =>\r\n                        (<CSSTransition\r\n                            key={idx}\r\n                            classNames=\"fade\"\r\n                            in={isPalleteOpen}\r\n                            timeout={{ enter: 300, exit: 300 }}\r\n                            unmountOnExit>\r\n                            <i onClick={() => handleColorClicked(color)}><CircleIcon fill={color} /></i>\r\n                        </CSSTransition>\r\n                        )\r\n                    )\r\n                }\r\n                </div></TransitionGroup>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n// import EmptyStarIcon from '../../assets/svg/empty-star.svg'\r\n\r\n// import NotePinIcon from '../icons/NotePinIcon'\r\n// import CircleIcon from '../icons/CircleIcon'\r\n// import ColorPalleteIcon from '../icons/ColorPaletteIcon'\r\n// import StarIcon from '../icons/StarIcon'\r\n\r\n// export default ({ room, togglePinned, note, user, setNoteColor, toggleStarredNote, changeNoteColor, toggleNotePin, updateMembers, isStarredPage }) => {\r\n//     const [isPalleteOpen, setIsPalleteOpen] = useState(false)\r\n//     const [isStarred, setIsStarred] = useState(false)\r\n//     const colors = ['#ffa350', '#f78888', '#fff59d', '#90ccf4', '#4caf50']\r\n\r\n\r\n//     // const checkIsStarred = (note) => {\r\n//     //     return !user.starredNotes ? setStarSrc(EmptyStarIcon) : user.starredNotes.find(starredNote => { return starredNote._id === note._id ? setStarSrc(StarIcon) : setStarSrc(EmptyStarIcon) })\r\n//     // }\r\n\r\n//     // const checkIsStarred = (note) => {\r\n//     //     return user.starredNotes.some(starredNote => {\r\n//     //         if (starredNote.noteId === 'aezVfVnkgap19GsM4jlPRbKM') console.log('&&&&starred:', starredNote.noteId, 'Note', note._id);\r\n//     //         let ans = starredNote.noteId === note._id\r\n//     //         console.log('&&&&ans:', ans);\r\n//     //         return ans\r\n//     //     })\r\n//     // }\r\n\r\n\r\n//     const checkIsStarred = () => {\r\n//         const ans = user.starredNotes.some(starredNote => starredNote.noteId === note._id)\r\n//         setIsStarred(ans)\r\n//     }\r\n\r\n//     const handleStarClicked = async () => {\r\n//         let roomId = getRoomId();\r\n//         await toggleStarredNote(user._id, roomId, note._id, isStarredPage)\r\n//     }\r\n\r\n//     const handleColorClicked = async (color) => {\r\n//         let roomId = getRoomId();\r\n//         await changeNoteColor(roomId, note._id, color);\r\n//         setIsPalleteOpen(false)\r\n//         if (!isStarredPage) updateMembers();\r\n//     }\r\n\r\n//     const getRoomId = () => {\r\n//         return isStarredPage ? note.roomId : room._id\r\n//     }\r\n\r\n\r\n//     // useEffect(() => {\r\n//     //     checkIsStarred()\r\n//     // }, [])\r\n\r\n\r\n\r\n//     return (\r\n//         <div className=\"features-container\">\r\n//             <h1>{checkIsStarred(note)}</h1>\r\n//             <i onClick={handleStarClicked}><StarIcon isStarred={isStarred} /></i>\r\n//             {!isStarredPage && <i onClick={async () => { await toggleNotePin(room._id, note._id); updateMembers(); }}><NotePinIcon isPinned={note.isPinned} /></i>}\r\n//             <div className=\"color-pallete\">\r\n//                 <i onClick={() => setIsPalleteOpen(!isPalleteOpen)}><ColorPalleteIcon /></i>\r\n\r\n//                 <TransitionGroup component={null} ><div className=\"colors-container\">{\r\n//                     colors.map((color, idx) =>\r\n//                         (<CSSTransition\r\n//                             key={idx}\r\n//                             classNames=\"fade\"\r\n//                             in={isPalleteOpen}\r\n//                             timeout={{ enter: 300, exit: 300 }}\r\n//                             unmountOnExit>\r\n//                             <i onClick={() => handleColorClicked(color)}><CircleIcon fill={color} /></i>\r\n//                         </CSSTransition>\r\n//                         )\r\n//                     )\r\n//                 }\r\n//                 </div></TransitionGroup>\r\n//             </div>\r\n//         </div >\r\n//     )\r\n// }\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <svg className=\"remove-icon\"  viewBox=\"0 0 512 512\"  xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m256 512c-141.160156 0-256-114.839844-256-256s114.839844-256 256-256 256 114.839844 256 256-114.839844 256-256 256zm0-475.429688c-120.992188 0-219.429688 98.4375-219.429688 219.429688s98.4375 219.429688 219.429688 219.429688 219.429688-98.4375 219.429688-219.429688-98.4375-219.429688-219.429688-219.429688zm0 0\" /><path d=\"m347.429688 365.714844c-4.679688 0-9.359376-1.785156-12.929688-5.359375l-182.855469-182.855469c-7.144531-7.144531-7.144531-18.714844 0-25.855469 7.140625-7.140625 18.714844-7.144531 25.855469 0l182.855469 182.855469c7.144531 7.144531 7.144531 18.714844 0 25.855469-3.570313 3.574219-8.246094 5.359375-12.925781 5.359375zm0 0\" /><path d=\"m164.570312 365.714844c-4.679687 0-9.355468-1.785156-12.925781-5.359375-7.144531-7.140625-7.144531-18.714844 0-25.855469l182.855469-182.855469c7.144531-7.144531 18.714844-7.144531 25.855469 0 7.140625 7.140625 7.144531 18.714844 0 25.855469l-182.855469 182.855469c-3.570312 3.574219-8.25 5.359375-12.929688 5.359375zm0 0\" /></svg>)\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"edit-icon\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 477.873 477.873\"  xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M392.533,238.937c-9.426,0-17.067,7.641-17.067,17.067V426.67c0,9.426-7.641,17.067-17.067,17.067H51.2\r\n           c-9.426,0-17.067-7.641-17.067-17.067V85.337c0-9.426,7.641-17.067,17.067-17.067H256c9.426,0,17.067-7.641,17.067-17.067\r\n           S265.426,34.137,256,34.137H51.2C22.923,34.137,0,57.06,0,85.337V426.67c0,28.277,22.923,51.2,51.2,51.2h307.2\r\n           c28.277,0,51.2-22.923,51.2-51.2V256.003C409.6,246.578,401.959,238.937,392.533,238.937z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M458.742,19.142c-12.254-12.256-28.875-19.14-46.206-19.138c-17.341-0.05-33.979,6.846-46.199,19.149L141.534,243.937\r\n           c-1.865,1.879-3.272,4.163-4.113,6.673l-34.133,102.4c-2.979,8.943,1.856,18.607,10.799,21.585\r\n           c1.735,0.578,3.552,0.873,5.38,0.875c1.832-0.003,3.653-0.297,5.393-0.87l102.4-34.133c2.515-0.84,4.8-2.254,6.673-4.13\r\n           l224.802-224.802C484.25,86.023,484.253,44.657,458.742,19.142z M434.603,87.419L212.736,309.286l-66.287,22.135l22.067-66.202\r\n           L390.468,43.353c12.202-12.178,31.967-12.158,44.145,0.044c5.817,5.829,9.095,13.72,9.12,21.955\r\n           C443.754,73.631,440.467,81.575,434.603,87.419z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"save-icon\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m490.647 133.435c-.101-.103-128.128-129.127-128.02-129.019-2.927-2.938-6.813-4.416-10.627-4.416-13.006 0-293.619 0-305 0-16.542 0-30 13.458-30 30v452c0 16.542 13.458 30 30 30h418c16.542 0 30-13.458 30-30v-338c0-3.958-1.564-7.755-4.353-10.565zm-217.647-103.435v66c0 8.284 6.716 15 15 15s15-6.716 15-15v-66h34v115h-162v-115zm192 452h-418v-452h98v130c0 8.284 6.716 15 15 15h192c8.284 0 15-6.716 15-15v-108.587l98 98.766z\" /><path d=\"m96 241c-8.284 0-15 6.716-15 15v176c0 8.284 6.716 15 15 15h320c8.284 0 15-6.716 15-15v-176c0-8.284-6.716-15-15-15zm305 176h-290v-146h290z\" /><path d=\"m160 335h48c8.284 0 15-6.716 15-15s-6.716-15-15-15h-48c-8.284 0-15 6.716-15 15s6.716 15 15 15z\" /></g></svg>\r\n\r\n\r\n}\r\n","import React, { useEffect, useState, createRef, useCallback } from 'react'\r\n\r\nimport Moment from 'react-moment';\r\n\r\nimport NoteText from \"./NoteText\";\r\nimport NoteImg from \"./NoteImg\";\r\nimport NoteVideo from \"./NoteVideo\";\r\nimport NoteTodo from \"./NoteTodo\";\r\nimport NoteLoc from \"./NoteLoc\";\r\nimport Features from \"./Features\";\r\n\r\nimport RemoveIcon from \"../../cmps/icons/RemoveIcon\";\r\nimport EditIcon from \"../../cmps/icons/EditIcon\";\r\nimport SaveIcon from \"../../cmps/icons/SaveIcon\";\r\n\r\nimport AvatarLoader from '../AvatarLoader'\r\n\r\n\r\n\r\nexport default ({ room, note, user, removeNote, saveRoomChanges, togglePinned, toggleStarredNote, changeNoteColor, toggleNotePin, updateNote, updateMembers, isStarredPage, isSpreadView }) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [currTodoIdx, setCurrTodoIdx] = useState(null);\r\n    const [textEdit, setTextEdit] = useState('')\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    const cmps = {\r\n        NoteText,\r\n        NoteImg,\r\n        NoteVideo,\r\n        NoteTodo,\r\n        NoteLoc\r\n    }\r\n\r\n    const NoteType = cmps[note.type];\r\n\r\n    const noteRef = createRef();\r\n\r\n    const setNoteColor = (color) => {//DELETE\r\n        note.bgColor = color;\r\n        saveRoomChanges();\r\n    };\r\n\r\n    const paintNote = () => {//KEEP\r\n        if (note.bgColor && noteRef.current) noteRef.current.style.backgroundColor = note.bgColor\r\n    }\r\n\r\n    const saveNoteEdits = async (type) => {\r\n        let noteCopy = JSON.parse(JSON.stringify(note));\r\n        (type === 'NoteText' && textEdit) ? noteCopy.data = textEdit : setCurrTodoIdx('');\r\n        await updateNote(room._id, noteCopy);\r\n        updateMembers();\r\n    }\r\n\r\n\r\n    const handleRemoveClicked = async () => {\r\n        let roomId = getRoomId()\r\n        await removeNote(roomId, note._id);\r\n        if (!isStarredPage) updateMembers();\r\n    }\r\n\r\n    const getRoomId = () => { //MAYBE SHOULD BE IN PAGE CMP\r\n        return isStarredPage ? note.roomId : room._id\r\n    }\r\n\r\n\r\n    const onLoad = useCallback(() => {\r\n        console.log(\"loaded\");\r\n        setIsLoaded(true);\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (note.createdBy._id !== user._id) return\r\n        if (note.createdBy.imgUrl !== user.imgUrl) {\r\n            note.createdBy.imgUrl = user.imgUrl\r\n            saveRoomChanges()\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        paintNote();\r\n        if (note.createdBy._id !== user._id) return;\r\n        if (note.createdBy.imgUrl !== user.imgUrl) {\r\n            note.createdBy.imgUrl = user.imgUrl;\r\n            saveRoomChanges();\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        paintNote();\r\n    }, [note.bgColor]);\r\n\r\n    return (\r\n        <div className=\"note-preview\" style={{ backgroudColor: note.bgColor }} style={{ display: isSpreadView ? 'inline-block' : 'block' }}>\r\n            <div className={user._id === note.createdBy._id ? 'user-container' : 'friend-container'}>\r\n                {!isSpreadView && <img src={note.createdBy.imgUrl} alt=\"Note creator avatar\" className=\"avatar avatar-s\" onLoad={onLoad} style={{ display: isLoaded ? 'block' : 'none' }} />}\r\n                {(!isSpreadView && !isLoaded) && <AvatarLoader />}\r\n                <div className=\"note-container\" ref={noteRef}>\r\n                    <div className=\"note-header\">\r\n                        {!isStarredPage && <div>\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && !isEdit) && <i onClick={() => setIsEdit(true)}><EditIcon /></i>}\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && isEdit) && <i onClick={() => { setIsEdit(false); saveNoteEdits(note.type) }}><SaveIcon /></i>}\r\n                            <i onClick={handleRemoveClicked}><RemoveIcon /></i>\r\n                        </div>}\r\n                        <Moment format=\"MM/DD/YY ,HH:mm\">{note.createdAt}</Moment>\r\n                    </div>\r\n                    <NoteType note={note} user={user} isEdit={isEdit} currTodoIdx={currTodoIdx} setCurrTodoIdx={setCurrTodoIdx} textEdit={textEdit} setTextEdit={setTextEdit} updateNote={updateNote} updateMembers={updateMembers} />\r\n                    <Features room={room} togglePinned={togglePinned} note={note} user={user} changeNoteColor={changeNoteColor} toggleNotePin={toggleNotePin} setNoteColor={setNoteColor} toggleStarredNote={toggleStarredNote} updateMembers={updateMembers} isStarredPage={isStarredPage} roomId={getRoomId()} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default (props) => {\r\n\r\n    return<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t viewBox=\"0 0 512 512\" className='spread-icon' xmlSpace=\"preserve\">\r\n<g>\r\n\t<g>\r\n\t\t<path d=\"M452,50H60C26.916,50,0,76.916,0,110v292c0,33.084,26.916,60,60,60h392c33.084,0,60-26.916,60-60V110\r\n\t\t\tC512,76.916,485.084,50,452,50z M156,422H60c-11.028,0-20-8.972-20-20v-62h116V422z M156,300H40v-88h116V300z M156,172H40v-62\r\n\t\t\tc0-11.028,8.972-20,20-20h96V172z M317,422H196v-82h121V422z M317,300H196v-88h121V300z M317,172H196V90h121V172z M472,402\r\n\t\t\tc0,11.028-8.972,20-20,20h-95v-82h115V402z M472,300H357v-88h115V300z M472,172H357V90h95c11.028,0,20,8.972,20,20V172z\"/>\r\n\t</g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n\r\n\r\n\r\n\r\n}","import React from 'react';\r\n\r\nexport default (props) => {\r\n\r\n    return <svg version=\"1.1\" className=\"list-icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 427.1 427.1\" xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M93.55,156.5c-31.5,0-57,25.5-57,57s25.5,57,57,57s57-25.5,57-57C150.45,182.1,124.95,156.6,93.55,156.5z M93.55,250.5\r\n           c-20.4,0-37-16.5-37-37c0-20.4,16.5-37,37-37c20.4,0,37,16.5,37,37C130.45,233.9,113.95,250.4,93.55,250.5z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M380.55,172.5h-203.5c-5.5,0-10,4.5-10,10s4.5,10,10,10h203.5c5.5,0,10-4.5,10-10S386.05,172.5,380.55,172.5z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M286.65,234.5h-109.6c-5.5,0-10,4.5-10,10s4.4,10,10,10h109.6c5.5,0,10-4.5,10-10S292.15,234.5,286.65,234.5z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M93.55,0c-31.5,0-57,25.5-57,57s25.5,57,57,57s57-25.5,57-57C150.45,25.5,124.95,0,93.55,0z M93.55,93.9\r\n           c-20.4,0-37-16.5-37-37s16.5-37,37-37c20.4,0,37,16.5,37,37C130.45,77.4,113.95,93.9,93.55,93.9z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M380.55,15.5h-203.5c-5.5,0-10,4.5-10,10s4.5,10,10,10h203.5c5.5,0,10-4.5,10-10S386.05,15.5,380.55,15.5z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M286.65,78.5h-109.6c-5.5,0-10,4.5-10,10s4.4,10,10,10h109.6c5.5,0,10-4.5,10-10S292.15,78.5,286.65,78.5z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M93.55,313.1c-31.5,0-57,25.5-57,57s25.5,57,57,57s57-25.5,57-57C150.45,338.6,124.95,313.1,93.55,313.1z M93.55,407\r\n           c-20.4,0-37-16.5-37-37c0-20.4,16.5-37,37-37c20.4,0,37,16.5,37,37C130.45,390.5,113.95,407,93.55,407z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M380.55,328.5h-203.5c-5.5,0-10,4.5-10,10s4.5,10,10,10h203.5c5.5,0,10-4.5,10-10S386.05,328.5,380.55,328.5z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M286.65,391.5h-109.6c-5.5,0-10,4.5-10,10s4.5,10,10,10h109.6c5.5,0,10-4.5,10-10S292.15,391.5,286.65,391.5z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n\r\n\r\n}","import React, { useState } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport NotePreview from './NotePreview'\r\nimport SpreadIcon from '../icons/SpreadIcon'\r\nimport ListIcon from '../icons/ListIcon'\r\n\r\nexport default ({ room, notes, user, removeNote, saveRoomChanges, togglePinned, setNoteType, toggleStarredNote, changeNoteColor, toggleNotePin, updateNote, updateMembers, isStarredPage }) => {\r\n    const [isSpreadView, setIsSpreadView] = useState(false)\r\n\r\n    const toggleView = () => {\r\n        setIsSpreadView(!isSpreadView)\r\n    }\r\n\r\n    return (\r\n        <div className=\"note-list\">\r\n            <i onClick={toggleView}>{isSpreadView ? <ListIcon /> : <SpreadIcon />}</i>\r\n            <div className={isSpreadView ? 'spread-view' : 'chat-view'}>\r\n                {/* <div className=\"note-list\" onClick={() => setNoteType('')}> */}\r\n                <TransitionGroup component={null}>\r\n                    {notes.map((note) =>\r\n                        <CSSTransition\r\n                            key={note._id}\r\n                            timeout={{ enter: 800, exit: 500 }}\r\n                            classNames={'note-item'}\r\n                        >\r\n                            <NotePreview\r\n                                room={room}\r\n                                note={note}\r\n                                key={note._id}\r\n                                user={user}\r\n                                saveRoomChanges={saveRoomChanges}\r\n                                togglePinned={togglePinned}\r\n                                removeNote={removeNote}\r\n                                toggleNotePin={toggleNotePin}\r\n                                changeNoteColor={changeNoteColor}\r\n                                updateNote={updateNote}\r\n                                updateMembers={updateMembers}\r\n                                toggleStarredNote={toggleStarredNote}\r\n                                isStarredPage={isStarredPage}\r\n                                isSpreadView={isSpreadView} />\r\n                        </CSSTransition>)}\r\n                </TransitionGroup>\r\n            </div>\r\n        </ div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport { loadRoomById, saveRoom, resetCurrRoom, setFilterBy, resetFilterBy } from '../../actions/RoomActions';\r\nimport { toggleStarredNote, removeNote, changeNoteColor, toggleNotePin, updateNote } from '../../actions/NoteActions'\r\n\r\nimport NoteFilter from './NoteFilter'\r\nimport NoteList from './NoteList'\r\n\r\n\r\n\r\nconst NotesContainer = ({ room, user, setNoteType, removeNote, saveRoom, changeNoteColor, toggleNotePin, updateNote, toggleStarredNote, filterBy, setFilterBy, resetFilterBy }) => {\r\n\r\n    if (room) var { notes } = room\r\n\r\n    const saveRoomChanges = async () => {\r\n        await saveRoom(room)\r\n        SocketService.emit(\"roomUpdated\", { room, userId: user._id });\r\n    }\r\n\r\n    const updateMembers = () => {//this needs to move to room page \r\n        if (room.members.length > 1) SocketService.emit(\"roomUpdated\", { room, userId: user._id });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => resetFilterBy()\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"notes-container \">\r\n            <NoteFilter\r\n                filterBy={filterBy}\r\n                setFilterBy={setFilterBy}\r\n                // onFilter={onFilterHandler}\r\n                roomId={room._id}\r\n                placeHolder={\"Search for notes\"} />\r\n\r\n\r\n            <NoteList\r\n                room={room}\r\n                notes={notes}\r\n                user={user}\r\n                removeNote={removeNote}\r\n                changeNoteColor={changeNoteColor}\r\n                toggleNotePin={toggleNotePin}\r\n                saveRoomChanges={saveRoomChanges}\r\n                setNoteType={setNoteType}\r\n                updateNote={updateNote}\r\n                updateMembers={updateMembers}\r\n                toggleStarredNote={toggleStarredNote}\r\n            // togglePinned={togglePinned}\r\n            // setNoteType={setNoteType}\r\n            // toggleStarred={toggleStarred}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleNotePin,\r\n    changeNoteColor,\r\n    removeNote,\r\n    saveRoom,\r\n    loadRoomById,\r\n    resetCurrRoom,\r\n    updateNote,\r\n    toggleStarredNote,\r\n    setFilterBy,\r\n    resetFilterBy\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesContainer);\r\n","import loading from \"../assets/svg/loading.svg\";\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst Loading = () => {\r\n    return <div>\r\n         <img src={loading} alt=\"loading\" className=\"loading\"/>\r\n    </div>;\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport SaveIcon from '../icons/SaveIcon'\r\n\r\nexport default ({ setNoteData, setNoteHeader, handleSubmit }) => {\r\n\r\n\r\n    return (\r\n        <form className=\"input-text\" onSubmit={handleSubmit}>\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input className=\"input-data\" placeholder=\"Say Something\" type=\"text\" onChange={e => setNoteData(e.target.value)} />\r\n            <button><SaveIcon/></button>\r\n        </form>\r\n    )\r\n}\r\n//save button is a temp solution to onSubmit with enter key","import React, { createRef } from 'react';\r\n\r\nimport uploadImg from '../../assets/svg/upload.svg'\r\n\r\nexport default ({ setNoteHeader, onUploadImg }) => {\r\n\r\n    const inputRef = createRef();\r\n\r\n\r\n    const onUploadImgHandler = () => {\r\n        inputRef.current.click()\r\n        // setNoteType('NoteImg');\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-img\">\r\n            <input className=\"input-header\" placeholder=\"Img Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input type=\"file\" onChange={(ev) => { onUploadImg(ev); }} ref={inputRef} hidden />\r\n            <img src={uploadImg} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { onUploadImgHandler() }} />\r\n        </section >\r\n    );\r\n};\r\n\r\n","import axios from 'axios';\r\n//AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM RAN'S KEY\r\n//AIzaSyD09tfK-pjT-G6kEZmXRfeicoKR-neGKNU alt key\r\nconst API_KEY = 'AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM' \r\nconst limit = 15;\r\n\r\n\r\nexport const YoutubeApiService = {\r\n    youtubeQuery\r\n}\r\n\r\n\r\nasync function youtubeQuery(query) {\r\n    try {\r\n        const res = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&videoEmbeddable=true&type=video&key=${API_KEY}&q=${query}&maxResults=${limit}`);\r\n        return res.data.items;\r\n    } catch (err) {\r\n        console.log('Error while fetching videos',err); \r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { YoutubeApiService } from '../../services/YoutubeApiService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\n\r\nexport default ({ addVideo, setNoteHeader }) => {\r\n    const [videos, setVideos] = useState([]);\r\n    const searchYoutubeVideos = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setVideos([])\r\n            return\r\n        }\r\n        const youtubeVideos = await YoutubeApiService.youtubeQuery(queryStr);\r\n        setVideos(youtubeVideos)\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-video\">\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n            className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Video\"\r\n                onChange={e => searchYoutubeVideos(e.target.value)}\r\n            />\r\n            {!!videos.length &&<h1>Add video!</h1>}\r\n            {!!videos.length && videos.map(video => {\r\n                return (\r\n                    <div className=\"video-card\" key={video.id.videoId}>\r\n                        <img src={video.snippet.thumbnails.default.url} alt=\"Video Thumbnail\" />\r\n                        <h6>{video.snippet.title}</h6>\r\n                        <img src={PlusIcon} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { addVideo(video.id.videoId); setVideos([]) }} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </section >\r\n    );\r\n};","import React, { useState } from 'react'\r\n\r\nimport { UtilService } from '../../services/UtilService'\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport saveIcon from '../../assets/svg/save.svg'\r\n\r\n\r\nexport default ({ setNoteHeader, setNoteData, handleSubmit, noteData }) => {\r\n    const [currTodo, setCurrTodo] = useState('');\r\n\r\n    const textInput = React.useRef();\r\n\r\n    const addTodo = () => {\r\n        setNoteData([\r\n            ...noteData, {\r\n                text: currTodo,\r\n                isDone: false,\r\n                _id: UtilService.makeId(5)\r\n            }])\r\n        setCurrTodo('')\r\n        textInput.current.value = ''\r\n        textInput.current.focus()\r\n    };\r\n\r\n    const handleRemoveTodo = (todoId) => {\r\n        setNoteData(noteData.filter(todo => todo._id !== todoId))\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-todo\">\r\n            <input type=\"text\" placeholder=\"Header?\" className=\"input-header\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <ul>\r\n                {!noteData.length && <h5>No Todo's Added</h5>}\r\n                {!!noteData.length && noteData.map(todo => {\r\n                    return (\r\n                        <li className=\"todo\" key={todo._id}>\r\n                            <span>{todo.text}</span>\r\n                            <img src={xMark} onClick={() => handleRemoveTodo(todo._id)} className=\"x-mark\" alt=\"Remove Todo\" />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <div className=\"add-todo-container\">\r\n                <input type=\"text\" placeholder=\"task?\" className=\"input-task\" ref={textInput} onChange={e => setCurrTodo(e.target.value)} />\r\n                <img src={PlusIcon} className=\"add-button\" onClick={() => addTodo()} alt=\"Add todo\" />\r\n            </div>\r\n            <img src={saveIcon} className=\"add-button\" onClick={handleSubmit} alt=\"Save\" />\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n// const GAPI_KEY = 'AIzaSyDT_ajKa9WIv5XuaigihgiGJKXyRAXIV7o';\r\nconst GAPI_KEY = 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA';\r\n// const GAPI_KEY = 'AIzaSyAfOgP37XV4mv6RcyxIwOk1ajVevIhN2TM'; \r\n\r\nexport const MapService = {\r\n    searchLocs,\r\n    searchAddress, \r\n    getPosition,\r\n    GAPI_KEY\r\n}\r\n\r\n\r\nasync function searchLocs(txt) {\r\n\r\n    const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${txt.split(\" \").join('+')}&key=${GAPI_KEY}&language=en&region=US`)\r\n    try {\r\n        return res.data.results\r\n        // var position=res.data.results[0].geometry.location ;\r\n        // const address_components_Length =res.data.results[0].address_components.length;   \r\n        // var results=res.data.results[0].address_components;\r\n\r\n\r\n        // for (var i=0;i<address_components_Length;i++){\r\n        //     for (var j=0;j<results[i].types.length;j++){\r\n        //         if(results[i].types[j]==='country'){\r\n        //             var country=results[i].long_name;\r\n        //             var short_country =results[i].short_name; //short name country          \r\n        //         }   \r\n        //         if(results[i].types[j]==='locality'){\r\n        //             var city=results[i].long_name;\r\n        //             // var shortCity =results[i].short_name; //short name city   \r\n        //         }   \r\n\r\n        //         if(results[i].types[j]==='administrative_area_level_1')\r\n        //         {\r\n        //             var region=results[i].long_name;                    \r\n        //         }   \r\n\r\n        //     }\r\n        // }        \r\n        // position.country=country;\r\n        // position.short_country=short_country;\r\n        // // position.city=city;\r\n        // position.region=region;\r\n        //  return position    \r\n\r\n    }\r\n    catch (error) {\r\n        console.error('Address not found');\r\n    }\r\n}\r\n\r\nasync function searchAddress(coords) {\r\n\r\n    const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coords.lat},${coords.lng}&key=${GAPI_KEY}&language=en&region=US`)\r\n    try {\r\n        return res.data.results\r\n    }\r\n    catch (error) {\r\n        console.error('Address not found');\r\n    }\r\n}\r\n\r\n\r\n// FOR USER\r\nfunction getPosition() {\r\n    return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject)\r\n    })\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"gps-icon\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n    viewBox=\"0 0 384 384\"  xmlSpace=\"preserve\">\r\n<g>\r\n   <g>\r\n       <path d=\"M192,136c-30.872,0-56,25.12-56,56s25.128,56,56,56s56-25.12,56-56S222.872,136,192,136z M192,216\r\n           c-13.232,0-24-10.768-24-24s10.768-24,24-24s24,10.768,24,24S205.232,216,192,216z\"/>\r\n   </g>\r\n</g>\r\n<g>\r\n   <g>\r\n       <path d=\"M368,176h-32.944C327.648,109.368,274.632,56.352,208,48.944V16c0-8.832-7.168-16-16-16c-8.832,0-16,7.168-16,16v32.944\r\n           C109.368,56.352,56.352,109.368,48.944,176H16c-8.832,0-16,7.168-16,16c0,8.832,7.168,16,16,16h32.944\r\n           C56.352,274.632,109.368,327.648,176,335.056V368c0,8.832,7.168,16,16,16c8.832,0,16-7.168,16-16v-32.944\r\n           c66.632-7.408,119.648-60.424,127.056-127.056H368c8.832,0,16-7.168,16-16C384,183.168,376.832,176,368,176z M192,304\r\n           c-61.76,0-112-50.24-112-112S130.24,80,192,80s112,50.24,112,112S253.76,304,192,304z\"/>\r\n   </g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n\r\n\r\n\r\n}\r\n","import React, { useState, useEffect, createRef } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { MapService } from '../../services/MapService'\r\n\r\nimport PinIcon from '../../assets/svg/pin.svg'\r\nimport SaveIcon from '../icons/SaveIcon'\r\nimport GpsIcon from '../icons/GpsIcon'\r\n\r\nexport default ({ setNoteHeader, setNoteData, noteData, handleSubmit }) => {\r\n\r\n    const [locs, setLocs] = useState([]);\r\n    const [selectedLoc, setSelectedLoc] = useState(null)\r\n    const addressInputRef = createRef();\r\n\r\n    const searchLoc = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setLocs([])\r\n            return\r\n        }\r\n        let locations = await MapService.searchLocs(queryStr)\r\n        setLocs(locations)\r\n    }\r\n\r\n    const renderMarkers = (map, maps) => {\r\n        let marker = new maps.Marker({\r\n        position: { lat: selectedLoc.lat, lng: selectedLoc.lng},\r\n        map,\r\n        icon:PinIcon\r\n        });\r\n        return marker;\r\n       };\r\n\r\n\r\n    const setLocNote = (loc) => {\r\n        let dataObj = { name: loc.formatted_address, coords: loc.geometry.location }\r\n        setSelectedLoc(dataObj.coords)\r\n        setNoteData(dataObj)\r\n    }\r\n\r\n    const fetchUserCoords = async () => {\r\n        let userPos = await MapService.getPosition()\r\n        if (!userPos) return\r\n        let coords = { lat: userPos.coords.latitude, lng: userPos.coords.longitude }\r\n        setSelectedLoc(coords)\r\n        let res = await MapService.searchAddress(coords)\r\n        if (res) {\r\n            let accurateAddressIdx = res[1] ? 1 : 0\r\n            let address = res[accurateAddressIdx].address_components[accurateAddressIdx].short_name\r\n            let dataObj = { coords: res[accurateAddressIdx].geometry.location }\r\n            if (address) dataObj.name = address\r\n            setNoteData(dataObj)\r\n        }\r\n\r\n    }\r\n\r\n    const saveNoteLoc = () => {\r\n        handleSubmit()\r\n        setSelectedLoc(null)\r\n        addressInputRef.current.value = ''\r\n    }\r\n    useEffect(() => {\r\n        fetchUserCoords()\r\n    }, [selectedLoc])\r\n\r\n\r\n    return (\r\n        <div className=\"input-loc\" >\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n                className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Location\"\r\n                ref={addressInputRef}\r\n                onChange={e => searchLoc(e.target.value)}\r\n            />\r\n            <i onClick={() => fetchUserCoords()}><GpsIcon /></i>\r\n            {!!locs.length && locs.map(loc => {\r\n                return (\r\n                    <div className=\"loc-card\" key={loc.place_id}>\r\n                        <h6 onClick={() => { setLocNote(loc) }}>{loc.formatted_address}</h6>\r\n                    </div>\r\n                )\r\n            })}\r\n            {/* {noteData.name && <h6>{noteData.name}</h6>} */}\r\n            {selectedLoc && <div style={{ height: '30vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA' }}\r\n                    center={selectedLoc}\r\n                    distanceToMouse={() => { }}\r\n                    yesIWantToUseGoogleMapApiInternals={true}\r\n                    defaultZoom={18}\r\n                    onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n\r\n                    >\r\n                </GoogleMapReact>\r\n            </div>}\r\n            {noteData && <i onClick={() => saveNoteLoc()}><SaveIcon /></i>}\r\n            <button onClick={() => console.log('noteData:', noteData)}>Test</button>\r\n        </div>\r\n    )\r\n}\r\n","function uploadImg(ev) {\r\n    const CLOUD_NAME = \"tamir\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n        if (ev.target) {\r\n            formData.append('file', ev.target.files[0])\r\n        } else {\r\n            formData.append('file', ev)\r\n        }\r\n    formData.append('upload_preset', 'u1inrfbp'); // second parameter is the upload preset\r\n\r\n    return fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData,\r\n            secure:true\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport default {\r\n    uploadImg\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadRoomById, saveRoom, resetCurrRoom } from '../actions/RoomActions';\r\nimport { addNote } from '../actions/NoteActions';\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport ButtonMenu from '../cmps/ButtonMenu'\r\nimport NotesContainer from '../cmps/Note/NotesContainer';\r\nimport Loading from '../cmps/Loading'\r\nimport InputText from '../cmps/Note/InputText'\r\nimport InputImg from '../cmps/Note/InputImg'\r\nimport InputVideo from '../cmps/Note/InputVideo'\r\nimport InputTodo from '../cmps/Note/InputTodo'\r\nimport InputLoc from '../cmps/Note/InputLoc'\r\n\r\nimport { RoomService } from '../services/RoomService';\r\nimport SocketService from '../services/SocketService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\n\r\nconst RoomPage = (props) => {\r\n    const [noteType, setNoteType] = useState('');\r\n    const [noteHeader, setNoteHeader] = useState('');\r\n    const [noteData, setNoteData] = useState('');\r\n    const [noteInputType, setNoteInputType] = useState('InputText');\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [isValidUser, setIsValidUser] = useState(null)\r\n\r\n    if (props.room) var { notes } = props.room\r\n\r\n    const newNote = {\r\n        header: noteHeader,\r\n        data: noteData,\r\n        type: noteType,\r\n        isPinned: false\r\n    }\r\n\r\n    const cmps = {\r\n        InputText,\r\n        InputImg,\r\n        InputVideo,\r\n        InputTodo,\r\n        InputLoc\r\n    }\r\n    const InputType = cmps[noteInputType];\r\n\r\n    const loadRoom = async () => {\r\n        const roomId = props.room ? props.room._id : props.match.params.id;\r\n        if (props.room) {\r\n            await props.loadRoomById({ ...props.filterBy, roomId })\r\n            // FIX IS VAILD USER\r\n            // checkIsValidUser()\r\n            return\r\n        }\r\n        await props.loadRoomById({ ...props.filterBy, roomId })\r\n    }\r\n\r\n\r\n    const onUploadImg = async (ev) => {\r\n        if (noteType === 'NoteImg') {\r\n            const imgUrl = await CloudinaryService.uploadImg(ev)\r\n            setNoteData(imgUrl.secure_url)\r\n            setIsUploading(true)\r\n        }\r\n    }\r\n\r\n    const onAddVideo = (videoId) => {\r\n        setNoteData(videoId)\r\n        setIsUploading(true)\r\n    }\r\n\r\n\r\n    const onHandleSubmit = async (ev) => {\r\n        if (ev) ev.preventDefault()\r\n        const { user, room } = props\r\n        let noteCopy = JSON.parse(JSON.stringify(newNote))\r\n        await props.addNote(user._id, room._id, noteCopy)\r\n        const friend = user.friends.find(currFriend => currFriend.roomId === room._id)\r\n        SocketService.emit(\"added note\", ({ room, user, friendId: friend._id }));\r\n        // props.showNotification('Note added successfully! So Excited', 'success')\r\n        //Need to find way to transfer that prop on desktop\r\n        setNoteHeader('')\r\n        setNoteData('')\r\n        setNoteType('')\r\n        setIsUploading(false)\r\n    }\r\n\r\n\r\n\r\n\r\n    const checkIsValidUser = async () => { //FIX\r\n        const { user, room } = props\r\n        if (!user || !room) return\r\n        let isValid = await RoomService.checkIsValidUser(user._id, room._id)\r\n        isValid ? setIsValidUser(true) : props.history.push('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadRoom()//created\r\n        console.log(props.user);\r\n        return () => { props.resetCurrRoom() }; //onDestroy\r\n    }, []);\r\n\r\n    // //watcher\r\n    // useEffect(() => { \r\n    // FIX IS VAILD USER\r\n    //     if (props.room) checkIsValidUser()\r\n    // }, [props.room]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if ((noteData && noteType === 'NoteImg') ||\r\n            noteType === 'NoteVideo') {\r\n            onHandleSubmit()\r\n        }\r\n    }, [isUploading]);\r\n\r\n    useEffect(() => {\r\n        loadRoom()\r\n    }, [props.filterBy]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"room-page\">\r\n            {/* {(isValidUser && notes) ? <div className=\"note-add\"> FIX IS VAILD USER*/}\r\n            {notes ? <div className=\"note-add\">\r\n                {noteType && <InputType\r\n                    isMarkerShown={true}\r\n                    onUploadImg={onUploadImg}\r\n                    addVideo={onAddVideo}\r\n                    handleSubmit={onHandleSubmit}\r\n                    setNoteHeader={setNoteHeader}\r\n                    setNoteData={setNoteData}\r\n                    noteData={noteData}\r\n                />}\r\n                <ButtonMenu setNoteType={setNoteType} setNoteInputType={setNoteInputType} setNoteData={setNoteData} />\r\n            </div> : <Loading />}\r\n            {/* {(isValidUser && notes) && <div> FIX IS VAILD USER */}\r\n            {(notes && props.user) && <div>\r\n                {\r\n                    <NotesContainer room={props.room} user={props.user} setNoteType={setNoteType} filterBy={props.filterBy} />\r\n                }\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n        filterBy: state.room.filterBy,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadRoomById,\r\n    saveRoom,\r\n    resetCurrRoom,\r\n    updateUser,\r\n    addNote\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomPage);\r\n\r\n\r\n","import React, {useCallback, useState} from 'react';\r\nimport avatarImg from '../../assets/png/user.png'\r\nimport Loading from \"../Loading\";\r\n\r\nimport AvatarLoader from \"../AvatarLoader\";\r\n\r\n\r\nexport const AvatarEdit = (props) => {\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n    const onLoad = useCallback(() => {\r\n    console.log('loaded');\r\n    setIsLoaded(true);\r\n    }, [])\r\n\r\n  // var [{imgUrl}] = useState(props)\r\n  const { imgUrl, isLoading } = props\r\n  \r\n  return <div className=\"avatar-edit\">\r\n    <label>\r\n      <input type=\"file\" onChange={(ev) => props.onUploadImg(ev)} hidden />\r\n      {isLoading ? <Loading /> : <img src={imgUrl ? imgUrl : avatarImg} alt=\"\" className=\"avatar avatar-m\" onLoad={onLoad} style={{display: isLoaded? 'block': 'none'}} />}\r\n      {!isLoaded && <AvatarLoader isHome={true}/>}\r\n\r\n    </label>\r\n  </div>;\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUser, updateUser } from '../actions/UserActions';\r\n\r\n\r\nimport ContactPage from '../pages/ContactPage'\r\nimport RoomPage from '../pages/RoomPage'\r\nimport { loadContacts } from '../actions/ContactActions';\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\nimport ContactList from '../cmps/ContactList'\r\nimport Filter from '../cmps/Filter'\r\n\r\nimport SocketService from '../services/SocketService'\r\nimport { UserService } from '../services/UserService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\nconst HomePage = (props) => {\r\n  const [filterBy, setFilterBy] = useState({ term: '' })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isHome, setIsHome] = useState(true)\r\n\r\n\r\n  const { user, contacts,room,getUpdatedUser } = props;\r\n\r\n\r\n  const loadContacts = async () => {\r\n    await props.loadContacts(filterBy);\r\n  };\r\n\r\n  const onUploadImg = async (ev) => {\r\n    setIsLoading(true)\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n    props.updateUser(updatedUser)\r\n    UserService.updateImgAtContacts(user._id, userImgUrl.secure_url)\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const onAddFriend = (friendId) => {\r\n    const { userName, fullName, _id, imgUrl } = user\r\n    let userId = _id\r\n    let notification = {\r\n      userName,\r\n      fullName,\r\n      type: 'NotificationFriend',\r\n      imgUrl\r\n    }\r\n    SocketService.emit('Add Friend', { notification, userId, friendId })\r\n  }\r\n\r\n\r\n\r\n  const onMoveToRoom = (ev, contact) => {\r\n    const roomId = UserService.getRoomIdFromContact(user,contact).roomId\r\n    console.log('roomId', roomId);\r\n\r\n    ev.stopPropagation()\r\n    props.history.push(`/room/${roomId}`);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    props.getUser()\r\n    if (!props.user) props.history.push(\"/signup\")\r\n    loadContacts()\r\n    return () =>{\r\n      setIsHome(false)\r\n    }\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    loadContacts()\r\n  }, [filterBy])\r\n\r\n\r\n  return (\r\n    <div>\r\n        {user &&\r\n          <div className=\"home-page\">\r\n            <div className=\"mobile\">\r\n            {user.userName && <h2>Hi There <span className=\"user-name\">{user.userName}</span></h2>}\r\n            <AvatarEdit imgUrl={user.imgUrl} onUploadImg={onUploadImg} isLoading={isLoading} />\r\n            <h6>Let's add contacts veze</h6>\r\n            <Filter filterBy={filterBy} setFilterBy={setFilterBy} />\r\n            {contacts && <ContactList onMoveToRoom={onMoveToRoom} contacts={contacts} onAddFriend={onAddFriend} loggedinUser={user} isHome={isHome} />}\r\n            </div>\r\n        <div className=\"desktop\">\r\n          <section className=\"contact-page-desktop\">\r\n        <ContactPage/>\r\n          </section>\r\n        {room && <section className=\"room-page-desktop\">\r\n        <RoomPage history={props.history}/>\r\n        </section>}\r\n        </div>\r\n        </div>\r\n      }\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room:state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  updateUser,\r\n  loadContacts,\r\n  \r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n// import React, { Component } from 'react'\r\n// import { connect } from 'react-redux';\r\n// import Avatar from 'react-avatar';\r\n\r\n// import { getUser,updateUser } from '../actions/UserActions';\r\n// import { loadContacts } from '../actions/ContactActions';\r\n\r\n// import { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n// import ContactList from '../cmps/ContactList'\r\n// import Filter from '../cmps/Filter'\r\n\r\n// import SocketService from '../services/SocketService'\r\n// import {UserService} from '../services/UserService'\r\n// import CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\n// class HomePage extends Component {\r\n//   state = {\r\n//     filterBy: { term: '' },\r\n//     isLoading: false\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.props.getUser()\r\n//     if (!this.props.user) this.props.history.push(\"/signup\")\r\n//     this.loadContacts()\r\n//   }\r\n\r\n//   loadContacts = async () => {\r\n//     await this.props.loadContacts(this.state.filterBy);\r\n//   };\r\n\r\n//   onUploadImg = async (ev) => {\r\n//     let user = this.props.user\r\n//     this.setState({ isLoading: true })\r\n//     let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n//     const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n//     this.props.updateUser(updatedUser)\r\n//     UserService.updateImgAtContacts(user._id, userImgUrl.secure_url)\r\n//     this.setState({ isLoading: false })\r\n//   }\r\n\r\n//   onAddFriend = (friendId) => {\r\n//     const { userName, fullName, _id, imgUrl } = this.props.user\r\n//     let userId = _id\r\n//     let notification = {\r\n//       userName,\r\n//       fullName,\r\n//       type: 'NotificationFriend',\r\n//       imgUrl\r\n//     }\r\n//     SocketService.emit('Add Friend', { notification, userId, friendId })\r\n//   }\r\n\r\n//   onFilterHandler = (filterBy) => {\r\n//     this.setState((prevState) => {\r\n//       return {\r\n//         filterBy: {\r\n//           ...prevState.filterBy,\r\n//           ...filterBy,\r\n//         },\r\n//       };\r\n//     }, this.loadContacts);\r\n\r\n//   };\r\n\r\n//   onMoveToRoom = (ev, roomId) => {\r\n//     console.log(ev);\r\n//     ev.stopPropagation()\r\n//     this.props.history.push(`/board/${roomId}`);\r\n//   }\r\n\r\n//   capitalize = (name) => {\r\n//     return name.charAt(0).toUpperCase() + name.slice(1);\r\n//   };\r\n\r\n\r\n\r\n//   render() {\r\n//     const { user, contacts } = this.props;\r\n//     const { isLoading } = this.state\r\n\r\n//     return (\r\n//       <div>\r\n//         {user &&\r\n//           <div className=\"home-page\">\r\n//             {user.userName && <h2>Hi There {this.capitalize(user.userName)}</h2>}\r\n//             <AvatarEdit imgUrl={user.imgUrl} onUploadImg={this.onUploadImg} isLoading={isLoading} />\r\n//             <h6>Let's add contacts veze</h6>\r\n//             <Filter filterBy={this.state.filterBy} onFilter={this.onFilterHandler} />\r\n//             {contacts && <ContactList onMoveToRoom={this.onMoveToRoom} contacts={contacts} onAddFriend={this.onAddFriend} loggedinUser={user} />}\r\n//           </div>\r\n//         }\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     user: state.user.loggedinUser,\r\n//     contacts: state.contact.contacts,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   getUser,\r\n//   updateUser,\r\n//   loadContacts,\r\n\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ notification,onApprove,onDecline }) => {    \r\n    return (\r\n        <div className=\"notification-friend\">\r\n            <p>{notification.fullName} wants to start a board with you</p>\r\n            <button onClick={()=>onApprove(notification)}>Approve</button>\r\n            <button onClick={()=>onDecline(notification)}>Decline</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ notification }) => {\r\n    return (\r\n        <div className=\"notification-response\">\r\n            <p>{notification.fullName} has {notification.isApproved ? 'Approved' : 'Declined'} your request</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default ({ notification, onDeleteNotification }) => {\r\n\r\n    const {userName, roomId} = notification\r\n\r\n    return (\r\n        <Link to={`/room/${roomId}`} >\r\n        <div className=\"notification-note\" onClick={onDeleteNotification}>\r\n            <p>{userName} just Added A note! go check it out</p>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ notification }) => {\r\n    return (\r\n        <div className=\"notification-starred-note\">\r\n            <p>\r\n                \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationFriend from './NotificationFriend'\r\nimport NotificationResponse from './NotificationResponse'\r\nimport NotificationNote from './NotificationNote'\r\nimport NotificationStarredNote from './NotificationStarredNote'\r\nimport Moment from 'react-moment';\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\n\r\n\r\n\r\nexport default ({ notification,onApprove, onDecline, onDeleteNotification }) => {\r\n    const cmps = {\r\n        NotificationFriend,\r\n        NotificationResponse,\r\n        NotificationNote,\r\n        NotificationStarredNote\r\n    }\r\n  \r\n\r\n    const NotificationType = cmps[notification.type];\r\n    return (\r\n        <div className=\"notification-preview\">\r\n            <div className=\"notification-header\">\r\n                <img src={notification.imgUrl} className=\"avatar avatar-xs\" alt=\"User Avatar\"/>\r\n                <div>\r\n            <NotificationType notification={notification} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}/>\r\n            <Moment fromNow>{notification.createdAt}</Moment>\r\n                </div>\r\n            <img src={xMark} onClick={()=> onDeleteNotification(notification)} className=\"x-mark\" alt=\"Close\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationPreview from './NotificationPreview'\r\n\r\nexport default ({notifications, onApprove, onDecline,onDeleteNotification}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"notification-list\">\r\n            {notifications.map(notification => {\r\n                return (\r\n                    <NotificationPreview notification={notification} key={notification._id} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}  />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport SocketService from '../services/SocketService'\r\n\r\n\r\nimport NotificationList from '../cmps/Notification/NotificationList';\r\n\r\nconst InboxPage = (props) => {\r\n\r\n  const { user } = props\r\n\r\n  const onApprove = (notification) => {\r\n\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"approve\", { notification, user });\r\n\r\n  }\r\n  const onDecline = (notification) => {\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"decline\", { notification, user });\r\n  }\r\n\r\n  const onDeleteNotification = (notification) => {\r\n    const idx = user.notifications.findIndex(\r\n      currNotification => currNotification._id === notification._id\r\n    );\r\n    user.notifications.splice(idx, 1);\r\n    props.updateUser(user)\r\n  }\r\n\r\n  const handleForbiddenUser = () => {\r\n    if(props.match.params.id !== user._id) props.history.push('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleForbiddenUser()\r\n  }, [])\r\n  \r\n\r\n  return (\r\n    (!user) ? <h1>Inbox is empty</h1> :\r\n      <div>\r\n        {user && <div>\r\n          {!!user.notifications.length && <NotificationList notifications={user.notifications} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification} ></NotificationList>}\r\n        </div>\r\n        }\r\n      </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    room: state.room.currRoom,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxPage);","import Iframe from 'react-iframe'\r\n\r\nimport React,{ useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst RandomGame = () => {\r\n    const [gameName, setGameName] = useState('')\r\n\r\n    const gamesName = ['tetrix-en-s-iga-cloud','little-jump-guy-new-en-s-iga-cloud','bottle-flip-new-en-s-iga-cloud', 'basket-fall2-new-en-s-iga-cloud','easter-hunt-new-en-s-iga-cloud','trump-run-new-en-s-iga-cloud','minigolf-new-en-s-iga-cloud','onion-boy-new-en-s-iga-cloud','tank-wars-new-en-s-iga-cloud','angry-chicken-egg-madness-new-en-s-iga-cloud','switch-sides-new-en-s-iga-cloud','html5/unlockit-en-s-iga-cloud', 'spotle-en-s-iga-cloud','snake-condo-en-s-iga-cloud', 'cheese-lab-en-s-iga-cloud','medieval-dodgeball-en-s-iga-cloud']\r\n     \r\n\r\n    const setGame = () =>{\r\n        let randomInt = Math.floor(Math.random() * gamesName.length) \r\n        setGameName(gamesName[randomInt])\r\n        console.log(gameName);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setGame()\r\n        return () => {\r\n            setGameName('')\r\n        };\r\n    }, [])\r\n\r\n\r\n    return <div className=\"random-game\">\r\n        {gameName &&<Iframe url={`https://wanted5games.com/games/html5/${gameName}/index.html?pub=10`} width=\"100%\" height=\"100%\" className=\"iframe\" />}\r\n    </div>;\r\n}\r\n\r\nexport default RandomGame;","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport { loadRoomById, saveRoom, resetCurrRoom } from '../../actions/RoomActions';\r\nimport { toggleStarredNote, removeNote, changeNoteColor, toggleNotePin, updateNote } from '../../actions/NoteActions'\r\n\r\nimport NoteFilter from './NoteFilter'\r\nimport NoteList from './NoteList'\r\n\r\n\r\nconst StarredContainer = ({ room,notes, user, setNoteType, removeNote, saveRoom, changeNoteColor, toggleNotePin, updateNote, toggleStarredNote, isStarredPage}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"starred-container\">\r\n            {/* <NoteFilter\r\n                filterBy={filterBy}\r\n                setFilterBy={setFilterBy}\r\n                onFilter={onFilterHandler}\r\n                placeHolder={\"Search for notes\"} /> */}\r\n\r\n\r\n            <NoteList\r\n                room={room}\r\n                notes={notes}\r\n                user={user}\r\n                removeNote={removeNote}\r\n                changeNoteColor={changeNoteColor}\r\n                toggleNotePin={toggleNotePin}\r\n                // saveRoomChanges={saveRoomChanges}\r\n                // setNoteType={setNoteType}\r\n                updateNote={updateNote}\r\n                isStarredPage={isStarredPage}\r\n                toggleStarredNote={toggleStarredNote}\r\n                // updateMembers={updateMembers}\r\n                // togglePinned={togglePinned}\r\n                // setNoteType={setNoteType}\r\n                // toggleStarred={toggleStarred}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // room: state.room.currRoom,\r\n        // user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleNotePin,\r\n    changeNoteColor,\r\n    removeNote,\r\n    saveRoom,\r\n    loadRoomById,\r\n    resetCurrRoom,\r\n    updateNote,\r\n    toggleStarredNote\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StarredContainer);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { resetCurrRoom } from '../actions/RoomActions';\r\nimport { getStarredNotes } from '../actions/NoteActions';\r\n\r\nimport StarredContainer from '../cmps/Note/StarredContainer'\r\nimport Loading from '../cmps/Loading'\r\n\r\n\r\n\r\nconst StarredPage = ({ room, user, getStarredNotes, resetCurrRoom }) => {\r\n\r\n\r\n  const getNotes = async () => {\r\n    return await getStarredNotes(JSON.parse(JSON.stringify(user)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getNotes()\r\n    return () => {\r\n      resetCurrRoom()\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"starred-page\">\r\n      <h1>Starred</h1>\r\n      {room ? <StarredContainer notes={room.notes} user={user} isStarredPage={true} /> : <Loading />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    room: state.room.currRoom,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getStarredNotes,\r\n  resetCurrRoom\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StarredPage);","\r\n\r\nimport React, { Component } from \"react\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport Loading from \"../cmps/Loading\";\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\n// import SocketService from '../services/SocketService'\r\n\r\nimport { signUp, login, getUser } from '../actions/UserActions'\r\nimport { connect } from \"react-redux\";\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\nclass SignupPage extends Component {\r\n\r\n  state = {\r\n    newUser: {\r\n      userName: '',\r\n      fullName: '',\r\n      password: '',\r\n      imgUrl: '',\r\n    },\r\n    isSignUp: false,\r\n    isLoading: false,\r\n    isDone: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLoggedinUser();\r\n  }\r\n\r\n  getLoggedinUser = async () => {\r\n    await this.props.getUser()\r\n    if (this.props.user) this.props.history.push('/')\r\n  }\r\n\r\n  onChangeHandler = (ev) => {\r\n    const { value, name } = ev.target;\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        [name]: value\r\n      }\r\n    })\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({\r\n      newUser: {\r\n        userName: '',\r\n        fullName: '',\r\n        password: '',\r\n        imgUrl: '',\r\n      }\r\n    })\r\n  }\r\n\r\n  onUploadImg = async (ev) => {\r\n    this.setState({ isLoading: true })\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        imgUrl: userImgUrl.secure_url\r\n      }\r\n    })\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\n  connectSockets(id) {\r\n    this.props.onConnectSocket(id)\r\n  }\r\n\r\n  toggleSignUp = () => {\r\n    this.setState(prevState => ({\r\n      isSignUp: !prevState.isSignUp\r\n    }));\r\n  }\r\n\r\n  onHandleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    this.setState({ isDone: true })\r\n    this.state.isSignUp ?\r\n      await this.props.signUp({ ...this.state.newUser })\r\n      : await this.props.login({ ...this.state.newUser })\r\n    await this.getLoggedinUser();\r\n    if (!this.props.user) {\r\n      Swal.fire({\r\n        title: 'Wrong password or Username.',\r\n        width: 300,\r\n        confirmButtonText: \"Say what?\",\r\n        confirmButtonColor: \"yellow\",\r\n        padding: '1em',\r\n        background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n        backdrop: `\r\n        rgba(0,0,123,0.4)\r\n        url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n        left top\r\n        no-repeat\r\n        `\r\n      })\r\n      this.props.history.push(\"/signup\")\r\n      this.resetInput()\r\n      this.setState({ isDone: false })\r\n      return\r\n    }\r\n    this.props.showNotification('Logged in successfully :)', 'success')\r\n    this.connectSockets(this.props.user._id)\r\n    this.props.history.push(\"/\")\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { isSignUp, isLoading, isDone } = this.state\r\n    const { imgUrl } = this.state.newUser\r\n    return (\r\n      isDone ? <Loading /> :\r\n        <div className=\"signup-form\">\r\n          <form onSubmit={this.onHandleSubmit}>\r\n            {isSignUp ? <h1>SignUp</h1> : <h1>Login</h1>}\r\n            {isSignUp && <AvatarEdit onUploadImg={this.onUploadImg} imgUrl={imgUrl} isLoading={isLoading} />}\r\n            {isSignUp && <MDBInput label=\"Full Name\" name=\"fullName\" value={this.state.newUser.fullName || ''} onChange={this.onChangeHandler} />}\r\n            <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={this.state.newUser.userName || ''} onChange={this.onChangeHandler} />\r\n            <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={this.state.newUser.password || ''} onChange={this.onChangeHandler} />\r\n            <button className=\"signup-login-btn\">{isSignUp ? 'Signup' : 'Login'}</button>\r\n            {!isSignUp && <h2 >Don't Have an account?<span className=\"toggle-btn\" onClick={this.toggleSignUp}> Sign up!</span></h2>}\r\n            {isSignUp && <h2 >Head Back to <span className=\"toggle-btn\" onClick={this.toggleSignUp}>Login</span></h2>}\r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signUp,\r\n  getUser,\r\n  login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\r\n\r\n\r\n\r\n//func version:\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { MDBInput } from \"mdbreact\";\r\n// import Loading from \"../cmps/Loading\";\r\n\r\n// import Swal from 'sweetalert2'\r\n\r\n// // import SocketService from '../services/SocketService'\r\n\r\n// import { signUp, login, getUser } from '../actions/UserActions'\r\n// import { connect } from \"react-redux\";\r\n// import CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n// import { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\n\r\n// const SignupPage = (props) => {\r\n//   const [isSignup, setIsSignup] = useState(false)\r\n//   const [isLoading, setIsLoading] = useState(false)\r\n//   const [isDone, setIsDone] = useState(false)\r\n//   const [newUser, setNewUser] = useState({\r\n//     userName: '',\r\n//     fullName: '',\r\n//     password: '',\r\n//     imgUrl: '',\r\n//   })\r\n//   let loggedinUser = null\r\n\r\n//   const getLoggedinUser = async () => {\r\n//     await props.getUser()\r\n//     if (props.user) props.history.push('/')\r\n//     return props.user\r\n//   }\r\n\r\n\r\n\r\n//   const resetInput = () => {\r\n//     setNewUser({\r\n//       userName: '',\r\n//       fullName: '',\r\n//       password: '',\r\n//       imgUrl: '',\r\n//     })\r\n//   }\r\n\r\n//   const onUploadImg = async (ev) => {\r\n//     setIsLoading(true)\r\n//     let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n//     setNewUser({ ...newUser, imgUrl: userImgUrl.secure_url })\r\n//     setIsLoading(false)\r\n//   }\r\n\r\n//   const connectSockets = (id) => {\r\n//     props.onConnectSocket(id)\r\n//   }\r\n\r\n//   const onHandleSubmit = async (ev) => {\r\n//     ev.preventDefault();\r\n//     setIsDone(true)\r\n//     isSignup ? await props.signUp({ ...newUser }) : await props.login({ ...newUser })\r\n//     await getLoggedinUser()\r\n//     loggedinUser = { ...props.user }\r\n//     if (!loggedinUser.userName) {\r\n//       Swal.fire({\r\n//         title: 'Wrong password or Username.',\r\n//         width: 300,\r\n//         confirmButtonText: \"Say what?\",\r\n//         confirmButtonColor: \"yellow\",\r\n//         padding: '1em',\r\n//         background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n//         backdrop: `\r\n//         rgba(0,0,123,0.4)\r\n//         url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n//         left top\r\n//         no-repeat\r\n//         `\r\n//       })\r\n//       props.history.push(\"/signup\")\r\n//       resetInput()\r\n//       setIsDone(false)\r\n//       return\r\n//     }\r\n//     props.showNotification('Logged in successfully :)', 'success')\r\n//     connectSockets(loggedinUser._id)\r\n//     console.log(loggedinUser);\r\n//     props.history.push(\"/\")\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     getLoggedinUser()\r\n//   }, [])\r\n\r\n//   return (\r\n//     isDone ? <Loading /> :\r\n//       <div className=\"signup-form\">\r\n//         <form onSubmit={(e) => onHandleSubmit(e)}>\r\n//           {isSignup ? <h1>SignUp</h1> : <h1>Login</h1>}\r\n//           {isSignup && <AvatarEdit onUploadImg={onUploadImg} imgUrl={newUser.imgUrl} isLoading={isLoading} />}\r\n//           {isSignup && <MDBInput label=\"Full Name\" name=\"fullName\" value={newUser.fullName || ''} onChange={e => setNewUser({ ...newUser, fullName: e.target.value })} />}\r\n//           <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={newUser.userName || ''} onChange={e => setNewUser({ ...newUser, userName: e.target.value })} />\r\n//           <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={newUser.password || ''} onChange={e => setNewUser({ ...newUser, password: e.target.value })} />\r\n//           <button className=\"signup-login-btn\">{isSignup ? 'Sign up' : 'Login'}</button>\r\n//           {!isSignup && <h2 >Don't Have an account?<span className=\"toggle-btn\" onClick={() => setIsSignup(!isSignup)}> Sign up!</span></h2>}\r\n//           {isSignup && <h2 >Head Back to <span className=\"toggle-btn\" onClick={() => setIsSignup(!isSignup)}>Login</span></h2>}\r\n//         </form>\r\n//       </div>\r\n//   );\r\n\r\n// }\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     user: state.user.loggedinUser,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   signUp,\r\n//   getUser,\r\n//   login\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\r\n\r\n\r\n// //functional handle submit:\r\n// const onHandleSubmit = async (ev) => {\r\n//   ev.preventDefault();\r\n//   setIsDone(true)\r\n//   isSignup ? await props.signUp({ ...newUser }) : await props.login({ ...newUser })\r\n//   await getLoggedinUser()\r\n//   if (!props.user) {\r\n//     Swal.fire({\r\n//       title: 'Wrong password or Username.',\r\n//       width: 300,\r\n//       confirmButtonText: \"Say what?\",\r\n//       confirmButtonColor: \"yellow\",\r\n//       padding: '1em',\r\n//       background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n//       backdrop: `\r\n//       rgba(0,0,123,0.4)\r\n//       url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n//       left top\r\n//       no-repeat\r\n//       `\r\n//     })\r\n//     props.history.push(\"/signup\")\r\n//     resetInput()\r\n//     setIsDone(false)\r\n//     return\r\n//   }\r\n//   connectSockets(props.user._id)\r\n//   props.history.push(\"/\")\r\n// }","import React from \"react\";\r\nimport { getUser } from \"./actions/UserActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport InboxPage from './pages/InboxPage'\r\nimport RandomGame from './pages/RandomGame'\r\nimport StarredPage from './pages/StarredPage'\r\nimport ContactPage from './pages/ContactPage'\r\nimport RoomPage from './pages/RoomPage'\r\nimport SignupPage from './pages/SignupPage'\r\n\r\nimport Loading from './cmps/Loading'\r\nclass RoutePage extends React.Component {\r\n\r\n  async componentDidMount() {\r\n    await this.props.getUser(); \r\n    if (!this.isInSignupPage && !this.props.user) {\r\n    this.props.history.push('/signup')\r\n    }\r\n  }\r\n\r\n  get isInSignupPage() {\r\n    return this.props.location.pathname === \"/signup\";\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.props.location !== prevProps.location &&\r\n      !this.props.user &&\r\n      !this.isInSignupPage\r\n    ) {\r\n      this.props.history.push(\"/signup\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.isInSignupPage && !this.props.user) return <Loading />\r\n\r\n    return (\r\n      <div className=\"router-page\">\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/signup\" exact render={(routerProps) => <SignupPage {...routerProps} onConnectSocket={this.props.onConnectSocket} showNotification={this.props.showNotification} />} />\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/contact\" component={ContactPage} />\r\n            <Route path=\"/random-game\" exact component={RandomGame} />\r\n            <Route path=\"/starred\" exact component={StarredPage} />\r\n            <Route path=\"/room/:id\" exact render={(routerProps) => <RoomPage {...routerProps} showNotification={this.props.showNotification} />} />\r\n            {/* <Route path=\"/room/:id\" component={RoomPage} showNotification={this.props.showNotification} /> */}\r\n            <Route path=\"/inbox/:id\" exact component={InboxPage} />\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(RoutePage));\r\n","import React from \"react\";\r\nimport { stack as Menu } from \"react-burger-menu\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport { UtilService } from '../services/UtilService'\r\nimport { getUser } from '../actions/UserActions'\r\nimport { logout } from '../actions/UserActions'\r\n\r\n\r\n\r\nclass BurgerMenu extends React.Component {\r\n  state = {\r\n    menuOpen: false,\r\n    chuckJoke: ''\r\n  };\r\n\r\n  async componentDidMount () {    \r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke });     \r\n   \r\n  }\r\n\r\n async  componentWillUpdate () {\r\n    if(this.props.isClicked && !this.state.menuOpen ) {\r\n      this.setState({ menuOpen: true });\r\n    }\r\n\r\n    \r\n  }\r\n   \r\n\r\n \r\n  \r\n  closeMenu = async (ev) => {\r\n    if (ev) {\r\n      this.handleLogout()\r\n    }\r\n    \r\n    this.setState({ menuOpen: false });\r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke }); \r\n    };\r\n  \r\n  \r\n  handleLogout =  () => {\r\n     this.props.logout()\r\n     this.props.showNotification('Logged out successfully :)', 'success')\r\n\r\n\r\n    // this.props.history.push('/signup')\r\n  }\r\n\r\n\r\n  async handleStateChange(state) {\r\n\r\n    this.setState({ menuOpen: state.isOpen });\r\n    // this.props.onOpenMenu(state.isOpen)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { menuOpen, chuckJoke } = this.state\r\n    const { user } = this.props\r\n    if (!user) return ''\r\n\r\n    return (\r\n      <Menu right isOpen={menuOpen} onStateChange={(state) => this.handleStateChange(state)}>\r\n        <NavLink activeClassName=\"active\" exact to=\"/\" onClick={() => this.closeMenu()}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/contact\" exact onClick={() => this.closeMenu()}>\r\n          Contacts\r\n        </NavLink>\r\n        {user.notifications.length && <span className=\"notification-count\">{user.notifications.length}</span>}\r\n        <NavLink activeClassName=\"active\" to={`/inbox/${user._id}`} exact onClick={() => this.closeMenu()}>\r\n          Inbox\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to={`/random-game`} exact onClick={() => this.closeMenu()}>\r\n          Play Random Game\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/starred\" exact onClick={() => this.closeMenu()}  >\r\n          Starred \r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/signup\" exact onClick={() => this.closeMenu(logout)}  >\r\n          Logout\r\n        </NavLink>\r\n        <div className=\"menu-footer\">\r\n         <h5>{chuckJoke}</h5>\r\n        {/* <img src={imgObj.imgUrl} alt=\"\"/> */}\r\n        </div>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(BurgerMenu));\r\n\r\n// import React from \"react\";\r\n// import { stack as Menu } from \"react-burger-menu\";\r\n// import { NavLink, withRouter } from \"react-router-dom\";\r\n// import { connect } from \"react-redux\";\r\n\r\n\r\n// import { UtilService } from '../services/UtilService'\r\n// import { getUser } from '../actions/UserActions'\r\n// import { logout } from '../actions/UserActions'\r\n\r\n\r\n\r\n// class BurgerMenu extends React.Component {\r\n//   state = {\r\n//     menuOpen: false,\r\n//     chuckJoke: ''\r\n//   };\r\n\r\n//   async componentDidMount () {    \r\n//     let chuckJoke = await UtilService.getRandomChuck()\r\n//     this.setState({ chuckJoke });     \r\n   \r\n//   }\r\n\r\n//  async  componentWillUpdate () {\r\n//     if(this.props.isClicked && !this.state.menuOpen ) {\r\n//       this.setState({ menuOpen: true });\r\n//     }\r\n\r\n    \r\n//   }\r\n   \r\n\r\n \r\n  \r\n//   closeMenu = async (ev) => {\r\n//     if (ev) {\r\n//       this.handleLogout()\r\n//     }\r\n    \r\n//     this.setState({ menuOpen: false });\r\n//     let chuckJoke = await UtilService.getRandomChuck()\r\n//     this.setState({ chuckJoke }); \r\n//     };\r\n  \r\n  \r\n//   handleLogout =  () => {\r\n//      this.props.logout()\r\n//      this.props.showNotification('Logged out successfully :)', 'success')\r\n\r\n\r\n//     // this.props.history.push('/signup')\r\n//   }\r\n\r\n\r\n//   async handleStateChange(state) {\r\n\r\n//     this.setState({ menuOpen: state.isOpen });\r\n//     // this.props.onOpenMenu(state.isOpen)\r\n//   }\r\n\r\n\r\n//   render() {\r\n\r\n//     const { menuOpen, chuckJoke } = this.state\r\n//     const { user } = this.props\r\n//     if (!user) return ''\r\n\r\n//     return (\r\n//       <Menu right isOpen={menuOpen} onStateChange={(state) => this.handleStateChange(state)}>\r\n//         <NavLink activeClassName=\"active\" exact to=\"/\" onClick={() => this.closeMenu()}>\r\n//           Home\r\n//         </NavLink>\r\n//         <NavLink activeClassName=\"active\" to=\"/contact\" exact onClick={() => this.closeMenu()}>\r\n//           Contacts\r\n//         </NavLink>\r\n//         {user.notifications.length && <span className=\"notification-count\">{user.notifications.length}</span>}\r\n//         <NavLink activeClassName=\"active\" to={`/inbox/${user._id}`} exact onClick={() => this.closeMenu()}>\r\n//           Inbox\r\n//         </NavLink>\r\n//         <NavLink activeClassName=\"active\" to={`/random-game`} exact onClick={() => this.closeMenu()}>\r\n//           Play Random Game\r\n//         </NavLink>\r\n//         <NavLink activeClassName=\"active\" to=\"/starred\" exact onClick={() => this.closeMenu()}  >\r\n//           Starred \r\n//         </NavLink>\r\n//         <NavLink activeClassName=\"active\" to=\"/signup\" exact onClick={() => this.closeMenu(logout)}  >\r\n//           Logout\r\n//         </NavLink>\r\n//         <div className=\"menu-footer\">\r\n//          <h5>{chuckJoke}</h5>\r\n//         {/* <img src={imgObj.imgUrl} alt=\"\"/> */}\r\n//         </div>\r\n//       </Menu>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     user: state.user.loggedinUser,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = {\r\n//   getUser,\r\n//   logout\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(withRouter(BurgerMenu));\r\n\r\n","import React, { createRef, useEffect, useState } from 'react'\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\n\r\nimport logo from '../../src/assets/png/petek-logo.png';\r\n\r\n\r\nexport default ({ user, handleLogout, history }) => {\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n    const checkboxRef = createRef()\r\n\r\n    const handleCheboxClicked = (bool) => {\r\n        setIsMenuOpen(bool)\r\n        if (checkboxRef.current) checkboxRef.current.checked = bool\r\n    }\r\n\r\n\r\n    return (\r\n        <nav className=\"main-nav\">\r\n            <div className=\"nav-container\">\r\n                <Link to={`/`} className=\"logo-container\" >\r\n                    <img src={logo} alt=\"logo\" className=\"logo\" />\r\n                </Link>\r\n\r\n                {(!isMenuOpen && user && user.notifications.length) && <span className=\"notification-count-nav\">{user.notifications.length}</span>}\r\n                <input type=\"checkbox\" id=\"mobile-nav\" className={isMenuOpen ? 'menu-open' : ''} ref={checkboxRef} hidden onClick={() => handleCheboxClicked(!isMenuOpen)} />\r\n                {user && <label htmlFor=\"mobile-nav\" className=\"mobile-btn\">\r\n                    <span>|</span>\r\n                </label>}\r\n\r\n                {user && <ul className=\"link-list\">\r\n                    <li>\r\n                        <NavLink to=\"/\" className=\"link\" exact onClick={() => handleCheboxClicked(false)}>\r\n                            Home\r\n                         </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        {user.notifications.length && <span className=\"notification-count\">{user.notifications.length}</span>}\r\n                        <NavLink to={`/inbox/${user._id}`} className=\"link\" exact onClick={() => { handleCheboxClicked(false) }}>\r\n                            Inbox\r\n                         </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={`/random-game`} className=\"link\" exact onClick={() => handleCheboxClicked(false)}>\r\n                            Random Game\r\n                         </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/starred\" className=\"link\" exact onClick={() => handleCheboxClicked(false)}>\r\n                            Starred\r\n                         </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/contact\" className=\"link\" exact onClick={() => handleCheboxClicked(false)}>\r\n                            Contacts\r\n                         </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/signup\" className=\"link\" exact onClick={handleLogout}>\r\n                            Logout\r\n                       </NavLink>\r\n                    </li>\r\n                </ul>\r\n                }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport './App.scss';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Noty from 'noty';\r\n\r\n\r\n\r\n\r\nimport audioNotification from '../src/assets/sound/sp-tune.mp3'\r\n\r\nimport SocketService from './services/SocketService'\r\nimport { StorageService } from './services/StorageService'\r\nimport { updateUser, getUser, logout } from '../src/actions/UserActions';\r\nimport { saveRoom, loadRoomById } from '../src/actions/RoomActions';\r\n\r\nimport RoutePage from './RoutePage';\r\nimport NavBar from './cmps/NavBar';\r\nimport MyNavbar from './cmps/MyNavbar';\r\n\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = (props) => {\r\n  const loggedinUser = props.user;//destruct them\r\n  const room = props.room\r\n\r\n  const connectSockets = (id) => {\r\n    if (room && loggedinUser) {\r\n      SocketService.on(`updateRoom ${room._id}`, async ({ updatedRoom, userId }) => {\r\n        if (userId !== loggedinUser._id) {\r\n          props.loadRoomById({ roomId: updatedRoom._id })\r\n        }\r\n      });\r\n    }\r\n    if (loggedinUser) {\r\n      SocketService.on(`updateUser ${loggedinUser._id}`, (updatedUser) => {\r\n        let user = StorageService.load('user')\r\n        if (loggedinUser._id === user._id) updateUser(updatedUser)\r\n      });\r\n      SocketService.on(`updateUserWithoutAudio ${loggedinUser._id}`, (updatedUser) => { props.updateUser(updatedUser) })\r\n    }\r\n  }\r\n\r\n  const disconnectSockets = () => {\r\n    console.log('disconnect sockets');\r\n    if (room) SocketService.off(`updateRoom ${room._id}`)\r\n    if (loggedinUser) {\r\n      SocketService.off(`updateUser ${loggedinUser._id}`)\r\n      SocketService.off(`updateUserWithoutAudio ${loggedinUser._id}`)\r\n    }\r\n  }\r\n\r\n  const updateUser = (updatedUser) => {\r\n    let audio = new Audio(audioNotification);\r\n    if (updatedUser) {\r\n      props.updateUser(updatedUser)\r\n      audio.play()\r\n    } else {\r\n      console.log(\"ERROR IN UPDATE USER\");\r\n    }\r\n  }\r\n\r\n  const showNotification = (text, type) => {\r\n    new Noty({\r\n      text,\r\n      type,\r\n      theme: 'bootstrap-v4',\r\n      layout: 'topRight',\r\n      animation: {\r\n        open: 'animated bounceInRight', // Animate.css class names\r\n        close: 'animated bounceOutRight' // Animate.css class names\r\n      },\r\n      timeout: 1500\r\n    }).show();\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n    await props.logout()\r\n    showNotification('Logged out successfully :)', 'success')\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    connectSockets()\r\n    if (loggedinUser) {\r\n      console.log('connect user sockets', loggedinUser._id);\r\n      console.log(loggedinUser);\r\n    }\r\n    if (room) console.log('connect room sockets', room._id);\r\n    return () => {\r\n      disconnectSockets()\r\n      if (room) SocketService.off(`updateRoom ${room._id}`)\r\n\r\n    }\r\n\r\n  }, [loggedinUser, room]);\r\n\r\n  useEffect(() => {\r\n    SocketService.setup()\r\n\r\n\r\n    return () => {\r\n      if (loggedinUser) console.log('disconnecet user sockets', loggedinUser._id);\r\n      if (room) console.log('disconnecet room sockets', room._id);\r\n      disconnectSockets()\r\n      SocketService.terminate()\r\n\r\n    };\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        {/* <NavBar user={loggedinUser} showNotification={showNotification} /> */}\r\n        <MyNavbar user={loggedinUser} handleLogout={handleLogout} history={history} />\r\n        <RoutePage onConnectSocket={connectSockets} showNotification={showNotification} />\r\n      </Router>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room: state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n  saveRoom,\r\n  loadRoomById,\r\n  getUser,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  \r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    loggedinUser: null\r\n}\r\n\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            if (!action.user) return {...state, loggedinUser: action.user }\r\n            else return {...state, loggedinUser: {...action.user } }\r\n        case 'GET_USER':\r\n            return {...state, loggedinUser: action.user }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\n\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':            \r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CURR_CONTACT':\r\n            return { ...state, currContact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    if (contact._id === action.contact._id) return action.contact;\r\n                    return contact;\r\n                })\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => {\r\n                    return contact._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    rooms: [],\r\n    currRoom: null,\r\n    filterBy: {}\r\n}\r\n\r\n\r\nexport default function RoomReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_ROOMS':\r\n            return { ...state, rooms: action.rooms }\r\n        case 'SET_CURR_ROOM':\r\n            return { ...state, currRoom: action.room }\r\n        case 'UPDATE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.map(room => {\r\n                    if (room._id === action.room._id) {\r\n                        //after problems fixed return it to one line term\r\n                        console.log('id match!');\r\n\r\n                        return action.room;\r\n                    }\r\n                    return room;\r\n                })\r\n            }\r\n        case 'DELETE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.filter(room => {\r\n                    return room._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: [...state.rooms, action.room]\r\n            }\r\n        case 'SET_FILTER_BY':\r\n            return { ...state, filterBy: action.filterBy }\r\n        case 'RESET_FILTER_BY':\r\n            return { ...state, filterBy: null }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport UserReducer from './reducers/UserReducer';\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport RoomReducer from './reducers/RoomReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer,\r\n    room: RoomReducer,\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\n\r\nexport default store\r\n\r\n\r\n//*********STOREEEEE****************\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App.jsx'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/plus.867418af.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c79dce59.png\";","module.exports = __webpack_public_path__ + \"static/media/pin.5f588246.svg\";","module.exports = __webpack_public_path__ + \"static/media/x-mark.002e9675.svg\";","module.exports = __webpack_public_path__ + \"static/media/petek-logo.e7a6391d.png\";"],"sourceRoot":""}