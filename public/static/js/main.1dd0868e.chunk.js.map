{"version":3,"sources":["assets/sound/sp-tune.mp3","assets/svg/add-note.svg","assets/svg/delete-user.svg","assets/gif/avatarLoader.gif","assets/svg/friends.svg","assets/svg/ok.svg","assets/svg/cross.svg","assets/svg/arrow.svg","assets/svg/loading.svg","assets/svg/upload.svg","assets/svg/save.svg","assets/png/petek-logo.png","services/SocketService.js","services/StorageService.js","services/HttpService.js","services/UserService.js","actions/UserActions.js","services/RoomService.js","actions/RoomActions.js","services/UtilService.js","services/ContactService.js","actions/ContactActions.js","cmps/Filter.jsx","cmps/AvatarLoader.jsx","cmps/ContactPreview.jsx","cmps/ContactList.jsx","pages/ContactPage.jsx","services/CloudinaryService.js","cmps/ButtonMenu.jsx","cmps/Note/NoteText.jsx","cmps/Note/NoteImg.jsx","cmps/Note/NoteVideo.jsx","cmps/Note/NoteTodo.jsx","cmps/Note/NoteLoc.jsx","cmps/icons/NotePinIcon.jsx","cmps/icons/CircleIcon.jsx","cmps/icons/ColorPaletteIcon.jsx","cmps/Note/Features.jsx","cmps/icons/RemoveIcon.jsx","cmps/icons/EditIcon.jsx","cmps/icons/SaveIcon.jsx","cmps/Note/NotePreview.jsx","cmps/Loading.jsx","cmps/Note/NoteList.jsx","cmps/Note/NoteFilter.jsx","cmps/Note/InputText.jsx","cmps/Note/InputImg.jsx","services/YoutubeApiService.js","cmps/Note/InputVideo.jsx","cmps/Note/InputTodo.jsx","services/MapService.js","cmps/icons/GpsIcon.jsx","cmps/Note/InputLoc.jsx","pages/RoomPage.jsx","cmps/User/AvatarEdit.jsx","pages/HomePage.jsx","cmps/Notification/NotificationFriend.jsx","cmps/Notification/NotificationResponse.jsx","cmps/Notification/NotificationNote.jsx","cmps/Notification/NotificationPreview.jsx","cmps/Notification/NotificationList.jsx","pages/InboxPage.jsx","pages/RandomGame.jsx","pages/SignupPage.jsx","RoutePage.jsx","cmps/BurgerMenu.jsx","cmps/NavBar.jsx","App.jsx","serviceWorker.js","store/reducers/UserReducer.js","store/reducers/ContactReducer.js","store/reducers/RoomReducer.js","store/index.js","index.js","assets/svg/plus.svg","assets/png/user.png","assets/svg/pin.svg","assets/svg/x-mark.svg"],"names":["module","exports","socket","setup","io","terminate","on","eventName","cb","off","emit","data","StorageService","save","key","value","item","JSON","stringify","localStorage","setItem","load","getItem","parse","axios","Axios","create","withCredentials","HttpService","endpoint","ajax","a","method","url","res","response","status","KEY","user","_id","getById","id","credentials","userName","fullName","password","pinnedNotes","notifications","imgUrl","avatarImg","Date","now","removeItem","msg","updatedUser","userId","friendId","friend","userIdx","friends","findIndex","splice","UserService","signUp","update","login","logout","getMinimalUser","updateImgAtContacts","getLoggedinUser","getRoomIdFromContact","loggedinUser","contact","find","updateFriend","dispatch","type","getUser","updateUser","room","prm","roomId","RoomService","query","critirea","params","URLSearchParams","filterBy","queryParams","property","set","remove","checkIsValidUser","loadRoomById","console","log","saveRoom","notes","isEdit","UtilService","makeId","length","txt","possible","i","charAt","Math","floor","random","getRandomChuck","get","contacts","ContactService","term","toLowerCase","filteredFriends","filter","includes","getContactById","Promise","resolve","reject","deleteContact","index","saveContact","c","_updateContact","push","_addContact","getEmptyContact","loadContacts","setFilterBy","moveToContact","placeHolder","minLength","className","debounceTimeout","placeholder","onChange","e","target","onKeyDown","ev","keyCode","preventDefault","AvatarLoader","isHome","src","avatarLoader","alt","onAddFriend","moveToRoom","setRoomId","useState","isFriendSent","setIsFriendSent","isFriend","setIsFriend","isLoaded","setIsLoaded","onLoad","useCallback","useEffect","toggleIsFriend","onClick","style","display","friendReqSent","addFriendImg","props","onMoveToRoom","showNotification","onDeleteFriend","map","ContactPreview","swipeLeft","content","deleteUser","action","swipeRight","addNote","mapDispatchToProps","connect","state","history","friendIdx","Filter","ContactList","friendName","n","Noty","text","layout","theme","animation","open","close","buttons","button","show","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","secure","then","json","catch","err","error","setNoteType","setNoteInputType","setNoteData","isOpen","setIsOpen","slideSpeed","direction","spacing","iconResting","fontSize","nativecolor","iconActive","backgroundColor","size","icon","fill","note","header","width","allow","title","currRoom","currTodoIdx","setCurrTodoIdx","setIsNewTodo","isNewTodo","editedTodo","setEditedTodo","newTodo","setNewTodo","progress","setProgress","editInputRef","createRef","newTodoInputRef","toggleIsDone","idx","isDone","SocketService","doneTodosCount","reduce","acc","todo","prog","parseInt","culcProgress","current","focus","PlusIcon","checked","readOnly","ref","xmark","removeTodo","ArrowIcon","todoToAdd","addTodo","completed","labelSize","name","height","navigator","platform","indexOf","window","coords","lat","lng","bootstrapURLKeys","center","yesIWantToUseGoogleMapApiInternals","defaultZoom","distanceToMouse","onGoogleApiLoaded","maps","Marker","position","PinIcon","renderMarkers","isPinned","enable-background","viewBox","xmlns","d","version","xmlnsXlink","x","y","xmlSpace","enableBackground","clipRule","fillRule","togglePinned","setNoteColor","isPalleteOpen","setIsPalleteOpen","NotePinIcon","color","CSSTransition","classNames","timeout","in","appear","changeColor","CircleIcon","removeNote","saveRoomChanges","setIsEdit","NoteType","NoteText","NoteImg","NoteVideo","NoteTodo","NoteLoc","noteRef","paintNote","bgColor","createdBy","backgroudColor","EditIcon","SaveIcon","RemoveIcon","format","createdAt","Features","Loading","loading","setNotesForDisplay","fixedNotes","unshift","TransitionGroup","component","enter","exit","NotePreview","htmlFor","setNoteHeader","handleSubmit","onSubmit","hidden","onUploadImg","inputRef","click","API_KEY","YoutubeApiService","youtubeQuery","items","addVideo","videos","setVideos","searchYoutubeVideos","queryStr","youtubeVideos","video","videoId","snippet","thumbnails","default","noteData","currTodo","setCurrTodo","textInput","React","useRef","xMark","todoId","saveIcon","GAPI_KEY","MapService","searchLocs","searchAddress","getPosition","geolocation","getCurrentPosition","split","join","results","locs","setLocs","selectedLoc","setSelectedLoc","addressInputRef","searchLoc","locations","fetchUserCoords","userPos","latitude","longitude","accurateAddressIdx","address","address_components","short_name","dataObj","geometry","location","GpsIcon","loc","place_id","formatted_address","setLocNote","resetCurrRoom","noteType","noteHeader","noteInputType","isUploading","setIsUploading","isValidUser","setIsValidUser","by","newNote","InputType","InputText","InputImg","InputVideo","InputTodo","InputLoc","loadRoom","match","CloudinaryService","secure_url","onHandleSubmit","minimalUser","currFriend","handleNotePin","handleNoteUnpin","noteId","NoteFilter","onFilter","isMarkerShown","ButtonMenu","NoteList","currNote","AvatarEdit","isLoading","setIsLoading","setIsHome","getUpdatedUser","userImgUrl","Object","assign","stopPropagation","notification","onApprove","onDecline","isApproved","onDeleteNotification","to","NotificationType","NotificationFriend","NotificationResponse","NotificationNote","fromNow","NotificationPreview","currNotification","NotificationList","RandomGame","gameName","setGameName","gamesName","randomInt","setGame","SignupPage","newUser","isSignUp","onChangeHandler","setState","resetInput","toggleSignUp","prevState","Swal","fire","confirmButtonText","confirmButtonColor","padding","background","backdrop","connectSockets","this","onConnectSocket","label","Component","RoutePage","isInSignupPage","prevProps","path","exact","render","routerProps","HomePage","ContactPage","InboxPage","pathname","withRouter","BurgerMenu","menuOpen","chuckJoke","closeMenu","handleLogout","isClicked","right","onStateChange","handleStateChange","activeClassName","toggleClick","logo","createBrowserHistory","updatedRoom","disconnectSockets","audio","Audio","audioNotification","play","NavBar","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","currContact","rooms","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1dd0868e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sp-tune.a3eeb710.mp3\";","module.exports = __webpack_public_path__ + \"static/media/add-note.91ab0319.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-user.9760c031.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatarLoader.2c9b45c9.gif\";","module.exports = __webpack_public_path__ + \"static/media/friends.e8f88cde.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.251fc800.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.21df9a01.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.15b12873.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.a4b15b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.926d5c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.d5a09bc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/petek-logo.e7a6391d.png\";","import io from 'socket.io-client';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/' :\r\n    '//localhost:3030'\r\nvar socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit,\r\n}\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb)\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb)\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    \r\n    socket.emit(eventName, data)\r\n}\r\n\r\n","function save(key, value) {\r\n    let item = JSON.stringify(value);\r\n    localStorage.setItem(key, item);\r\n}\r\nfunction load(key) {\r\n    let item = localStorage.getItem(key)\r\n    let value = JSON.parse(item);\r\n    return value;\r\n}\r\n\r\n\r\nexport const StorageService = {\r\n    save,\r\n    load\r\n}","// import router from '@/router'\r\n// import store from '@/store'\r\n\r\nimport Axios from 'axios';\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nconst BASE_URL = process.env.NODE_ENV !== 'development' ?\r\n    '/api/' :\r\n    '//localhost:3030/api/'\r\n\r\n\r\nexport const HttpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            method,\r\n            url: `${BASE_URL}${endpoint}`,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            return false\r\n                // throw new Error('error:  http.service page')\r\n                // router.push('/');\r\n        }\r\n    }\r\n}","import { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\nimport avatarImg from '../assets/png/user.png'\r\n\r\n\r\nconst KEY = 'user';\r\n\r\n// async function getLoggedinUser() {\r\n//     var user = StorageService.load(KEY);\r\n//     return !user ? null : await HttpService.get(`user/${user._id}`)\r\n// }\r\nasync function getLoggedinUser() {\r\n    var user = StorageService.load(KEY);\r\n    if (!user) return null\r\n    user = await HttpService.get(`user/${user._id}`)\r\n    return user\r\n}\r\n// async function getUpdatedUser() {\r\n//     var user = StorageService.load(KEY);\r\n//     return\r\n\r\n\r\n\r\nasync function getById(id) {\r\n    const user = await HttpService.get(`user/${id}`)\r\n    return user\r\n}\r\n\r\nasync function signUp(credentials) {\r\n    let user = {\r\n        userName: credentials.userName,\r\n        fullName: credentials.fullName,\r\n        password: credentials.password,\r\n        pinnedNotes: [],\r\n        notifications: [],\r\n        pinnedNotes: [],\r\n        imgUrl: credentials.imgUrl ? credentials.imgUrl : avatarImg,\r\n        joinedAt: Date.now(),\r\n        friends: []\r\n    };\r\n\r\n    user = await HttpService.post('auth/signup', user)\r\n    StorageService.save(KEY, user);\r\n    // getUser()\r\n    return user;\r\n}\r\n\r\nasync function login(credentials) {\r\n    const user = await HttpService.post('auth/login', credentials)\r\n    if (!user) return null;\r\n    StorageService.save(KEY, user);\r\n    return user;\r\n}\r\n\r\n\r\nasync function logout() {\r\n    localStorage.removeItem(KEY)\r\n    const msg = await HttpService.post('auth/logout');\r\n    return (msg)\r\n}\r\n\r\nasync function update(user) {\r\n    const updatedUser = await HttpService.put(`user/${user._id}`, user)\r\n    StorageService.save(KEY, updatedUser);\r\n    return updatedUser\r\n}\r\n\r\nasync function updateImgAtContacts(userId, imgUrl) {\r\n    await HttpService.put(`user/${userId}/update`, { userId, imgUrl })\r\n}\r\n\r\nasync function updateFriend(userId, friendId) {\r\n    let friend = await getById(friendId)\r\n    let userIdx = friend.friends.findIndex(user => user._id === userId)\r\n    friend.friends.splice(userIdx, 1)\r\n    await HttpService.put(`user/${friend._id}`, friend)\r\n}\r\n\r\n\r\nfunction getMinimalUser(_id, imgUrl) {\r\n    return {\r\n        _id,\r\n        imgUrl\r\n    }\r\n}\r\n\r\nfunction getRoomIdFromContact(loggedinUser, contact) {\r\n    return loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n\r\n}\r\n\r\nexport const UserService = {\r\n    getById,\r\n    signUp,\r\n    update,\r\n    login,\r\n    logout,\r\n    getMinimalUser,\r\n    updateImgAtContacts,\r\n    getLoggedinUser,\r\n    getRoomIdFromContact,\r\n    updateFriend\r\n}","import { UserService } from '../services/UserService'\r\n\r\nexport function signUp(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.signUp(user);\r\n        dispatch({ type: 'SET_USER', newUser })\r\n    }\r\n}\r\nexport function login(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.login(user);\r\n        dispatch({ type: 'SET_USER', user: newUser })\r\n    }\r\n}\r\nexport function logout() {\r\n    const user = null\r\n    return async dispatch => {\r\n        await UserService.logout();\r\n        dispatch({ type: 'SET_USER', user })\r\n    }\r\n}\r\n\r\nexport function getUser() {\r\n    return async dispatch => {\r\n        const user = await UserService.getLoggedinUser();\r\n        dispatch({ type: 'GET_USER', user })\r\n        // const latestUser = await UserService.getUpdatedUser();\r\n        // dispatch({ type: 'GET_USER', latestUser })\r\n    }\r\n}\r\n\r\n\r\n// export function getUpdatedUser() {\r\n//     return async dispatch => {\r\n//         const user = await UserService.getUpdatedUser();\r\n//         console.log('user in actions');\r\n//         dispatch({ type: 'GET_USER', user })\r\n//     }\r\n// }\r\n\r\nexport function updateUser(user) {\r\n    return async dispatch => {\r\n        const updatedUser = await UserService.update(user);\r\n        dispatch({ type: 'SET_USER', user: updatedUser })\r\n    }\r\n}","import { HttpService } from './HttpService';\r\n\r\nfunction query(critirea) {\r\n    const params = new URLSearchParams(critirea);\r\n    return HttpService.get(`room?${params}`);\r\n}\r\n\r\n\r\nfunction getById(filterBy) {\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]) {\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        }\r\n        return HttpService.get(`room?${queryParams}`);\r\n    }\r\n}\r\n\r\n\r\n\r\n// function getById(filterBy) {\r\n//     console.log(id);\r\n//     return HttpService.get(`room/${id}`);\r\n// }\r\n\r\n\r\n\r\n\r\nfunction remove(id) {\r\n    return HttpService.delete(`room/${id}`);\r\n}\r\n\r\nasync function save(room) {\r\n    let prm;\r\n\r\n    if (room._id) prm = HttpService.put(`room/${room._id}`, room);\r\n    else {\r\n        prm = HttpService.post('room', room);\r\n    }\r\n    const res = await prm;\r\n    return res;\r\n}\r\n\r\n\r\nasync function checkIsValidUser(userId, roomId) {\r\n    return HttpService.post(`room/${roomId}/validate`, { userId, roomId })\r\n}\r\n\r\n\r\nexport const RoomService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    checkIsValidUser\r\n}\r\n\r\n\r\n\r\n","import { RoomService } from '../services/RoomService'\r\n\r\n// LIST\r\nexport function loadRooms(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            const rooms = await RoomService.query(filterBy);\r\n            dispatch({ type: 'SET_ROOMS', rooms })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadRoomById(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            const room = await RoomService.getById(filterBy);\r\n            dispatch({ type: 'SET_CURR_ROOM', room })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrRoom() {\r\n    console.log('made it');\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const room = null\r\n            dispatch({ type: 'SET_CURR_ROOM', room })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveRoom(room) {\r\nconsole.log(room.notes);\r\n\r\n    return async dispatch => {\r\n        const isEdit = !!room._id;\r\n        room = await RoomService.save(room);\r\n        if (isEdit) dispatch({ type: 'SET_CURR_ROOM', room })\r\n        // dispatch({ type: 'UPDATE_ROOM', room }) \r\n        else dispatch({ type: 'ADD_ROOM', room })\r\n        return room;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteRoom(id) {\r\n    return async dispatch => {\r\n        await RoomService.remove(id);\r\n        dispatch({ type: 'DELETE_ROOM', id })\r\n    }\r\n}","import axios from 'axios';\r\n\r\n\r\n\r\nexport const UtilService = {\r\n    makeId,\r\n    getRandomChuck\r\n    // getRandomMeme\r\n}\r\n\r\nfunction makeId(length = 12) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nasync function getRandomChuck(){\r\n    const res = await axios.get(`https://api.chucknorris.io/jokes/random`);\r\n    return res.data.value\r\n}\r\n// async function getRandomMeme(){\r\n//     const res = await axios.get(`https://meme-api.herokuapp.com/gimme/dankmemes/1`);\r\n//      let imgObj = {imgUrl:res.data.memes[0].url, imgHeader:res.data.memes[0].title }\r\n//      return imgObj\r\n// }","import { UtilService } from './UtilService'\r\nimport { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\n\r\n\r\nconst CONTACT_KEY = 'contacts';\r\nvar contacts = []\r\n\r\n// function sort(arr) {\r\n//     return arr.sort((a, b) => {\r\n//         if (a.userName.toLocaleLowerCase() < b.userName.toLocaleLowerCase()) {\r\n//             return -1;\r\n//         }\r\n//         if (a.userName.toLocaleLowerCase() > b.userName.toLocaleLowerCase()) {\r\n//             return 1;\r\n//         }\r\n\r\n//         return 0;\r\n//     })\r\n// }\r\n\r\n// function query(filterBy = null) {\r\n//     return new Promise((resolve, reject) => {\r\n//         var contactsToReturn = StorageService.load(CONTACT_KEY);\r\n//         if (!contactsToReturn || !contactsToReturn.length) {\r\n//             contactsToReturn = [...contacts]\r\n//             StorageService.save(CONTACT_KEY, contactsToReturn)\r\n//         }\r\n//         contacts = [...contactsToReturn]\r\n//         if (filterBy && filterBy.term) {\r\n//             contactsToReturn = filter(filterBy.term)\r\n//         }\r\n//         contactsToReturn ? resolve(sort(contactsToReturn)) : reject(`Contacts not found!`)\r\n//     })\r\n// }\r\nfunction query(filterBy, user) {\r\n    if (filterBy.term && user) {\r\n        filterBy.term = filterBy.term.toLowerCase()\r\n        var filteredFriends = user.friends.filter(friend => {\r\n            return friend.userName.toLowerCase().includes(filterBy.term) || friend.fullName.toLowerCase().includes(filterBy.term)\r\n        })\r\n        return filteredFriends.length ? filteredFriends : ''\r\n    }\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]) {\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        }\r\n        return HttpService.get(`user?${queryParams}`);\r\n    }\r\n\r\n}\r\n// function query(filterBy, user) {\r\n//     console.log(filterBy);\r\n//     console.log(user);\r\n//     // if (!filterBy.term) return []\r\n//     const queryParams = new URLSearchParams();\r\n//     if (filterBy) {\r\n//         for (const property in filterBy) {\r\n//             if (filterBy[property]) {\r\n//                 queryParams.set(property, filterBy[property])\r\n//             }\r\n//         }\r\n//         console.log(queryParams);\r\n//         return HttpService.get(`user?${queryParams}`);\r\n//     }\r\n//     // return HttpService.get('user');\r\n// }\r\n\r\n\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = UtilService.makeId()\r\n        contacts.push(contact)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        fullName: '',\r\n        userName: '',\r\n    }\r\n}\r\n\r\n// function filter(term) {\r\n//     term = term.toLocaleLowerCase()\r\n//     return contacts.filter(contact => {\r\n//         return contact.userName.toLocaleLowerCase().includes(term) ||\r\n//             contact.fullName.toLocaleLowerCase().includes(term)\r\n//     })\r\n// }\r\n\r\nexport const ContactService = {\r\n    query,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}","import { ContactService } from '../services/ContactService'\r\n\r\n// LIST\r\nexport function loadContacts(filterBy,user) {\r\n    return async dispatch => {\r\n        try {\r\n            const contacts = await ContactService.query(filterBy,user);\r\n            dispatch({ type: 'SET_CONTACTS', contacts })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadContactById(id) {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = await ContactService.getContactById(id);\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrContact() {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = null\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveContact(contact) {\r\n    return async dispatch => {\r\n        const isEdit = !!contact._id\r\n        contact = await ContactService.saveContact(contact);\r\n        if (isEdit) dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        else dispatch({ type: 'ADD_CONTACT', contact })\r\n        return contact;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', id })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nexport default ({ filterBy, setFilterBy, moveToContact, placeHolder }) => {\r\n\r\n    const onKeyHandler = (ev) => {\r\n        if (ev.keyCode === 13) {\r\n            ev.preventDefault()\r\n            moveToContact()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <DebounceInput\r\n                minLength={0}\r\n                className=\"filter-input\"\r\n                debounceTimeout={300}\r\n                type=\"text\"\r\n                placeholder={placeHolder ? placeHolder : 'Search Contacts'}\r\n                onChange={e => setFilterBy({ ...filterBy, term: e.target.value })}\r\n                onKeyDown={onKeyHandler}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n","import avatarLoader from '../assets/gif/avatarLoader.gif'\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst AvatarLoader = ({ isHome }) => {\r\n    console.log(isHome);\r\n    return <div>\r\n         <img src={avatarLoader} alt=\"loading\" className={isHome ? \"avatar avatar-loader home\" : \"avatar avatar-loader\"}/>\r\n    </div>;\r\n}\r\n\r\nexport default AvatarLoader;","import React, { useState, useEffect,useCallback } from 'react';\r\n\r\nimport AvatarLoader from './AvatarLoader'\r\n\r\nimport addFriendImg from '../assets/svg/friends.svg'\r\nimport friendReqSent from '../assets/svg/ok.svg'\r\n\r\n\r\n\r\nexport default ({ contact, onAddFriend, loggedinUser, moveToRoom,setRoomId,roomId }) => {\r\n\r\n\r\n    const [isFriendSent, setIsFriendSent] = useState(false)\r\n    const [isFriend, setIsFriend] = useState(false)\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  const onLoad = useCallback(() => {\r\n    console.log('loaded');\r\n    setIsLoaded(true);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!loggedinUser) return\r\n        let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n        if (friend) {\r\n            setIsFriend(true)\r\n            setRoomId(friend.roomId)\r\n        } else {\r\n            setIsFriend(false)\r\n        }\r\n       \r\n    },[loggedinUser, contact._id]);\r\n\r\n    const toggleIsFriend = (ev) => {\r\n        // ev.preventDefault()\r\n        setIsFriendSent(true)\r\n\r\n    }\r\n    \r\n\r\n    const handelClick = (ev) => {\r\n        onAddFriend(contact._id);\r\n        toggleIsFriend(ev)\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) contact.roomId ?  moveToRoom(ev,contact.roomId) : moveToRoom(ev,contact)  }}>    \r\n           <img  onLoad={onLoad} src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" style={{display: isLoaded? 'block': 'none'}}/> \r\n          {!isLoaded && <AvatarLoader/>}\r\n            <div className=\"user-name-container\">\r\n                <span>Full Name: {contact.fullName}</span>\r\n                <span>User Name: {contact.userName}</span>\r\n            </div>\r\n            {!contact.roomId &&\r\n                <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n                    alt=\"\"\r\n                    className=\"add-friend-img\"\r\n                    onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}      \r\n           \r\n        </div>\r\n       \r\n\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\n// import '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\n\r\n\r\n// import addFriendImg from '../assets/svg/friends.svg'\r\n// import friendReqSent from '../assets/svg/ok.svg'\r\n// import addNote from '../assets/svg/notes.svg'\r\n// import deleteUser from '../assets/svg/delete.svg'\r\n\r\n\r\n// export default ({ contact, onAddFriend, loggedinUser, moveToRoom,isHome }) => {\r\n\r\n\r\n//     const [isFriendSent, setIsFriendSent] = useState(false)\r\n//     const [isFriend, setIsFriend] = useState(false)\r\n//     const [roomId, setRoomId] = useState('')\r\n\r\n//     useEffect(() => {\r\n//         if (!loggedinUser) return\r\n//         let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n//         if (friend) {\r\n//             setIsFriend(true)\r\n//             setRoomId(friend.roomId)\r\n//         } else {\r\n//             setIsFriend(false)\r\n//         }\r\n//     },[loggedinUser, contact._id]);\r\n\r\n//     const toggleIsFriend = (ev) => {\r\n//         // ev.preventDefault()\r\n//         setIsFriendSent(true)\r\n\r\n//     }\r\n    \r\n\r\n//     const handelClick = (ev) => {\r\n//         onAddFriend(contact._id);\r\n//         toggleIsFriend(ev)\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div className=\"swipe-container\">\r\n//       <SwipeableListItem \r\n      \r\n//     swipeLeft={{\r\n//         content:<img className=\"swipe-content-left\" src={deleteUser}/>,\r\n//         action: (ev) => {console.log('balls');},\r\n        \r\n//     }}\r\n//     swipeRight={{\r\n//         content:isHome ? <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg} className=\"add-friend-img\"/> :  <img className=\"swipe-content-right\" src={addNote}/>,\r\n//         action: isHome ?  (ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev) : (ev) => { moveToRoom(ev,roomId)},\r\n        \r\n//     }} \r\n//     >\r\n//       <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) moveToRoom(ev,roomId) }}>    \r\n//           <img src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" />\r\n//             <div className=\"user-name-container\">\r\n//                 <span>Full Name: {contact.fullName}</span>\r\n//                 <span>User Name: {contact.userName}</span>\r\n//             </div>\r\n//             {!contact.roomId &&\r\n//                 <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n//                     alt=\"\"\r\n//                     className=\"add-friend-img\"\r\n//                     onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}      \r\n           \r\n//         </div>\r\n//          </SwipeableListItem>\r\n//         </div>\r\n       \r\n\r\n//     );\r\n// };","import React, { useState } from 'react'\r\nimport { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\nimport addNote from '../assets/svg/add-note.svg'\r\nimport deleteUser from '../assets/svg/delete-user.svg'\r\n\r\nimport ContactPreview from './ContactPreview'\r\n\r\nexport default (props) => {\r\n    const { onAddFriend, loggedinUser, onMoveToRoom, isHome, onDeleteFriend, showNotification } = props\r\n    const [roomId, setRoomId] = useState('')\r\n\r\n\r\n    return (\r\n        <div className=\"contact-list swipe-container\">\r\n            {props.contacts.map(contact => {\r\n                return (\r\n                    <div key={contact._id}>\r\n                        {!isHome ? <SwipeableListItem\r\n                            swipeLeft={{\r\n                                content: <div className=\"delete-btn-container\"><img className=\"swipe-content-left\" src={deleteUser} /></div>,\r\n                                action: () => { showNotification(contact.userName, contact._id) },\r\n                            }}\r\n                            swipeRight={{\r\n                                content: <div className=\"add-btn-container\"><img className=\"swipe-content-right\" src={addNote} /></div>,\r\n                                action: (ev) => { onMoveToRoom(ev, contact.roomId) },\r\n                                key: contact._id\r\n\r\n                            }}\r\n                        >\r\n                            <ContactPreview\r\n                                contact={contact}\r\n                                onAddFriend={onAddFriend}\r\n                                loggedinUser={loggedinUser}\r\n                                key={contact._id}\r\n                                moveToRoom={onMoveToRoom}\r\n                                isHome={isHome}\r\n                                setRoomId={setRoomId}\r\n                                roomId={roomId}\r\n                            />\r\n                        </SwipeableListItem> :\r\n                            <ContactPreview\r\n                                contact={contact}\r\n                                onAddFriend={onAddFriend}\r\n                                loggedinUser={loggedinUser}\r\n                                key={contact._id}\r\n                                moveToRoom={onMoveToRoom}\r\n                                isHome={isHome}\r\n                                setRoomId={setRoomId}\r\n                                roomId={roomId}\r\n\r\n                            />}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n// import React, { useState } from 'react'\r\n// import { SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\r\n// import '@sandstreamdev/react-swipeable-list/dist/styles.css';\r\n\r\n// import addNote from '../assets/svg/notes.svg'\r\n// import deleteUser from '../assets/svg/delete.svg'\r\n\r\n// import ContactPreview from './ContactPreview'\r\n\r\n// export default (props) => {\r\n//     const { onAddFriend, loggedinUser, onMoveToRoom, isHome, onDeleteFriend, showNotification } = props\r\n//     const [roomId, setRoomId] = useState('')\r\n\r\n\r\n//     return (\r\n//         <div className=\"contact-list swipe-container\">\r\n//             {props.contacts.map(contact => {\r\n//                 return (\r\n//                     <div key={contact._id}>\r\n//                         {!isHome ? <SwipeableListItem\r\n//                             swipeLeft={{\r\n//                                 content: <img className=\"swipe-content-left\" src={deleteUser} />,\r\n//                                 action: (ev) => { showNotification(contact.userName, contact._id) },\r\n//                                 // action: (ev) => { onDeleteFriend(contact._id) },\r\n\r\n\r\n//                             }}\r\n//                             swipeRight={{\r\n//                                 content: <img className=\"swipe-content-right\" src={addNote} />,\r\n//                                 action: (ev) => { onMoveToRoom(ev, contact.roomId) },\r\n//                                 key: contact._id\r\n\r\n//                             }}\r\n//                         >\r\n//                             <ContactPreview\r\n//                                 contact={contact}\r\n//                                 onAddFriend={onAddFriend}\r\n//                                 loggedinUser={loggedinUser}\r\n//                                 key={contact._id}\r\n//                                 moveToRoom={onMoveToRoom}\r\n//                                 isHome={isHome}\r\n//                                 setRoomId={setRoomId}\r\n//                                 roomId={roomId}\r\n//                             />\r\n//                         </SwipeableListItem> :\r\n//                             <ContactPreview\r\n//                                 contact={contact}\r\n//                                 onAddFriend={onAddFriend}\r\n//                                 loggedinUser={loggedinUser}\r\n//                                 key={contact._id}\r\n//                                 moveToRoom={onMoveToRoom}\r\n//                                 isHome={isHome}\r\n//                                 setRoomId={setRoomId}\r\n//                                 roomId={roomId}\r\n\r\n//                             />}\r\n//                     </div>\r\n//                 )\r\n//             })}\r\n//         </div>\r\n\r\n//     );\r\n// };\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n\r\n// import ContactPreview from './ContactPreview'\r\n// export default (props) => {\r\n//     const { onAddFriend, loggedinUser, onMoveToRoom, isHome } = props\r\n\r\n\r\n//     return (\r\n//         <div className=\"contact-list\">\r\n//             {props.contacts.map(contact => {\r\n//                 return (\r\n//                     <ContactPreview\r\n//                         contact={contact}\r\n//                         onAddFriend={onAddFriend}\r\n//                         loggedinUser={loggedinUser}\r\n//                         key={contact._id}\r\n//                         moveToRoom={onMoveToRoom}\r\n//                         isHome={isHome}\r\n//                     />\r\n//                 )\r\n//             })}\r\n//         </div>\r\n//     );\r\n// };\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Noty from 'noty';\r\n\r\nimport { loadContacts } from '../actions/ContactActions';\r\nimport { loadRoomById } from '../actions/RoomActions';\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport { UserService } from '../services/UserService'\r\n\r\n\r\nimport Filter from '../cmps/Filter'\r\nimport ContactList from '../cmps/ContactList'\r\n\r\nconst ContactPage = (props) => {\r\n    const [filterBy, setFilterBy] = useState({ term: '', roomId: '' })\r\n    const { contacts, user } = props\r\n\r\n\r\n\r\n    const onMoveToRoom = async (ev, roomId) => {\r\n        if (!props.history) {\r\n            await props.loadRoomById({ roomId });\r\n            return\r\n        }\r\n        props.history.push(`/room/${roomId}`);\r\n    }\r\n\r\n    const loadContacts = async () => {\r\n        await props.loadContacts(filterBy, user);\r\n    };\r\n\r\n    const handleKeyPress = () => {\r\n        if (props.contacts.length === 1) {\r\n            let id = props.contacts[0]._id\r\n            props.history.push(`/room/${id}`);\r\n        }\r\n    }\r\n\r\n    const showNotification = (friendName, friendId) => {\r\n        //bgc \r\n        let n = new Noty({\r\n            text: `Remove ${friendName} from your contact list?`,\r\n            layout: 'center',\r\n            theme: 'sunset',\r\n            type: 'alert',\r\n            // theme: 'bootstrap-v4',\r\n\r\n            animation: {\r\n                open: 'animated bounceInRight', // Animate.css class names\r\n                close: 'animated bounceOutRight' // Animate.css class names\r\n            },\r\n            buttons: [\r\n                Noty.button('YES', 'btn btn-danger', () => {\r\n                    onDeleteFriend(friendId)\r\n                    n.close();\r\n                }, { id: 'button1', 'data-status': 'ok' }),\r\n\r\n                Noty.button('NO', 'btn btn-error', () => {\r\n                    n.close();\r\n                })\r\n            ]\r\n        });\r\n        n.show()\r\n    }\r\n\r\n    const onDeleteFriend = (friendId) => {\r\n        let friendIdx = user.friends.findIndex(friend => friend._id === friendId)\r\n        user.friends.splice(friendIdx, 1)\r\n        props.updateUser(user)\r\n        UserService.updateFriend(user._id, friendId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadContacts()\r\n    }, [filterBy])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {user && <div>\r\n                <Filter\r\n                    filterBy={filterBy}\r\n                    setFilterBy={setFilterBy}\r\n                    moveToContact={handleKeyPress} />\r\n                {!!contacts && <ContactList showNotification={showNotification} onDeleteFriend={onDeleteFriend} onMoveToRoom={onMoveToRoom} loggedinUser={user} contacts={contacts.length ? contacts : user.friends} />}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts,\r\n    loadRoomById,\r\n    updateUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage);","function uploadImg(ev) {\r\n    const CLOUD_NAME = \"tamir\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n        if (ev.target) {\r\n            formData.append('file', ev.target.files[0])\r\n        } else {\r\n            formData.append('file', ev)\r\n        }\r\n    formData.append('upload_preset', 'u1inrfbp'); // second parameter is the upload preset\r\n\r\n    return fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData,\r\n            secure:true\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport default {\r\n    uploadImg\r\n}","import React, { useState } from 'react';\r\nimport {\r\n    FloatingMenu,\r\n    MainButton,\r\n    ChildButton,\r\n} from 'react-floating-button-menu';\r\nimport MdAdd from '@material-ui/icons/Add';\r\nimport MdClose from '@material-ui/icons/Clear';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport LocIcon from '@material-ui/icons/Room';\r\n\r\n// import SvgIcon from '@material-ui/core/SvgIcon';    //PROBABLY NOT NEEDED\r\n// import styled from 'styled-components' //PROBABLY NOT NEEDED\r\n\r\nexport default ({ setNoteType, setNoteInputType, setNoteData }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    return (\r\n        <FloatingMenu\r\n            slideSpeed={500}\r\n            direction=\"up\"\r\n            spacing={8}\r\n            isOpen={isOpen}\r\n            className=\"button-menu\"\r\n        >\r\n            <MainButton\r\n                iconResting={<MdAdd style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                iconActive={<MdClose style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                backgroundColor=\"black\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                size={56}\r\n            />\r\n            <ChildButton\r\n                icon={<TextFieldsIcon style={{ fontSize: 20, fill: '#51a255' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteText'); setIsOpen(!isOpen); setNoteInputType('InputText') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ImageIcon style={{ fontSize: 20, fill: '#28b5f2' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteImg'); setIsOpen(!isOpen); setNoteInputType('InputImg') }}\r\n            />\r\n            <ChildButton\r\n                icon={<VideocamIcon style={{ fontSize: 20, fill: '#ff0000' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteVideo'); setIsOpen(!isOpen); setNoteInputType('InputVideo') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ListIcon style={{ fontSize: 20, fill: '#ffa350' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteTodo'); setIsOpen(!isOpen); setNoteInputType('InputTodo'); setNoteData([]) }}\r\n            />\r\n              <ChildButton\r\n                icon={<LocIcon style={{ fontSize: 20, fill: '#800080' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteLoc'); setIsOpen(!isOpen); setNoteInputType('InputLoc'); setNoteData(null) }}\r\n            />\r\n        </FloatingMenu>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-text\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <p>{note.data}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-img\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <img src={note.data} alt={note.data} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    const formattedVidLink = () => {\r\n        return 'https://www.youtube.com/embed/' + note.data\r\n    }\r\n    return (\r\n        <div className=\"note-video\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <iframe width=\"100%\" allow=\"fullscreen\" src={formattedVidLink()} title=\"Video Player\"></iframe>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, createRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport ProgressBar from '@ramonak/react-progress-bar';\r\n\r\nimport { UtilService } from '../../services/UtilService'\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport xmark from '../../assets/svg/cross.svg'\r\nimport ArrowIcon from '../../assets/svg/arrow.svg'\r\n\r\nimport { saveRoom } from '../../actions/RoomActions';\r\n//TODO: IMPROVE EDIT INPUT AND MINUS UI +++ reflect trough socket\r\n\r\nconst NoteTodo = ({ note, saveRoom, room, userId, isEdit, currTodoIdx, setCurrTodoIdx, setIsNewTodo, isNewTodo }) => {\r\n    const [editedTodo, setEditedTodo] = useState('');\r\n    const [newTodo, setNewTodo] = useState('');\r\n    const [progress, setProgress] = useState(0)\r\n    const editInputRef = createRef();\r\n    const newTodoInputRef = createRef()\r\n\r\n    const toggleIsDone = async (idx) => {\r\n        if (isEdit) return\r\n        note.data[idx].isDone = !note.data[idx].isDone\r\n        await saveRoom(room)\r\n        SocketService.emit(\"roomUpdated\", { room, userId });\r\n    }\r\n\r\n\r\n    const addTodo = () => {\r\n\r\n        let todoToAdd = { text: newTodo, isDone: false, _id: UtilService.makeId(5) }\r\n\r\n        note.data.push(todoToAdd);\r\n        setIsNewTodo(false)\r\n        setNewTodo('')\r\n        newTodoInputRef.current.value = ''\r\n\r\n\r\n    };\r\n\r\n    const removeTodo = (idx) => {\r\n        note.data.splice(idx, 1)\r\n    }\r\n\r\n    const culcProgress = () => {\r\n        let doneTodosCount = note.data.reduce((acc, todo) => {\r\n            if (todo.isDone) acc++\r\n            return acc;\r\n        }, 0);\r\n        let prog = parseInt(doneTodosCount / note.data.length * 100)\r\n        setProgress(prog)\r\n    }\r\n\r\n    useEffect(() => {\r\n        culcProgress()\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if (editInputRef.current) editInputRef.current.focus()\r\n        if (currTodoIdx !== '' && editInputRef.current) note.data[currTodoIdx].text = editedTodo\r\n    }, [editedTodo, currTodoIdx])\r\n\r\n    return (\r\n        <div className=\"note-todo\">\r\n            <div className=\"todo-header\">\r\n                {note.header && <h4>{note.header}</h4>}\r\n                {isEdit && <img src={PlusIcon} className=\"new-todo-btn\" onClick={() => { setIsNewTodo(true) }} />}\r\n            </div>\r\n            <ul>\r\n                {!!note.data.length && note.data.map((todo, idx) => {\r\n                    return (\r\n                        <li key={todo._id} onClick={() => {\r\n                            if (isEdit) {\r\n                                setCurrTodoIdx(idx);\r\n                                setEditedTodo(todo.text)\r\n                            }\r\n                        }}>\r\n                            <div>\r\n                                <input type=\"checkbox\" onClick={(ev) => toggleIsDone(idx)} checked={todo.isDone} readOnly />\r\n                                {(currTodoIdx !== idx) && <span className={todo.isDone ? 'done' : ''} >{todo.text}</span>}\r\n                            </div>\r\n                            {(isEdit && currTodoIdx === idx) && <input type=\"text\" value={editedTodo} ref={editInputRef} onChange={(e) => { setEditedTodo(e.target.value); }} />\r\n                            }\r\n                            {isEdit && <img src={xmark} className=\"remove-todo-btn\" onClick={() => removeTodo(idx)} />}\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n            {isNewTodo && <div className=\"add-todo-container\">\r\n                <input type=\"text\" className=\"add-todo-input\" placeholder=\"New Todo\" ref={newTodoInputRef} onChange={e => setNewTodo(e.target.value)} />\r\n                <img src={ArrowIcon} className=\"add-todo-btn\" onClick={() => addTodo()} />\r\n            </div>}\r\n            <div className=\"progress-bar\">\r\n                <ProgressBar completed={progress} labelSize={!progress ? '0' : '0.75rem'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//checkbox read only prop makes error go away, we will let it stay for a while\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    saveRoom,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTodo);","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nimport PinIcon from '../../assets/svg/pin.svg'\r\n\r\n\r\n\r\nexport default ({ note }) => {\r\n    const mapsSelector = () => {\r\n        if /* if we're on iOS, open in Apple Maps */\r\n            ((navigator.platform.indexOf(\"iPhone\") != -1) ||\r\n            (navigator.platform.indexOf(\"iPod\") != -1) ||\r\n            (navigator.platform.indexOf(\"iPad\") != -1))\r\n            window.open(`maps://maps.google.com/maps?daddr=${note.data.coords.lat},${note.data.coords.lng}&amp;ll=`);\r\n\r\n        else /* else use Google */\r\n            window.open(`https://maps.google.com/maps?daddr=${note.data.coords.lat},${note.data.coords.lng}&amp;ll=\"`);\r\n    }\r\n\r\n    const renderMarkers = (map, maps) => {\r\n        let marker = new maps.Marker({\r\n            position: { lat: note.data.coords.lat, lng: note.data.coords.lng },\r\n            map,\r\n            icon: PinIcon\r\n        });\r\n        return marker;\r\n    };\r\n\r\n    return (\r\n        <div className=\"note-loc\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            {note.data.name && <h6>{note.data.name}</h6>}\r\n            {note && <div style={{ height: '30vh', width: '100%' }} onClick={mapsSelector}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA' }}\r\n                    center={note.data.coords}\r\n                    yesIWantToUseGoogleMapApiInternals={true}\r\n                    defaultZoom={18}\r\n                    distanceToMouse={() => { }}\r\n                    onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n                >\r\n                </GoogleMapReact>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default ({ isPinned }) => {\r\n    return <svg className={isPinned ? 'note-pin-icon pinned' : 'note-pin-icon'}  enable-background=\"new 0 0 494.982 494.982\" viewBox=\"0 0 494.982 494.982\"  xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g>\r\n    <g>\r\n    <path className=\"clr clr-5\" d=\"m15.871 486.565 28.585-18.848c26.039-17.169 50.274-36.934 72.332-58.992l106.088-106.088-30.521-30.521-106.087 106.089c-22.058 22.058-41.824 46.293-58.992 72.332l-18.848 28.585c-3.227 4.894 2.549 10.67 7.443 7.443z\" />\r\n    <path className=\"clr clr-4\" d=\"m55.526 450.537c17.168-26.039 36.934-50.274 58.992-72.332l91.963-91.963-14.125-14.125-106.088 106.088c-22.058 22.058-41.824 46.293-58.992 72.332l-18.848 28.585c-3.227 4.894 2.549 10.67 7.443 7.443l28.126-18.545z\" />\r\n    <path className=\"clr clr-3\" d=\"m431.826 139.878c-8.131-8.131-68.579-68.579-76.711-76.711l-108.84 101.993 83.559 83.559z\" />\r\n    <path className=\"clr clr-2\" d=\"m391.099 99.151c-16.327-16.327-32.106-32.106-35.984-35.984l-108.84 101.993 35.984 35.984z\" />\r\n    <path className=\"clr clr-1\" d=\"m479.42 98.532-82.96-82.96c-10.726-10.726-28.277-10.726-39.003 0l-6.727 6.728c-10.726 10.726-10.726 28.277 0 39.003l82.96 82.96c10.726 10.726 28.277 10.726 39.003 0l6.728-6.728c10.725-10.725 10.725-28.277-.001-39.003z\" />\r\n    <path className=\"clr clr-3\" d=\"m398.94 72.924 8.231-8.23c7.855-7.855 18.701-11.002 28.958-9.453l-39.668-39.668c-10.726-10.726-28.277-10.726-39.003 0l-6.728 6.728c-10.726 10.726-10.726 28.277 0 39.003l38.508 38.508c-.857-9.628 2.374-19.56 9.702-26.888z\" />\r\n    <path className=\"clr clr-1\" d=\"m327.702 384.766c18.417-33.878 23.816-64.549 24.813-85.94.824-17.688-5.84-34.896-18.361-47.417l-90.57-90.57c-12.521-12.521-29.729-19.185-47.417-18.361-21.391.997-52.062 6.396-85.94 24.813-7.866 4.277-9.384 14.942-3.053 21.273l199.255 199.255c6.331 6.331 16.997 4.813 21.273-3.053z\" />\r\n    <path className=\"clr clr-3\" d=\"m165.482 223.656c32.836-20.465 61.329-28.735 80.898-31.985 12.602-2.093 24.431-.004 33.785 5.749l-36.581-36.581c-12.521-12.521-29.729-19.185-47.417-18.361-21.391.997-52.062 6.396-85.941 24.813-7.866 4.277-9.384 14.942-3.053 21.273l51.003 51.003c-1.541-5.246 1.296-12.165 7.306-15.911z\" /></g>\r\n    <path d=\"m2.152 474.996c-3.396 5.159-2.718 11.812 1.649 16.181 4.369 4.368 11.022 5.046 16.183 1.65 33.379-21.971 63.783-40.488 101.729-78.435l38.352-38.352c2.929-2.93 2.929-7.678 0-10.607-2.93-2.928-7.678-2.928-10.607 0l-38.352 38.353c-36.021 36.022-66.054 54.582-90.754 70.841 16.023-24.346 34.617-54.531 70.841-90.755l100.349-100.35 19.915 19.915-37.25 37.249c-2.929 2.93-2.929 7.678 0 10.607 2.93 2.928 7.678 2.928 10.607 0l37.249-37.249 79.063 79.063c9.885 9.882 26.49 7.506 33.165-4.775 19.49-35.851 24.743-68.28 25.717-89.174.884-18.978-6.019-37.569-18.966-51.399l89.811-95.967c13.697 11.335 34.221 10.681 47.143-2.241l6.729-6.729c13.676-13.677 13.676-35.933-.001-49.61l-31.18-31.179c-2.927-2.927-7.676-2.93-10.606.001-2.929 2.929-2.929 7.677.001 10.606l31.179 31.178c7.829 7.83 7.829 20.568.001 28.397l-6.729 6.728c-7.826 7.829-20.567 7.829-28.396 0-8.836-8.836-71.82-71.82-82.96-82.96-7.806-7.806-7.804-20.593.001-28.396l6.728-6.729c7.805-7.805 20.593-7.804 28.396.001l27.031 27.031c2.93 2.928 7.678 2.928 10.607 0 2.929-2.93 2.929-7.678 0-10.607l-27.031-27.03c-13.67-13.67-35.942-13.667-49.61-.001l-6.727 6.728c-12.905 12.905-13.594 33.428-2.242 47.144l-95.967 89.811c-13.828-12.947-32.404-19.842-51.4-18.966-20.892.974-53.322 6.226-89.173 25.716-12.283 6.677-14.655 23.286-4.774 33.166l79.063 79.063-100.351 100.351c-38.07 38.073-56.665 68.656-78.433 101.731zm351.53-400.15 66.449 66.45-89.66 95.806-72.595-72.595zm-241.203 108.399c-2.794-2.792-2.132-7.498 1.331-9.381 33.35-18.13 63.385-23.009 82.708-23.909 15.524-.727 30.756 5.165 41.764 16.172l90.57 90.57c11.002 11.001 16.896 26.224 16.172 41.763-.9 19.323-5.779 49.358-23.91 82.708-1.874 3.443-6.569 4.145-9.38 1.332-4.936-4.936-194.483-194.483-199.255-199.255z\"/></g></svg>\r\n}\r\n\r\n\r\n// reds:\r\n// clr-1:#FB5252\r\n// clr-2:#F04141\r\n// clr-3:#FF4A3C\r\n// clr-4:#b1dbfc\r\n// clr-5:#dfebfa","import React from 'react';\r\n\r\n\r\nexport default ({ fill }) => {\r\n\r\n    return <svg className=\"circle-icon\" style={{ fill }} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 512 512\" xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"color-pallete-icon\" enableBackground=\"new 0 0 512.037 512.037\" viewBox=\"0 0 512.037 512.037\" xmlns=\"http://www.w3.org/2000/svg\"><g>\r\n        <g clipRule=\"evenodd\" fillRule=\"evenodd\">\r\n            <path d=\"m237.033 233.985 41.012 41.013 64.978-69.184 153.518-163.455c7.154-7.617 7.389-19.481 0-26.87s-19.253-7.154-26.87 0l-163.455 153.519z\" fill=\"#6d91ac\" />\r\n            <path d=\"m278.045 274.998-41.012-41.013c-68.762 18.425-23.075 64.087-57.278 98.291 28.514 16.463 98.291-4.426 98.29-57.278z\" fill=\"#f4e9e2\" />\r\n            <path d=\"m179.754 332.276c34.203-34.203-11.484-79.866 57.278-98.291l69.183-64.977c-7.007-13.059-10.558-27.482-10.655-41.924-.175-26.127 24.949-56.528-41.774-63.75-63.943-6.921-130.337 14.12-179.356 63.14-85.915 85.916-85.915 225.211 0 311.127 85.916 85.916 225.211 85.916 311.127 0 49.019-49.019 70.061-115.413 63.14-179.356-7.222-66.723-37.623-41.6-63.75-41.774-14.442-.097-28.866-3.648-41.925-10.655l-64.978 69.184c.002 52.85-69.775 73.739-98.29 57.276zm5.074-164.71c-15.307 6.34-32.857-.929-39.197-16.236s.929-32.856 16.236-39.197 32.857.929 39.198 16.236c6.339 15.307-.93 32.856-16.237 39.197zm-66.154 66.13c-6.34 15.307-23.89 22.576-39.197 16.236-15.307-6.341-22.576-23.89-16.236-39.197s23.89-22.577 39.197-16.236 22.576 23.89 16.236 39.197zm-.017 93.538c6.34 15.307-.929 32.857-16.236 39.197s-32.856-.929-39.197-16.236c-6.34-15.307.929-32.857 16.236-39.197s32.857.929 39.197 16.236zm159.669 66.171c15.307-6.34 32.857.929 39.198 16.236 6.34 15.307-.929 32.856-16.236 39.197s-32.857-.929-39.197-16.236c-6.341-15.307.928-32.857 16.235-39.197zm-93.539-.016c15.307 6.34 22.576 23.89 16.236 39.197-6.341 15.307-23.89 22.576-39.197 16.236-15.308-6.341-22.577-23.89-16.236-39.197 6.341-15.308 23.89-22.577 39.197-16.236zm159.693-66.114c6.34-15.307 23.89-22.577 39.197-16.236 15.307 6.34 22.576 23.889 16.236 39.197-6.341 15.307-23.89 22.577-39.197 16.236-15.308-6.341-22.577-23.89-16.236-39.197z\" fill=\"#ddb9a3\" />\r\n            <path d=\"m145.63 151.33c6.341 15.307 23.89 22.576 39.197 16.236 15.307-6.341 22.576-23.89 16.236-39.197s-23.89-22.577-39.198-16.236c-15.306 6.34-22.575 23.89-16.235 39.197z\" fill=\"#000\" />\r\n            <path d=\"m118.674 233.696c6.34-15.307-.929-32.856-16.236-39.197s-32.857.929-39.197 16.236c-6.341 15.307.929 32.856 16.236 39.197 15.307 6.34 32.856-.929 39.197-16.236z\" fill=\"#ffa350\" />\r\n            <path d=\"m118.657 327.234c-6.341-15.307-23.89-22.577-39.197-16.236s-22.577 23.89-16.236 39.197 23.89 22.576 39.197 16.236 22.576-23.889 16.236-39.197z\" fill=\"#f78888\" />\r\n            <path d=\"m184.787 393.389c-15.307-6.341-32.856.929-39.197 16.236s.929 32.857 16.236 39.197 32.856-.929 39.197-16.236c6.341-15.308-.929-32.857-16.236-39.197z\" fill=\"#fff59d\" />\r\n            <path d=\"m278.326 393.405c-15.307 6.34-22.576 23.89-16.236 39.197 6.341 15.307 23.89 22.577 39.197 16.236s22.576-23.89 16.236-39.197-23.89-22.576-39.197-16.236z\" fill=\"#90ccf4\" />\r\n            <path d=\"m344.48 327.275c-6.341 15.307.929 32.856 16.236 39.197s32.857-.929 39.197-16.236-.929-32.856-16.236-39.197-32.857.929-39.197 16.236z\" fill=\"#4caf50\" /></g>\r\n        <g>\r\n            <path d=\"m75.633 301.76c-20.377 8.44-30.088 31.886-21.648 52.263 6.375 15.388 21.303 24.693 37.008 24.693 5.091 0 10.267-.979 15.255-3.045 20.377-8.44 30.088-31.885 21.648-52.262-8.441-20.378-31.884-30.09-52.263-21.649zm22.961 55.433c-10.188 4.219-21.911-.635-26.132-10.824-4.22-10.189.636-21.912 10.824-26.132 2.495-1.033 5.081-1.522 7.627-1.522 7.852 0 15.317 4.653 18.504 12.347 4.221 10.188-.634 21.911-10.823 26.131z\" />\r\n            <path d=\"m54.002 237.522c4.089 9.872 11.777 17.56 21.648 21.648 4.99 2.067 10.163 3.045 15.255 3.045 15.704 0 30.634-9.306 37.007-24.693 8.44-20.377-1.271-43.822-21.647-52.262-9.872-4.089-20.744-4.089-30.615 0s-17.559 11.777-21.647 21.648c-4.09 9.871-4.09 20.743-.001 30.614zm18.478-22.96c2.044-4.936 5.888-8.78 10.824-10.824 2.468-1.022 5.061-1.533 7.653-1.533s5.187.511 7.654 1.533c10.188 4.22 15.044 15.942 10.824 26.131-4.221 10.188-15.944 15.045-26.131 10.824-4.936-2.044-8.78-5.888-10.824-10.824-2.045-4.935-2.045-10.371 0-15.307z\" />\r\n            <path d=\"m158.04 176.805c4.936 2.044 10.121 3.066 15.308 3.066 5.185 0 10.372-1.022 15.307-3.066 9.871-4.089 17.559-11.777 21.648-21.648 4.088-9.871 4.088-20.744 0-30.615s-11.776-17.559-21.647-21.648-20.744-4.089-30.615 0c-9.872 4.088-17.56 11.776-21.648 21.648-4.088 9.871-4.088 20.744 0 30.614 4.087 9.871 11.775 17.56 21.647 21.649zm-3.171-44.61c2.044-4.936 5.888-8.779 10.824-10.824 2.468-1.022 5.06-1.533 7.653-1.533s5.186.511 7.654 1.533c4.936 2.044 8.779 5.888 10.824 10.824 2.044 4.936 2.044 10.372 0 15.307-2.044 4.936-5.888 8.78-10.824 10.824-4.936 2.044-10.372 2.044-15.308 0s-8.779-5.889-10.824-10.825c-2.043-4.934-2.043-10.37.001-15.306z\" />\r\n            <path d=\"m157.999 458.06c4.99 2.067 10.163 3.045 15.255 3.045 15.704 0 30.634-9.306 37.007-24.693 4.089-9.871 4.089-20.744 0-30.615s-11.777-17.56-21.648-21.648c-9.872-4.089-20.744-4.089-30.615 0s-17.559 11.777-21.648 21.648c-8.439 20.378 1.272 43.823 21.649 52.263zm-3.17-44.608c2.044-4.936 5.889-8.78 10.824-10.824 2.468-1.022 5.061-1.533 7.653-1.533s5.186.511 7.654 1.533c4.935 2.044 8.779 5.888 10.823 10.824s2.044 10.372 0 15.308c-4.22 10.188-15.941 15.043-26.131 10.824-10.188-4.222-15.043-15.944-10.823-26.132z\" />\r\n            <path d=\"m274.499 458.077c4.936 2.044 10.121 3.066 15.307 3.066s10.372-1.022 15.307-3.067c9.872-4.088 17.56-11.776 21.648-21.648 4.088-9.871 4.088-20.744 0-30.614-4.088-9.871-11.776-17.56-21.648-21.648-9.871-4.089-20.743-4.089-30.614 0-20.377 8.44-30.088 31.885-21.648 52.263 4.089 9.871 11.777 17.559 21.648 21.648zm7.654-55.433c2.468-1.022 5.061-1.533 7.654-1.533s5.186.511 7.654 1.533c4.936 2.044 8.779 5.888 10.824 10.824 2.044 4.936 2.044 10.372 0 15.307-2.044 4.936-5.888 8.779-10.824 10.824s-10.372 2.044-15.307 0c-4.936-2.044-8.78-5.888-10.824-10.824-4.221-10.189.634-21.911 10.823-26.131z\" />\r\n            <path d=\"m372.144 378.756c15.704 0 30.633-9.305 37.007-24.693 4.089-9.871 4.089-20.744 0-30.615-4.089-9.872-11.777-17.56-21.648-21.648-20.377-8.441-43.821 1.271-52.262 21.647-8.44 20.377 1.271 43.822 21.647 52.262 4.99 2.068 10.164 3.047 15.256 3.047zm-18.426-47.654c4.22-10.188 15.943-15.043 26.131-10.824 10.188 4.22 15.044 15.943 10.824 26.131s-15.94 15.044-26.132 10.824c-10.187-4.22-15.042-15.942-10.823-26.131z\" />\r\n            <path d=\"m503.612 8.418c-11.14-11.14-29.056-11.235-40.788-.218l-153.092 143.787c-2.685-8.018-4.114-16.474-4.171-24.97-.032-4.704 1.005-9.935 2.103-15.473 2.426-12.244 5.176-26.121-3.679-38.173-7.985-10.868-23.594-17.216-49.122-19.979-53.057-5.746-106.697 7.146-151.041 36.294-4.615 3.034-5.897 9.234-2.864 13.849s9.235 5.897 13.849 2.864c40.475-26.605 89.448-38.369 137.903-33.124 23.692 2.565 32.195 7.907 35.156 11.938 3.398 4.625 2.334 11.564.178 22.443-1.243 6.273-2.529 12.76-2.484 19.494.091 13.626 3.004 27.178 8.454 39.597l-62.038 58.267c-45.251 13.055-46.243 39.977-47.04 61.685-.537 14.623-1 27.252-12.254 38.506-2.198 2.199-3.249 5.294-2.843 8.376.406 3.083 2.222 5.801 4.915 7.355 7.952 4.591 18.161 6.829 29.188 6.829 15.456 0 32.515-4.398 47.203-12.878 22.479-12.979 35.411-32.679 36.773-55.795l57.365-61.078c12.421 5.451 25.968 8.364 39.597 8.455 6.758.047 13.221-1.241 19.494-2.483 10.881-2.155 17.82-3.219 22.444.178 4.03 2.961 9.373 11.464 11.938 35.156 6.886 63.618-15.082 126.021-60.27 171.208-81.879 81.879-215.105 81.879-296.984 0-70.092-70.09-81.507-180.985-27.142-263.682 3.034-4.615 1.752-10.815-2.863-13.849-4.615-3.035-10.816-1.753-13.849 2.863-28.631 43.552-41.621 96.267-36.578 148.438 5.112 52.886 28.654 102.738 66.29 140.374 43.441 43.441 101.2 67.365 162.635 67.365s119.193-23.924 162.634-67.365c49.492-49.491 73.552-117.833 66.011-187.503-2.763-25.528-9.112-41.136-19.979-49.121-12.052-8.855-25.93-6.105-38.174-3.679-5.538 1.097-10.771 2.144-15.473 2.102-8.498-.057-16.952-1.486-24.97-4.171l143.786-153.094c11.018-11.731 10.923-29.647-.218-40.788zm-262.467 309.149c-15.374 8.876-32.501 11.493-44.984 9.672 7.8-13.57 8.323-27.813 8.763-39.806.725-19.763 1.231-33.205 29.232-42.183l33.719 33.72c-1.761 21.055-17.265 33.132-26.73 38.597zm248.107-282.054-211.432 225.118-26.42-26.42 225.117-211.432c3.809-3.577 9.499-3.673 12.953-.218 3.455 3.455 3.359 9.144-.218 12.952z\" />\r\n            <path d=\"m74.438 136.473c5.523 0 10-4.477 10-10s-4.477-10-10-10h-.007c-5.523 0-9.996 4.477-9.996 10s4.48 10 10.003 10z\" />\r\n        </g>\r\n    </g>\r\n    </svg>\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport NotePinIcon from '../icons/NotePinIcon'\r\nimport CircleIcon from '../icons/CircleIcon'\r\nimport ColorPalleteIcon from '../icons/ColorPaletteIcon'\r\n\r\nexport default ({ togglePinned, note, user, setNoteColor }) => {\r\n    const [isPalleteOpen, setIsPalleteOpen] = useState(false)\r\n    const colors = ['#ffa350', '#f78888', '#fff59d', '#90ccf4', '#4caf50']\r\n\r\n\r\n    const changeColor = (color) => {\r\n        setNoteColor(color)\r\n        setIsPalleteOpen(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"features-container\">\r\n            <i onClick={() => togglePinned(note)}><NotePinIcon isPinned={note.isPinned} /></i>\r\n            <div className=\"color-pallete\">\r\n                <i onClick={() => setIsPalleteOpen(!isPalleteOpen)}><ColorPalleteIcon /></i>\r\n\r\n                {isPalleteOpen && <div className=\"colors-container\">{\r\n                    colors.map((color, idx) => {\r\n                        return (<CSSTransition\r\n                            key={idx}\r\n                            classNames=\"fade\"\r\n                            timeout={300}\r\n                            in={isPalleteOpen}\r\n                            appear={true}>\r\n                            <i onClick={() => changeColor(color)}><CircleIcon fill={color} /></i>\r\n                        </CSSTransition>\r\n                        )\r\n                    })\r\n                }\r\n                </div>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n//second try after looking in doc https://github.com/reactjs/react-transition-group/blob/master/Migration.md\r\n// return (\r\n//     <div className=\"features-container\">\r\n//         <i onClick={() => togglePinned(note)}><StarIcon isPinned={user.pinnedNotes.find(id => id === note._id) ? true : false} /></i>\r\n//         <div className=\"color-pallete\">\r\n//             {/* <img src={colorPallete} alt=\"Change Color\" className=\"color-pallete-icon\" onClick={() => setIsPalleteOpen(!isPalleteOpen)} /> */}\r\n//             <i onClick={() => setIsPalleteOpen(!isPalleteOpen)}><ColorPalleteIcon /></i>\r\n\r\n//             {isPalleteOpen && <div className=\"colors-container\">{\r\n//                 colors.map((color, idx) => {\r\n//                     return (<CSSTransition\r\n//                         key={idx}\r\n//                         classNames=\"example\"\r\n//                         timeout={{ enter: 500, exit: 300 }}>\r\n//                         <i onClick={() => changeColor(color)}><CircleIcon fill={color} /></i>\r\n//                     </CSSTransition>\r\n//                     )\r\n//                 })\r\n//             }\r\n//             </div>}\r\n//         </div>\r\n//     </div >\r\n// )\r\n// }\r\n\r\n\r\n\r\n//before started with animations\r\n// import React, { useState } from 'react';\r\n// import ReactCSSTransitionGroup from 'react-transition-group';\r\n\r\n// import StarIcon from '../icons/StarIcon'\r\n// import CircleIcon from '../icons/CircleIcon'\r\n// import ColorPalleteIcon from '../icons/ColorPaletteIcon'\r\n\r\n// export default ({ togglePinned, note, user, setNoteColor }) => {\r\n//     const [isPalleteOpen, setIsPalleteOpen] = useState(false)\r\n\r\n\r\n//     const changeColor = (color) => {\r\n//         setNoteColor(color)\r\n//         setIsPalleteOpen(false)\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div className=\"features-container\">\r\n//             <i onClick={() => togglePinned(note)}><StarIcon isPinned={user.pinnedNotes.find(id => id === note._id) ? true : false} /></i>\r\n//             <div className=\"color-pallete\">\r\n//                 {/* <img src={colorPallete} alt=\"Change Color\" className=\"color-pallete-icon\" onClick={() => setIsPalleteOpen(!isPalleteOpen)} /> */}\r\n//                 <i onClick={() => setIsPalleteOpen(!isPalleteOpen)}><ColorPalleteIcon /></i>\r\n//                 {isPalleteOpen && <div className=\"colors-container\">\r\n//                     <i onClick={() => changeColor('#ffa350')}><CircleIcon fill=\"#ffa350\" /></i>\r\n//                     <i onClick={() => changeColor('#f78888')}><CircleIcon fill=\"#f78888\" /></i>\r\n//                     <i onClick={() => changeColor('#fff59d')}><CircleIcon fill=\"#fff59d\" /></i>\r\n//                     <i onClick={() => changeColor('#90ccf4')}><CircleIcon fill=\"#90ccf4\" /></i>\r\n//                     <i onClick={() => changeColor('#4caf50')}><CircleIcon fill=\"#4caf50\" /></i>\r\n//                 </div>}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <svg className=\"remove-icon\"  viewBox=\"0 0 512 512\"  xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m256 512c-141.160156 0-256-114.839844-256-256s114.839844-256 256-256 256 114.839844 256 256-114.839844 256-256 256zm0-475.429688c-120.992188 0-219.429688 98.4375-219.429688 219.429688s98.4375 219.429688 219.429688 219.429688 219.429688-98.4375 219.429688-219.429688-98.4375-219.429688-219.429688-219.429688zm0 0\" /><path d=\"m347.429688 365.714844c-4.679688 0-9.359376-1.785156-12.929688-5.359375l-182.855469-182.855469c-7.144531-7.144531-7.144531-18.714844 0-25.855469 7.140625-7.140625 18.714844-7.144531 25.855469 0l182.855469 182.855469c7.144531 7.144531 7.144531 18.714844 0 25.855469-3.570313 3.574219-8.246094 5.359375-12.925781 5.359375zm0 0\" /><path d=\"m164.570312 365.714844c-4.679687 0-9.355468-1.785156-12.925781-5.359375-7.144531-7.140625-7.144531-18.714844 0-25.855469l182.855469-182.855469c7.144531-7.144531 18.714844-7.144531 25.855469 0 7.140625 7.140625 7.144531 18.714844 0 25.855469l-182.855469 182.855469c-3.570312 3.574219-8.25 5.359375-12.929688 5.359375zm0 0\" /></svg>)\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"edit-icon\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 477.873 477.873\"  xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M392.533,238.937c-9.426,0-17.067,7.641-17.067,17.067V426.67c0,9.426-7.641,17.067-17.067,17.067H51.2\r\n           c-9.426,0-17.067-7.641-17.067-17.067V85.337c0-9.426,7.641-17.067,17.067-17.067H256c9.426,0,17.067-7.641,17.067-17.067\r\n           S265.426,34.137,256,34.137H51.2C22.923,34.137,0,57.06,0,85.337V426.67c0,28.277,22.923,51.2,51.2,51.2h307.2\r\n           c28.277,0,51.2-22.923,51.2-51.2V256.003C409.6,246.578,401.959,238.937,392.533,238.937z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M458.742,19.142c-12.254-12.256-28.875-19.14-46.206-19.138c-17.341-0.05-33.979,6.846-46.199,19.149L141.534,243.937\r\n           c-1.865,1.879-3.272,4.163-4.113,6.673l-34.133,102.4c-2.979,8.943,1.856,18.607,10.799,21.585\r\n           c1.735,0.578,3.552,0.873,5.38,0.875c1.832-0.003,3.653-0.297,5.393-0.87l102.4-34.133c2.515-0.84,4.8-2.254,6.673-4.13\r\n           l224.802-224.802C484.25,86.023,484.253,44.657,458.742,19.142z M434.603,87.419L212.736,309.286l-66.287,22.135l22.067-66.202\r\n           L390.468,43.353c12.202-12.178,31.967-12.158,44.145,0.044c5.817,5.829,9.095,13.72,9.12,21.955\r\n           C443.754,73.631,440.467,81.575,434.603,87.419z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"save-icon\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m490.647 133.435c-.101-.103-128.128-129.127-128.02-129.019-2.927-2.938-6.813-4.416-10.627-4.416-13.006 0-293.619 0-305 0-16.542 0-30 13.458-30 30v452c0 16.542 13.458 30 30 30h418c16.542 0 30-13.458 30-30v-338c0-3.958-1.564-7.755-4.353-10.565zm-217.647-103.435v66c0 8.284 6.716 15 15 15s15-6.716 15-15v-66h34v115h-162v-115zm192 452h-418v-452h98v130c0 8.284 6.716 15 15 15h192c8.284 0 15-6.716 15-15v-108.587l98 98.766z\" /><path d=\"m96 241c-8.284 0-15 6.716-15 15v176c0 8.284 6.716 15 15 15h320c8.284 0 15-6.716 15-15v-176c0-8.284-6.716-15-15-15zm305 176h-290v-146h290z\" /><path d=\"m160 335h48c8.284 0 15-6.716 15-15s-6.716-15-15-15h-48c-8.284 0-15 6.716-15 15s6.716 15 15 15z\" /></g></svg>\r\n\r\n\r\n}\r\n","import React, { useEffect, useState, createRef, useCallback } from 'react'\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Moment from 'react-moment';\r\n\r\nimport NoteText from \"./NoteText\";\r\nimport NoteImg from \"./NoteImg\";\r\nimport NoteVideo from \"./NoteVideo\";\r\nimport NoteTodo from \"./NoteTodo\";\r\nimport NoteLoc from \"./NoteLoc\";\r\nimport Features from \"./Features\";\r\n\r\nimport RemoveIcon from \"../../cmps/icons/RemoveIcon\";\r\nimport EditIcon from \"../../cmps/icons/EditIcon\";\r\nimport SaveIcon from \"../../cmps/icons/SaveIcon\";\r\n\r\nimport AvatarLoader from '../AvatarLoader'\r\n\r\n\r\nexport default ({ note, user, removeNote, saveRoomChanges, togglePinned }) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isNewTodo, setIsNewTodo] = useState(false);\r\n  const [currTodoIdx, setCurrTodoIdx] = useState(\"\");\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n\r\n    const cmps = {\r\n        NoteText,\r\n        NoteImg,\r\n        NoteVideo,\r\n        NoteTodo,\r\n        NoteLoc\r\n    }\r\n    const NoteType = cmps[note.type];\r\n\r\n  const noteRef = createRef();\r\n\r\n  const setNoteColor = (color) => {\r\n    note.bgColor = color;\r\n    saveRoomChanges();\r\n  };\r\n\r\n    const paintNote = () => {\r\n        if (note.bgColor && noteRef.current) noteRef.current.style.backgroundColor = note.bgColor\r\n    }\r\n\r\n  const saveTodoEdits = () => {\r\n    saveRoomChanges();\r\n    setCurrTodoIdx(\"\");\r\n  };\r\n\r\n  const onLoad = useCallback(() => {\r\n    console.log(\"loaded\");\r\n    setIsLoaded(true);\r\n  }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (note.createdBy._id !== user._id) return\r\n        if (note.createdBy.imgUrl !== user.imgUrl) {\r\n            note.createdBy.imgUrl = user.imgUrl\r\n            saveRoomChanges()\r\n        }\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    paintNote();\r\n    if (note.createdBy._id !== user._id) return;\r\n    if (note.createdBy.imgUrl !== user.imgUrl) {\r\n      note.createdBy.imgUrl = user.imgUrl;\r\n      saveRoomChanges();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    paintNote();\r\n  }, [note.bgColor]);\r\n\r\n    return (\r\n            <div className=\"note-preview\" style={{ backgroudColor: note.bgColor }}>\r\n                <div className={user._id === note.createdBy._id ? 'user-container' : 'friend-container'}>\r\n                    <img src={note.createdBy.imgUrl} alt=\"Note creator avatar\" className=\"avatar avatar-s\" onLoad={onLoad} style={{ display: isLoaded ? \"block\" : \"none\" }} />\r\n                    {!isLoaded && <AvatarLoader/>}\r\n                    <div className=\"note-container\" ref={noteRef}>\r\n                        <div className=\"note-header\">\r\n                            <div>\r\n                                {((note.type === 'NoteTodo' || note.type === 'NoteText') && !isEdit) && <i onClick={() => setIsEdit(true)}><EditIcon /></i>}\r\n                                {((note.type === 'NoteTodo' || note.type === 'NoteText') && isEdit) && <i onClick={() => { setIsEdit(false); saveTodoEdits() }}><SaveIcon /></i>}\r\n                                <i onClick={() => removeNote(note._id)}><RemoveIcon /></i>\r\n                            </div>\r\n                            <Moment format=\"MM/DD/YY ,HH:mm\">{note.createdAt}</Moment>\r\n                        </div>\r\n                        <NoteType note={note} user={user} isEdit={isEdit} currTodoIdx={currTodoIdx} setCurrTodoIdx={setCurrTodoIdx} setIsNewTodo={setIsNewTodo} isNewTodo={isNewTodo} />\r\n                        <Features togglePinned={togglePinned} note={note} user={user} setNoteColor={setNoteColor} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import loading from \"../assets/svg/loading.svg\";\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst Loading = () => {\r\n    return <div>\r\n         <img src={loading} alt=\"loading\" className=\"loading\"/>\r\n    </div>;\r\n}\r\n\r\nexport default Loading;","import React, { useEffect, useState } from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport NotePreview from './NotePreview'\r\nimport Loading from '../Loading'\r\n\r\nexport default ({ notes, pinnedNotes, user, removeNote, saveRoomChanges, togglePinned, setNoteType }) => {\r\n\r\n    const [notesForDisplay, setNotesForDisplay] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fixedNotes = []\r\n        notes.map(note => {\r\n            user.pinnedNotes.find(id => id === note._id) ?\r\n                fixedNotes.unshift(note) : fixedNotes.push(note)\r\n        })\r\n        setNotesForDisplay(fixedNotes)\r\n    }, [notes])\r\n\r\n    return (\r\n\r\n        <div className=\"note-list\" onClick={() => setNoteType('')}>\r\n            <TransitionGroup component={null}>\r\n                {notes.map((note) =>\r\n                    <CSSTransition \r\n                    key={note._id}\r\n                    timeout={{enter: 800, exit: 500}}\r\n                    classNames={'note-item'}\r\n                    >\r\n                        <NotePreview\r\n                            note={note}\r\n                            key={note._id}\r\n                            user={user}\r\n                            removeNote={removeNote}\r\n                            saveRoomChanges={saveRoomChanges}\r\n                            togglePinned={togglePinned} />\r\n                    </CSSTransition>)}\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\n\r\nexport default ({ filterBy, setFilterBy, }) => {\r\n    return (\r\n        <section>\r\n            <DebounceInput\r\n                minLength={0}\r\n                className=\"note-filter-input\"\r\n                debounceTimeout={300}\r\n                type=\"text\"\r\n                placeholder={'Search Notes'}\r\n                onChange={e => setFilterBy({ ...filterBy, term: e.target.value })}\r\n            />\r\n            <label htmlFor=\"type-select\">Type</label>\r\n            <select id=\"type-select\" onChange={e => setFilterBy({ ...filterBy, type: e.target.value })}>\r\n                <option value=\"\">All</option>\r\n                <option value=\"NoteText\">Text</option>\r\n                <option value=\"NoteImg\">Img</option>\r\n                <option value=\"NoteVideo\">Video</option>\r\n                <option value=\"NoteTodo\">Todos</option>\r\n                <option value=\"NoteLoc\">Location</option>\r\n            </select>\r\n        </section >\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport default ({ setNoteData, setNoteHeader, handleSubmit }) => {\r\n\r\n\r\n    return (\r\n        <form className=\"input-text\" onSubmit={handleSubmit}>\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input className=\"input-data\" placeholder=\"Say Something\" type=\"text\" onChange={e => setNoteData(e.target.value)} />\r\n            <button hidden>Save</button>\r\n        </form>\r\n    )\r\n}\r\n//save button is a temp solution to onSubmit with enter key","import React, { createRef } from 'react';\r\n\r\nimport uploadImg from '../../assets/svg/upload.svg'\r\n\r\nexport default ({ setNoteHeader, onUploadImg }) => {\r\n\r\n    const inputRef = createRef();\r\n\r\n\r\n    const onUploadImgHandler = () => {\r\n        inputRef.current.click()\r\n        // setNoteType('NoteImg');\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-img\">\r\n            <input className=\"input-header\" placeholder=\"Img Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input type=\"file\" onChange={(ev) => { onUploadImg(ev); }} ref={inputRef} hidden />\r\n            <img src={uploadImg} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { onUploadImgHandler() }} />\r\n        </section >\r\n    );\r\n};\r\n\r\n","import axios from 'axios';\r\n//AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM RAN'S KEY\r\n//AIzaSyD09tfK-pjT-G6kEZmXRfeicoKR-neGKNU alt key\r\nconst API_KEY = 'AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM' \r\nconst limit = 15;\r\n\r\n\r\nexport const YoutubeApiService = {\r\n    youtubeQuery\r\n}\r\n\r\n\r\nasync function youtubeQuery(query) {\r\n    try {\r\n        const res = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&videoEmbeddable=true&type=video&key=${API_KEY}&q=${query}&maxResults=${limit}`);\r\n        return res.data.items;\r\n    } catch (err) {\r\n        console.log('Error while fetching videos',err); \r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { YoutubeApiService } from '../../services/YoutubeApiService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\n\r\nexport default ({ addVideo, setNoteHeader }) => {\r\n    const [videos, setVideos] = useState([]);\r\n    const searchYoutubeVideos = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setVideos([])\r\n            return\r\n        }\r\n        const youtubeVideos = await YoutubeApiService.youtubeQuery(queryStr);\r\n        setVideos(youtubeVideos)\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-video\">\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n            className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Video\"\r\n                onChange={e => searchYoutubeVideos(e.target.value)}\r\n            />\r\n            {!!videos.length &&<h1>Add video!</h1>}\r\n            {!!videos.length && videos.map(video => {\r\n                return (\r\n                    <div className=\"video-card\" key={video.id.videoId}>\r\n                        <img src={video.snippet.thumbnails.default.url} alt=\"Video Thumbnail\" />\r\n                        <h6>{video.snippet.title}</h6>\r\n                        <img src={PlusIcon} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { addVideo(video.id.videoId); setVideos([]) }} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </section >\r\n    );\r\n};","import React, { useState } from 'react'\r\n\r\nimport { UtilService } from '../../services/UtilService'\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport saveIcon from '../../assets/svg/save.svg'\r\n\r\n\r\nexport default ({ setNoteHeader, setNoteData, handleSubmit, noteData }) => {\r\n    const [currTodo, setCurrTodo] = useState('');\r\n\r\n    const textInput = React.useRef();\r\n\r\n    const addTodo = () => {\r\n        setNoteData([\r\n            ...noteData, {\r\n                text: currTodo,\r\n                isDone: false,\r\n                _id: UtilService.makeId(5)\r\n            }])\r\n        setCurrTodo('')\r\n        textInput.current.value = ''\r\n        textInput.current.focus()\r\n    };\r\n\r\n    const handleRemoveTodo = (todoId) => {\r\n        setNoteData(noteData.filter(todo => todo._id !== todoId))\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-todo\">\r\n            <input type=\"text\" placeholder=\"Header?\" className=\"input-header\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <ul>\r\n                {!noteData.length && <h5>No Todo's Added</h5>}\r\n                {!!noteData.length && noteData.map(todo => {\r\n                    return (\r\n                        <li className=\"todo\" key={todo._id}>\r\n                            <span>{todo.text}</span>\r\n                            <img src={xMark} onClick={() => handleRemoveTodo(todo._id)} className=\"x-mark\" alt=\"Remove Todo\" />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <div className=\"add-todo-container\">\r\n                <input type=\"text\" placeholder=\"task?\" className=\"input-task\" ref={textInput} onChange={e => setCurrTodo(e.target.value)} />\r\n                <img src={PlusIcon} className=\"add-button\" onClick={() => addTodo()} alt=\"Add todo\" />\r\n            </div>\r\n            <img src={saveIcon} className=\"add-button\" onClick={handleSubmit} alt=\"Save\" />\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n// const GAPI_KEY = 'AIzaSyDT_ajKa9WIv5XuaigihgiGJKXyRAXIV7o';\r\nconst GAPI_KEY = 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA';\r\n// const GAPI_KEY = 'AIzaSyAfOgP37XV4mv6RcyxIwOk1ajVevIhN2TM'; \r\n\r\nexport const MapService = {\r\n    searchLocs,\r\n    searchAddress, \r\n    getPosition,\r\n    GAPI_KEY\r\n}\r\n\r\n\r\nasync function searchLocs(txt) {\r\n\r\n    const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${txt.split(\" \").join('+')}&key=${GAPI_KEY}&language=en&region=US`)\r\n    try {\r\n        return res.data.results\r\n        // var position=res.data.results[0].geometry.location ;\r\n        // const address_components_Length =res.data.results[0].address_components.length;   \r\n        // var results=res.data.results[0].address_components;\r\n\r\n\r\n        // for (var i=0;i<address_components_Length;i++){\r\n        //     for (var j=0;j<results[i].types.length;j++){\r\n        //         if(results[i].types[j]==='country'){\r\n        //             var country=results[i].long_name;\r\n        //             var short_country =results[i].short_name; //short name country          \r\n        //         }   \r\n        //         if(results[i].types[j]==='locality'){\r\n        //             var city=results[i].long_name;\r\n        //             // var shortCity =results[i].short_name; //short name city   \r\n        //         }   \r\n\r\n        //         if(results[i].types[j]==='administrative_area_level_1')\r\n        //         {\r\n        //             var region=results[i].long_name;                    \r\n        //         }   \r\n\r\n        //     }\r\n        // }        \r\n        // position.country=country;\r\n        // position.short_country=short_country;\r\n        // // position.city=city;\r\n        // position.region=region;\r\n        //  return position    \r\n\r\n    }\r\n    catch (error) {\r\n        console.error('Address not found');\r\n    }\r\n}\r\n\r\nasync function searchAddress(coords) {\r\n\r\n    const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coords.lat},${coords.lng}&key=${GAPI_KEY}&language=en&region=US`)\r\n    try {\r\n        return res.data.results\r\n    }\r\n    catch (error) {\r\n        console.error('Address not found');\r\n    }\r\n}\r\n\r\n\r\n// FOR USER\r\nfunction getPosition() {\r\n    return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject)\r\n    })\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"gps-icon\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n    viewBox=\"0 0 384 384\"  xmlSpace=\"preserve\">\r\n<g>\r\n   <g>\r\n       <path d=\"M192,136c-30.872,0-56,25.12-56,56s25.128,56,56,56s56-25.12,56-56S222.872,136,192,136z M192,216\r\n           c-13.232,0-24-10.768-24-24s10.768-24,24-24s24,10.768,24,24S205.232,216,192,216z\"/>\r\n   </g>\r\n</g>\r\n<g>\r\n   <g>\r\n       <path d=\"M368,176h-32.944C327.648,109.368,274.632,56.352,208,48.944V16c0-8.832-7.168-16-16-16c-8.832,0-16,7.168-16,16v32.944\r\n           C109.368,56.352,56.352,109.368,48.944,176H16c-8.832,0-16,7.168-16,16c0,8.832,7.168,16,16,16h32.944\r\n           C56.352,274.632,109.368,327.648,176,335.056V368c0,8.832,7.168,16,16,16c8.832,0,16-7.168,16-16v-32.944\r\n           c66.632-7.408,119.648-60.424,127.056-127.056H368c8.832,0,16-7.168,16-16C384,183.168,376.832,176,368,176z M192,304\r\n           c-61.76,0-112-50.24-112-112S130.24,80,192,80s112,50.24,112,112S253.76,304,192,304z\"/>\r\n   </g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n\r\n\r\n\r\n}\r\n","import React, { useState, useEffect, createRef } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { MapService } from '../../services/MapService'\r\n\r\nimport PinIcon from '../../assets/svg/pin.svg'\r\nimport SaveIcon from '../icons/SaveIcon'\r\nimport GpsIcon from '../icons/GpsIcon'\r\n\r\nexport default ({ setNoteHeader, setNoteData, noteData, handleSubmit }) => {\r\n\r\n    const [locs, setLocs] = useState([]);\r\n    const [selectedLoc, setSelectedLoc] = useState(null)\r\n    const addressInputRef = createRef();\r\n\r\n    const searchLoc = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setLocs([])\r\n            return\r\n        }\r\n        let locations = await MapService.searchLocs(queryStr)\r\n        setLocs(locations)\r\n    }\r\n\r\n    const renderMarkers = (map, maps) => {\r\n        let marker = new maps.Marker({\r\n        position: { lat: selectedLoc.lat, lng: selectedLoc.lng},\r\n        map,\r\n        icon:PinIcon\r\n        });\r\n        return marker;\r\n       };\r\n\r\n\r\n    const setLocNote = (loc) => {\r\n        let dataObj = { name: loc.formatted_address, coords: loc.geometry.location }\r\n        setSelectedLoc(dataObj.coords)\r\n        setNoteData(dataObj)\r\n    }\r\n\r\n    const fetchUserCoords = async () => {\r\n        let userPos = await MapService.getPosition()\r\n        if (!userPos) return\r\n        let coords = { lat: userPos.coords.latitude, lng: userPos.coords.longitude }\r\n        setSelectedLoc(coords)\r\n        let res = await MapService.searchAddress(coords)\r\n        if (res) {\r\n            let accurateAddressIdx = res[1] ? 1 : 0\r\n            let address = res[accurateAddressIdx].address_components[accurateAddressIdx].short_name\r\n            let dataObj = { coords: res[accurateAddressIdx].geometry.location }\r\n            if (address) dataObj.name = address\r\n            setNoteData(dataObj)\r\n        }\r\n\r\n    }\r\n\r\n    const saveNoteLoc = () => {\r\n        handleSubmit()\r\n        setSelectedLoc(null)\r\n        addressInputRef.current.value = ''\r\n    }\r\n    useEffect(() => {\r\n        fetchUserCoords()\r\n    }, [selectedLoc])\r\n\r\n\r\n    return (\r\n        <div className=\"input-loc\" >\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n                className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Location\"\r\n                ref={addressInputRef}\r\n                onChange={e => searchLoc(e.target.value)}\r\n            />\r\n            <i onClick={() => fetchUserCoords()}><GpsIcon /></i>\r\n            {!!locs.length && locs.map(loc => {\r\n                return (\r\n                    <div className=\"loc-card\" key={loc.place_id}>\r\n                        <h6 onClick={() => { setLocNote(loc) }}>{loc.formatted_address}</h6>\r\n                    </div>\r\n                )\r\n            })}\r\n            {/* {noteData.name && <h6>{noteData.name}</h6>} */}\r\n            {selectedLoc && <div style={{ height: '30vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA' }}\r\n                    center={selectedLoc}\r\n                    distanceToMouse={() => { }}\r\n                    yesIWantToUseGoogleMapApiInternals={true}\r\n                    defaultZoom={18}\r\n                    onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n\r\n                    >\r\n                </GoogleMapReact>\r\n            </div>}\r\n            {noteData && <i onClick={() => saveNoteLoc()}><SaveIcon /></i>}\r\n            <button onClick={() => console.log('noteData:', noteData)}>Test</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { UtilService } from '../services/UtilService'\r\nimport SocketService from '../services/SocketService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\nimport { loadRoomById, saveRoom, resetCurrRoom } from '../actions/RoomActions';\r\nimport { updateUser } from '../actions/UserActions';\r\nimport ButtonMenu from '../cmps/ButtonMenu'\r\nimport NoteList from '../cmps/Note/NoteList'\r\nimport NoteFilter from '../cmps/Note/NoteFilter'\r\nimport Loading from '../cmps/Loading'\r\nimport InputText from '../cmps/Note/InputText'\r\nimport InputImg from '../cmps/Note/InputImg'\r\nimport InputVideo from '../cmps/Note/InputVideo'\r\nimport InputTodo from '../cmps/Note/InputTodo'\r\nimport InputLoc from '../cmps/Note/InputLoc'\r\nimport { UserService } from '../services/UserService';\r\nimport { RoomService } from '../services/RoomService';\r\n\r\n\r\nconst RoomPage = (props) => {\r\n    const [noteType, setNoteType] = useState('');\r\n    const [noteHeader, setNoteHeader] = useState('');\r\n    const [noteData, setNoteData] = useState('');\r\n    const [noteInputType, setNoteInputType] = useState('InputText');\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [isValidUser, setIsValidUser] = useState(null)\r\n    const [filterBy, setFilterBy] = useState({\r\n        term: '',\r\n        type: '',\r\n        by:'all'\r\n    });\r\n\r\n    if (props.room) var { notes } = props.room\r\n    \r\n    const newNote = {\r\n        header: noteHeader,\r\n        data: noteData,\r\n        type: noteType,\r\n        bgColor: '#87cefa',\r\n        isPinned: false\r\n    }\r\n    \r\n    const cmps = {\r\n        InputText,\r\n        InputImg,\r\n        InputVideo,\r\n        InputTodo,\r\n        InputLoc\r\n    }\r\n    const InputType = cmps[noteInputType];\r\n\r\n    const loadRoom = async () => {\r\n        const roomId = props.room? props.room._id : props.match.params.id;\r\n        if (props.room) {\r\n            await props.loadRoomById({ ...filterBy, roomId })\r\n            checkIsValidUser()\r\n            return\r\n        }\r\n         await props.loadRoomById({ ...filterBy, roomId })\r\n    }\r\n\r\n\r\n    const saveRoomChanges = async () => {\r\n        await props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n    }\r\n    const onUploadImg = async (ev) => {\r\n        if (noteType === 'NoteImg') {\r\n            const imgUrl = await CloudinaryService.uploadImg(ev)\r\n            setNoteData(imgUrl.secure_url)\r\n            setIsUploading(true)\r\n        }\r\n    }\r\n    const onAddVideo = (videoId) => {\r\n        setNoteData(videoId)\r\n        setIsUploading(true)\r\n    }\r\n    // const onAddLoc = (loc) => {\r\n    //     setNoteData(loc)\r\n    //     setIsUploading(true)\r\n    // }\r\n    const onFilterHandler = (filterBy) => {\r\n        setFilterBy(filterBy)\r\n    };\r\n    const onHandleSubmit = async (ev) => {\r\n        const { user, room } = props\r\n        if (ev) ev.preventDefault()\r\n        newNote._id = UtilService.makeId(24)\r\n        newNote.createdAt = Date.now()    //maybe server side should handle it\r\n        let minimalUser = UserService.getMinimalUser(user._id, user.imgUrl)\r\n        newNote.createdBy = minimalUser\r\n        const friend = user.friends.find(currFriend => currFriend.roomId ===  room._id)\r\n        let idx = room.notes.findIndex(note => !note.isPinned)\r\n        room.notes.splice(idx, 0, newNote)\r\n        props.saveRoom(room)\r\n        SocketService.emit(\"added note\", ({ room, user, friendId: friend._id }));\r\n        // props.showNotification('Note added successfully! So Excited', 'success')\r\n        //Need to find way to transfer that prop on desktop\r\n        setNoteHeader('')\r\n        setNoteData('')\r\n        setNoteType('')\r\n        setIsUploading(false)\r\n    }\r\n    \r\n    const togglePinned = (note) => {\r\n        note.isPinned = !note.isPinned\r\n        let idx = props.room.notes.findIndex(currNote => note._id === currNote._id)\r\n        props.room.notes.splice(idx, 1)\r\n        note.isPinned ? handleNotePin(note) : handleNoteUnpin(note)\r\n        props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n        // var choosenNoteIdx = props.user.pinnedNotes.findIndex(id => note._id === id)\r\n        // choosenNoteIdx === -1 ? props.user.pinnedNotes.push(note._id) : props.user.pinnedNotes.splice(choosenNoteIdx, 1)\r\n        // let idx = props.room.notes.findIndex(currNote => note._id === currNote._id)\r\n        // props.room.notes.splice(idx, 1, note)\r\n        // props.saveRoom(props.room)\r\n        // props.updateUser(props.user)\r\n    }\r\n\r\n\r\n    const handleNotePin = (note) => {\r\n        props.room.notes.splice(0, 0, note)\r\n    }\r\n\r\n    const handleNoteUnpin = (note) => {\r\n        let idx = props.room.notes.findIndex(note => !note.isPinned)\r\n        props.room.notes.splice(idx, 0, note)\r\n    }\r\n\r\n    const removeNote = async (noteId) => {\r\n        let idx = props.room.notes.findIndex(note => note._id === noteId)\r\n        props.room.notes.splice(idx, 1)\r\n        await props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n        // props.showNotification('Note Deleted successfully!', 'error')\r\n         //Need to find way to transfer that prop on desktop\r\n\r\n\r\n    }\r\n    const checkIsValidUser = async () => {\r\n        const { user, room } = props\r\n        if(!user || !room) return\r\n        let isValid = await RoomService.checkIsValidUser(user._id, room._id)\r\n        isValid ? setIsValidUser(true) : props.history.push('/')\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        loadRoom()//created\r\n        return () => { props.resetCurrRoom()  }; //onDestroy\r\n    }, []);\r\n\r\n    //watcher\r\n    useEffect(() => {\r\n        if (props.room) checkIsValidUser()\r\n    }, [props.room]);\r\n\r\n    \r\n    useEffect(() => {\r\n        if ((noteData && noteType === 'NoteImg') ||\r\n            noteType === 'NoteVideo') {\r\n            onHandleSubmit()\r\n        }\r\n    }, [isUploading]);\r\n\r\n    useEffect(() => {\r\n        loadRoom()\r\n    }, [filterBy]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"room-page\">\r\n            \r\n            {(isValidUser && notes) ? <div className=\"note-add\">\r\n                <NoteFilter\r\n                    filterBy={filterBy}\r\n                    setFilterBy={setFilterBy}\r\n                    onFilter={onFilterHandler}\r\n                    placeHolder={\"Search for notes\"} />\r\n                {noteType && <InputType\r\n                    isMarkerShown={true}\r\n                    onUploadImg={onUploadImg}\r\n                    addVideo={onAddVideo}\r\n                    handleSubmit={onHandleSubmit}\r\n                    setNoteHeader={setNoteHeader}\r\n                    setNoteData={setNoteData}\r\n                    noteData={noteData}\r\n                />}\r\n                <ButtonMenu setNoteType={setNoteType} setNoteInputType={setNoteInputType} setNoteData={setNoteData} /> \r\n            </div> : <Loading />}\r\n            {(isValidUser && notes) && <div>\r\n                {!!notes.length && <NoteList notes={notes} user={props.user} removeNote={removeNote} saveRoomChanges={saveRoomChanges} togglePinned={togglePinned} setNoteType={setNoteType} />}\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadRoomById,\r\n    saveRoom,\r\n    resetCurrRoom,\r\n    updateUser\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomPage);\r\n\r\n// const loadRoom = async () => {\r\n//     const roomId = props.room ? props.room._id : props.match.params.id;\r\n//     if (props.room) {\r\n//         checkIsValidUser()\r\n//         await props.loadRoomById({ term: filterBy.term, roomId })\r\n//         return\r\n//     }\r\n//     await props.loadRoomById({ term: filterBy.term, roomId });\r\n// }","import React, {useCallback, useState} from 'react';\r\nimport avatarImg from '../../assets/png/user.png'\r\nimport Loading from \"../Loading\";\r\n\r\nimport AvatarLoader from \"../AvatarLoader\";\r\n\r\n\r\nexport const AvatarEdit = (props) => {\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n    const onLoad = useCallback(() => {\r\n    console.log('loaded');\r\n    setIsLoaded(true);\r\n    }, [])\r\n\r\n  // var [{imgUrl}] = useState(props)\r\n  const { imgUrl, isLoading } = props\r\n  \r\n  return <div className=\"avatar-edit\">\r\n    <label>\r\n      <input type=\"file\" onChange={(ev) => props.onUploadImg(ev)} hidden />\r\n      {isLoading ? <Loading /> : <img src={imgUrl ? imgUrl : avatarImg} alt=\"\" className=\"avatar avatar-m\" onLoad={onLoad} style={{display: isLoaded? 'block': 'none'}} />}\r\n      {!isLoaded && <AvatarLoader isHome={true}/>}\r\n\r\n    </label>\r\n  </div>;\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUser, updateUser } from '../actions/UserActions';\r\n\r\n\r\nimport ContactPage from '../pages/ContactPage'\r\nimport RoomPage from '../pages/RoomPage'\r\nimport { loadContacts } from '../actions/ContactActions';\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\nimport ContactList from '../cmps/ContactList'\r\nimport Filter from '../cmps/Filter'\r\n\r\nimport SocketService from '../services/SocketService'\r\nimport { UserService } from '../services/UserService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\nconst HomePage = (props) => {\r\n  const [filterBy, setFilterBy] = useState({ term: '' })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isHome, setIsHome] = useState(true)\r\n\r\n\r\n  const { user, contacts,room,getUpdatedUser } = props;\r\n\r\n\r\n  const loadContacts = async () => {\r\n    await props.loadContacts(filterBy);\r\n  };\r\n\r\n  const onUploadImg = async (ev) => {\r\n    setIsLoading(true)\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n    props.updateUser(updatedUser)\r\n    UserService.updateImgAtContacts(user._id, userImgUrl.secure_url)\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const onAddFriend = (friendId) => {\r\n    const { userName, fullName, _id, imgUrl } = user\r\n    let userId = _id\r\n    let notification = {\r\n      userName,\r\n      fullName,\r\n      type: 'NotificationFriend',\r\n      imgUrl\r\n    }\r\n    SocketService.emit('Add Friend', { notification, userId, friendId })\r\n  }\r\n\r\n\r\n\r\n  const onMoveToRoom = (ev, contact) => {\r\n    const roomId = UserService.getRoomIdFromContact(user,contact).roomId\r\n    console.log('roomId', roomId);\r\n\r\n    ev.stopPropagation()\r\n    props.history.push(`/room/${roomId}`);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    props.getUser()\r\n    if (!props.user) props.history.push(\"/signup\")\r\n    loadContacts()\r\n    return () =>{\r\n      setIsHome(false)\r\n    }\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    loadContacts()\r\n  }, [filterBy])\r\n\r\n\r\n  return (\r\n    <div>\r\n        {user &&\r\n          <div className=\"home-page\">\r\n            <div className=\"mobile\">\r\n            {user.userName && <h2>Hi There <span className=\"user-name\">{user.userName}</span></h2>}\r\n            <AvatarEdit imgUrl={user.imgUrl} onUploadImg={onUploadImg} isLoading={isLoading} />\r\n            <h6>Let's add contacts veze</h6>\r\n            <Filter filterBy={filterBy} setFilterBy={setFilterBy} />\r\n            {contacts && <ContactList onMoveToRoom={onMoveToRoom} contacts={contacts} onAddFriend={onAddFriend} loggedinUser={user} isHome={isHome} />}\r\n            </div>\r\n        <div className=\"desktop\">\r\n          <section className=\"contact-page-desktop\">\r\n        <ContactPage/>\r\n          </section>\r\n        {room && <section className=\"room-page-desktop\">\r\n        <RoomPage history={props.history}/>\r\n        </section>}\r\n        </div>\r\n        </div>\r\n      }\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room:state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  updateUser,\r\n  loadContacts,\r\n  \r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n// import React, { Component } from 'react'\r\n// import { connect } from 'react-redux';\r\n// import Avatar from 'react-avatar';\r\n\r\n// import { getUser,updateUser } from '../actions/UserActions';\r\n// import { loadContacts } from '../actions/ContactActions';\r\n\r\n// import { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n// import ContactList from '../cmps/ContactList'\r\n// import Filter from '../cmps/Filter'\r\n\r\n// import SocketService from '../services/SocketService'\r\n// import {UserService} from '../services/UserService'\r\n// import CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\n// class HomePage extends Component {\r\n//   state = {\r\n//     filterBy: { term: '' },\r\n//     isLoading: false\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.props.getUser()\r\n//     if (!this.props.user) this.props.history.push(\"/signup\")\r\n//     this.loadContacts()\r\n//   }\r\n\r\n//   loadContacts = async () => {\r\n//     await this.props.loadContacts(this.state.filterBy);\r\n//   };\r\n\r\n//   onUploadImg = async (ev) => {\r\n//     let user = this.props.user\r\n//     this.setState({ isLoading: true })\r\n//     let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n//     const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n//     this.props.updateUser(updatedUser)\r\n//     UserService.updateImgAtContacts(user._id, userImgUrl.secure_url)\r\n//     this.setState({ isLoading: false })\r\n//   }\r\n\r\n//   onAddFriend = (friendId) => {\r\n//     const { userName, fullName, _id, imgUrl } = this.props.user\r\n//     let userId = _id\r\n//     let notification = {\r\n//       userName,\r\n//       fullName,\r\n//       type: 'NotificationFriend',\r\n//       imgUrl\r\n//     }\r\n//     SocketService.emit('Add Friend', { notification, userId, friendId })\r\n//   }\r\n\r\n//   onFilterHandler = (filterBy) => {\r\n//     this.setState((prevState) => {\r\n//       return {\r\n//         filterBy: {\r\n//           ...prevState.filterBy,\r\n//           ...filterBy,\r\n//         },\r\n//       };\r\n//     }, this.loadContacts);\r\n\r\n//   };\r\n\r\n//   onMoveToRoom = (ev, roomId) => {\r\n//     console.log(ev);\r\n//     ev.stopPropagation()\r\n//     this.props.history.push(`/board/${roomId}`);\r\n//   }\r\n\r\n//   capitalize = (name) => {\r\n//     return name.charAt(0).toUpperCase() + name.slice(1);\r\n//   };\r\n\r\n\r\n\r\n//   render() {\r\n//     const { user, contacts } = this.props;\r\n//     const { isLoading } = this.state\r\n\r\n//     return (\r\n//       <div>\r\n//         {user &&\r\n//           <div className=\"home-page\">\r\n//             {user.userName && <h2>Hi There {this.capitalize(user.userName)}</h2>}\r\n//             <AvatarEdit imgUrl={user.imgUrl} onUploadImg={this.onUploadImg} isLoading={isLoading} />\r\n//             <h6>Let's add contacts veze</h6>\r\n//             <Filter filterBy={this.state.filterBy} onFilter={this.onFilterHandler} />\r\n//             {contacts && <ContactList onMoveToRoom={this.onMoveToRoom} contacts={contacts} onAddFriend={this.onAddFriend} loggedinUser={user} />}\r\n//           </div>\r\n//         }\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     user: state.user.loggedinUser,\r\n//     contacts: state.contact.contacts,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   getUser,\r\n//   updateUser,\r\n//   loadContacts,\r\n\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ notification,onApprove,onDecline }) => {    \r\n    return (\r\n        <div className=\"notification-friend\">\r\n            <p>{notification.fullName} wants to start a board with you</p>\r\n            <button onClick={()=>onApprove(notification)}>Approve</button>\r\n            <button onClick={()=>onDecline(notification)}>Decline</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ notification }) => {\r\n    return (\r\n        <div className=\"notification-response\">\r\n            <p>{notification.fullName} has {notification.isApproved ? 'Approved' : 'Declined'} your request</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default ({ notification, onDeleteNotification }) => {\r\n\r\n    const {userName, roomId} = notification\r\n\r\n    return (\r\n        <Link to={`/room/${roomId}`} >\r\n        <div className=\"notification-note\" onClick={onDeleteNotification}>\r\n            <p>{userName} just Added A note! go check it out</p>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationFriend from './NotificationFriend'\r\nimport NotificationResponse from './NotificationResponse'\r\nimport NotificationNote from './NotificationNote'\r\nimport Moment from 'react-moment';\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\n\r\n\r\n\r\nexport default ({ notification,onApprove, onDecline, onDeleteNotification }) => {\r\n    const cmps = {\r\n        NotificationFriend,\r\n        NotificationResponse,\r\n        NotificationNote\r\n    }\r\n  \r\n\r\n    const NotificationType = cmps[notification.type];\r\n    return (\r\n        <div className=\"notification-preview\">\r\n            <div className=\"notification-header\">\r\n                <img src={notification.imgUrl} className=\"avatar avatar-xs\" alt=\"User Avatar\"/>\r\n                <div>\r\n            <NotificationType notification={notification} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}/>\r\n            <Moment fromNow>{notification.createdAt}</Moment>\r\n                </div>\r\n            <img src={xMark} onClick={()=> onDeleteNotification(notification)} className=\"x-mark\" alt=\"Close\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationPreview from './NotificationPreview'\r\n\r\nexport default ({notifications, onApprove, onDecline,onDeleteNotification}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"notification-list\">\r\n            {notifications.map(notification => {\r\n                return (\r\n                    <NotificationPreview notification={notification} key={notification._id} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}  />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport SocketService from '../services/SocketService'\r\n\r\n\r\nimport NotificationList from '../cmps/Notification/NotificationList';\r\n\r\nconst InboxPage = (props) => {\r\n\r\n  const { user } = props\r\n\r\n  const onApprove = (notification) => {\r\n\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"approve\", { notification, user });\r\n\r\n  }\r\n  const onDecline = (notification) => {\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"decline\", { notification, user });\r\n  }\r\n\r\n  const onDeleteNotification = (notification) => {\r\n    const idx = user.notifications.findIndex(\r\n      currNotification => currNotification._id === notification._id\r\n    );\r\n    user.notifications.splice(idx, 1);\r\n    props.updateUser(user)\r\n  }\r\n\r\n  const handleForbiddenUser = () => {\r\n    if(props.match.params.id !== user._id) props.history.push('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleForbiddenUser()\r\n  }, [])\r\n  \r\n\r\n  return (\r\n    (!user) ? <h1>Inbox is empty</h1> :\r\n      <div>\r\n        {user && <div>\r\n          {!!user.notifications.length && <NotificationList notifications={user.notifications} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification} ></NotificationList>}\r\n        </div>\r\n        }\r\n      </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    room: state.room.currRoom,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxPage);","import Iframe from 'react-iframe'\r\n\r\n\r\nimport React,{ useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst RandomGame = () => {\r\n    const [gameName, setGameName] = useState('')\r\n\r\n    const gamesName = ['tetrix-en-s-iga-cloud','little-jump-guy-new-en-s-iga-cloud','bottle-flip-new-en-s-iga-cloud', 'basket-fall2-new-en-s-iga-cloud','easter-hunt-new-en-s-iga-cloud','trump-run-new-en-s-iga-cloud','minigolf-new-en-s-iga-cloud','onion-boy-new-en-s-iga-cloud','tank-wars-new-en-s-iga-cloud','angry-chicken-egg-madness-new-en-s-iga-cloud','switch-sides-new-en-s-iga-cloud','html5/unlockit-en-s-iga-cloud', 'spotle-en-s-iga-cloud','snake-condo-en-s-iga-cloud', 'cheese-lab-en-s-iga-cloud','medieval-dodgeball-en-s-iga-cloud']\r\n     \r\n\r\n    const setGame = () =>{\r\n        let randomInt = Math.floor(Math.random() * gamesName.length) \r\n        setGameName(gamesName[randomInt])\r\n        console.log(gameName);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setGame()\r\n        return () => {\r\n            setGameName('')\r\n        };\r\n    }, [])\r\n\r\n\r\n    return <div className=\"random-game\">\r\n        {gameName &&<Iframe url={`https://wanted5games.com/games/html5/${gameName}/index.html?pub=10`} width=\"100%\" height=\"100%\" className=\"iframe\" />}\r\n    </div>;\r\n}\r\n\r\nexport default RandomGame;","\r\n\r\nimport React, { Component } from \"react\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport Loading from \"../cmps/Loading\";\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\n// import SocketService from '../services/SocketService'\r\n\r\nimport { signUp, login, getUser } from '../actions/UserActions'\r\nimport { connect } from \"react-redux\";\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\n\r\nclass SignupPage extends Component {\r\n\r\n  state = {\r\n    newUser: {\r\n      userName: '',\r\n      fullName: '',\r\n      password: '',\r\n      imgUrl: '',\r\n    },\r\n    isSignUp: false,\r\n    isLoading: false,\r\n    isDone: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('hi from signUp', this.state.newUser);\r\n\r\n    this.getLoggedinUser();\r\n  }\r\n\r\n  getLoggedinUser = async () => {\r\n    await this.props.getUser()\r\n    if (this.props.user) this.props.history.push('/')\r\n  }\r\n\r\n  onChangeHandler = (ev) => {\r\n    const { value, name } = ev.target;\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        [name]: value\r\n      }\r\n    })\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({\r\n      newUser: {\r\n        userName: '',\r\n        fullName: '',\r\n        password: '',\r\n        imgUrl: '',\r\n      }\r\n    })\r\n  }\r\n\r\n  onUploadImg = async (ev) => {\r\n    this.setState({ isLoading: true })\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        imgUrl: userImgUrl.secure_url\r\n      }\r\n    })\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\n  connectSockets(id) {\r\n    this.props.onConnectSocket(id)\r\n  }\r\n\r\n  toggleSignUp = () => {\r\n    this.setState(prevState => ({\r\n      isSignUp: !prevState.isSignUp\r\n    }));\r\n  }\r\n\r\n  onHandleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    this.setState({ isDone: true })\r\n    this.state.isSignUp ?\r\n      await this.props.signUp({ ...this.state.newUser })\r\n      : await this.props.login({ ...this.state.newUser })\r\n    await this.getLoggedinUser();\r\n    if (!this.props.user) {\r\n      Swal.fire({\r\n        title: 'Wrong password or Username.',\r\n        width: 300,\r\n        confirmButtonText: \"Say what?\",\r\n        confirmButtonColor: \"yellow\",\r\n        padding: '1em',\r\n        background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n        backdrop: `\r\n        rgba(0,0,123,0.4)\r\n        url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n        left top\r\n        no-repeat\r\n        `\r\n      })\r\n      this.props.history.push(\"/signup\")\r\n      this.resetInput()\r\n      this.setState({ isDone: false })\r\n      return\r\n    }\r\n    this.props.showNotification('Logged in successfully :)', 'success')\r\n    this.connectSockets(this.props.user._id)\r\n    this.props.history.push(\"/\")\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { isSignUp, isLoading, isDone } = this.state\r\n    const { imgUrl } = this.state.newUser\r\n    return (\r\n      isDone ? <Loading /> :\r\n        <div className=\"signup-form\">\r\n          <form onSubmit={this.onHandleSubmit}>\r\n            {isSignUp ? <h1>SignUp</h1> : <h1>Login</h1>}\r\n            {isSignUp && <AvatarEdit onUploadImg={this.onUploadImg} imgUrl={imgUrl} isLoading={isLoading} />}\r\n            {isSignUp && <MDBInput label=\"Full Name\" name=\"fullName\" value={this.state.newUser.fullName || ''} onChange={this.onChangeHandler} />}\r\n            <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={this.state.newUser.userName || ''} onChange={this.onChangeHandler} />\r\n            <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={this.state.newUser.password || ''} onChange={this.onChangeHandler} />\r\n            <button className=\"signup-login-btn\">{isSignUp ? 'Sign up' : 'Login'}</button>\r\n            {!isSignUp && <h2 >Don't Have an account?<span className=\"toggle-btn\" onClick={this.toggleSignUp}> Sign up!</span></h2>}\r\n            {isSignUp && <h2 >Head Back to <span className=\"toggle-btn\" onClick={this.toggleSignUp}>Login</span></h2>}\r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signUp,\r\n  getUser,\r\n  login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\r\n\r\n\r\n\r\n//func version:\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { MDBInput } from \"mdbreact\";\r\n// import Loading from \"../cmps/Loading\";\r\n\r\n// import Swal from 'sweetalert2'\r\n\r\n// // import SocketService from '../services/SocketService'\r\n\r\n// import { signUp, login, getUser } from '../actions/UserActions'\r\n// import { connect } from \"react-redux\";\r\n// import CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n// import { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\n\r\n// const SignupPage = (props) => {\r\n//   const [isSignup, setIsSignup] = useState(false)\r\n//   const [isLoading, setIsLoading] = useState(false)\r\n//   const [isDone, setIsDone] = useState(false)\r\n//   const [newUser, setNewUser] = useState({\r\n//     userName: '',\r\n//     fullName: '',\r\n//     password: '',\r\n//     imgUrl: '',\r\n//   })\r\n//   let loggedinUser = null\r\n\r\n//   const getLoggedinUser = async () => {\r\n//     await props.getUser()\r\n//     if (props.user) props.history.push('/')\r\n//     return props.user\r\n//   }\r\n\r\n\r\n\r\n//   const resetInput = () => {\r\n//     setNewUser({\r\n//       userName: '',\r\n//       fullName: '',\r\n//       password: '',\r\n//       imgUrl: '',\r\n//     })\r\n//   }\r\n\r\n//   const onUploadImg = async (ev) => {\r\n//     setIsLoading(true)\r\n//     let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n//     setNewUser({ ...newUser, imgUrl: userImgUrl.secure_url })\r\n//     setIsLoading(false)\r\n//   }\r\n\r\n//   const connectSockets = (id) => {\r\n//     props.onConnectSocket(id)\r\n//   }\r\n\r\n//   const onHandleSubmit = async (ev) => {\r\n//     ev.preventDefault();\r\n//     setIsDone(true)\r\n//     isSignup ? await props.signUp({ ...newUser }) : await props.login({ ...newUser })\r\n//     await getLoggedinUser()\r\n//     loggedinUser = { ...props.user }\r\n//     if (!loggedinUser.userName) {\r\n//       Swal.fire({\r\n//         title: 'Wrong password or Username.',\r\n//         width: 300,\r\n//         confirmButtonText: \"Say what?\",\r\n//         confirmButtonColor: \"yellow\",\r\n//         padding: '1em',\r\n//         background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n//         backdrop: `\r\n//         rgba(0,0,123,0.4)\r\n//         url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n//         left top\r\n//         no-repeat\r\n//         `\r\n//       })\r\n//       props.history.push(\"/signup\")\r\n//       resetInput()\r\n//       setIsDone(false)\r\n//       return\r\n//     }\r\n//     props.showNotification('Logged in successfully :)', 'success')\r\n//     connectSockets(loggedinUser._id)\r\n//     console.log(loggedinUser);\r\n//     props.history.push(\"/\")\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     getLoggedinUser()\r\n//   }, [])\r\n\r\n//   return (\r\n//     isDone ? <Loading /> :\r\n//       <div className=\"signup-form\">\r\n//         <form onSubmit={(e) => onHandleSubmit(e)}>\r\n//           {isSignup ? <h1>SignUp</h1> : <h1>Login</h1>}\r\n//           {isSignup && <AvatarEdit onUploadImg={onUploadImg} imgUrl={newUser.imgUrl} isLoading={isLoading} />}\r\n//           {isSignup && <MDBInput label=\"Full Name\" name=\"fullName\" value={newUser.fullName || ''} onChange={e => setNewUser({ ...newUser, fullName: e.target.value })} />}\r\n//           <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={newUser.userName || ''} onChange={e => setNewUser({ ...newUser, userName: e.target.value })} />\r\n//           <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={newUser.password || ''} onChange={e => setNewUser({ ...newUser, password: e.target.value })} />\r\n//           <button className=\"signup-login-btn\">{isSignup ? 'Sign up' : 'Login'}</button>\r\n//           {!isSignup && <h2 >Don't Have an account?<span className=\"toggle-btn\" onClick={() => setIsSignup(!isSignup)}> Sign up!</span></h2>}\r\n//           {isSignup && <h2 >Head Back to <span className=\"toggle-btn\" onClick={() => setIsSignup(!isSignup)}>Login</span></h2>}\r\n//         </form>\r\n//       </div>\r\n//   );\r\n\r\n// }\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     user: state.user.loggedinUser,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   signUp,\r\n//   getUser,\r\n//   login\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\r\n\r\n\r\n// //functional handle submit:\r\n// const onHandleSubmit = async (ev) => {\r\n//   ev.preventDefault();\r\n//   setIsDone(true)\r\n//   isSignup ? await props.signUp({ ...newUser }) : await props.login({ ...newUser })\r\n//   await getLoggedinUser()\r\n//   if (!props.user) {\r\n//     Swal.fire({\r\n//       title: 'Wrong password or Username.',\r\n//       width: 300,\r\n//       confirmButtonText: \"Say what?\",\r\n//       confirmButtonColor: \"yellow\",\r\n//       padding: '1em',\r\n//       background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n//       backdrop: `\r\n//       rgba(0,0,123,0.4)\r\n//       url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n//       left top\r\n//       no-repeat\r\n//       `\r\n//     })\r\n//     props.history.push(\"/signup\")\r\n//     resetInput()\r\n//     setIsDone(false)\r\n//     return\r\n//   }\r\n//   connectSockets(props.user._id)\r\n//   props.history.push(\"/\")\r\n// }","import React from \"react\";\r\nimport { getUser } from \"./actions/UserActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport InboxPage from './pages/InboxPage'\r\nimport RandomGame from './pages/RandomGame'\r\n\r\nimport ContactPage from './pages/ContactPage'\r\nimport RoomPage from './pages/RoomPage'\r\nimport SignupPage from './pages/SignupPage'\r\n\r\nimport Loading from './cmps/Loading'\r\nclass RoutePage extends React.Component {\r\n\r\n  async componentDidMount() {\r\n    await this.props.getUser(); \r\n    if (!this.isInSignupPage && !this.props.user) {\r\n    this.props.history.push('/signup')\r\n    }\r\n  }\r\n\r\n  get isInSignupPage() {\r\n    return this.props.location.pathname === \"/signup\";\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.props.location !== prevProps.location &&\r\n      !this.props.user &&\r\n      !this.isInSignupPage\r\n    ) {\r\n      this.props.history.push(\"/signup\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.isInSignupPage && !this.props.user) return <Loading />\r\n\r\n    return (\r\n      <div className=\"router-page\">\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/signup\" exact render={(routerProps) => <SignupPage {...routerProps} onConnectSocket={this.props.onConnectSocket} showNotification={this.props.showNotification} />} />\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/contact\" component={ContactPage} />\r\n            <Route path=\"/random-game\" exact component={RandomGame} />\r\n            <Route path=\"/room/:id\" exact render={(routerProps) => <RoomPage {...routerProps} showNotification={this.props.showNotification} />} />\r\n            {/* <Route path=\"/room/:id\" component={RoomPage} showNotification={this.props.showNotification} /> */}\r\n            <Route path=\"/inbox/:id\" exact component={InboxPage} />\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(RoutePage));\r\n","import React from \"react\";\r\nimport { stack as Menu } from \"react-burger-menu\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport { UtilService } from '../services/UtilService'\r\nimport { getUser } from '../actions/UserActions'\r\nimport { logout } from '../actions/UserActions'\r\n\r\n\r\n\r\nclass BurgerMenu extends React.Component {\r\n  state = {\r\n    menuOpen: false,\r\n    chuckJoke: ''\r\n  };\r\n\r\n  async componentDidMount () {    \r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke });     \r\n   \r\n  }\r\n\r\n async  componentWillUpdate () {\r\n    if(this.props.isClicked && !this.state.menuOpen ) {\r\n      this.setState({ menuOpen: true });\r\n    }\r\n\r\n    \r\n  }\r\n   \r\n\r\n \r\n  \r\n  closeMenu = async (ev) => {\r\n    if (ev) {\r\n      this.handleLogout()\r\n    }\r\n    \r\n    this.setState({ menuOpen: false });\r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke }); \r\n    };\r\n  \r\n  \r\n  handleLogout =  () => {\r\n     this.props.logout()\r\n     this.props.showNotification('Logged out successfully :)', 'success')\r\n\r\n\r\n    // this.props.history.push('/signup')\r\n  }\r\n\r\n\r\n  async handleStateChange(state) {\r\n\r\n    this.setState({ menuOpen: state.isOpen });\r\n    // this.props.onOpenMenu(state.isOpen)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { menuOpen, chuckJoke } = this.state\r\n    const { user } = this.props\r\n    if (!user) return ''\r\n\r\n    return (\r\n      <Menu right isOpen={menuOpen} onStateChange={(state) => this.handleStateChange(state)}>\r\n        <NavLink activeClassName=\"active\" exact to=\"/\" onClick={() => this.closeMenu()}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/contact\" exact onClick={() => this.closeMenu()}>\r\n          Contacts\r\n        </NavLink>\r\n        {user.notifications.length && <span className=\"notification-count\">{user.notifications.length}</span>}\r\n        <NavLink activeClassName=\"active\" to={`/inbox/${user._id}`} exact onClick={() => this.closeMenu()}>\r\n          Inbox\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to={`/random-game`} exact onClick={() => this.closeMenu()}>\r\n          Play Random Game\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/signup\" exact onClick={() => this.closeMenu(logout)}  >\r\n          Logout\r\n        </NavLink>\r\n        <div className=\"menu-footer\">\r\n         <h5>{chuckJoke}</h5>\r\n        {/* <img src={imgObj.imgUrl} alt=\"\"/> */}\r\n        </div>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(BurgerMenu));\r\n\r\n","import React ,{useState ,useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport logo from '../../src/assets/png/petek-logo.png'\r\nimport BurgerMenu from './BurgerMenu';\r\n\r\n\r\n\r\nexport default (props) => {\r\n\r\n  const { user,showNotification } = props\r\n  const [isClicked, toggleClick] = useState(false)\r\n   \r\n  useEffect(() => {\r\n    return () => {\r\n      toggleClick(false)\r\n    };\r\n  }, [isClicked])\r\n  \r\n\r\n  return (\r\n     <nav className=\"main-navbar\">\r\n        <Link to={`/`} className=\"home-link\" >\r\n        <img src={logo} alt=\"logo\" className=\"logo\"/>\r\n        </Link>\r\n       {user && !!user.notifications.length && <span className=\"notification-count nav-count\" onClick={() => {toggleClick(true)}} >{user.notifications.length}</span>}\r\n       <BurgerMenu isClicked={isClicked} showNotification={showNotification} />\r\n    </nav>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport './App.scss';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Noty from 'noty';\r\n\r\n\r\n\r\n\r\nimport audioNotification from '../src/assets/sound/sp-tune.mp3'\r\n\r\nimport SocketService from './services/SocketService'\r\nimport { StorageService } from './services/StorageService'\r\nimport { updateUser, getUser } from '../src/actions/UserActions';\r\nimport { saveRoom, loadRoomById } from '../src/actions/RoomActions';\r\n\r\nimport RoutePage from './RoutePage'\r\nimport NavBar from './cmps/NavBar';\r\n\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = (props) => {\r\n  const loggedinUser = props.user;\r\n  const room = props.room\r\n\r\n  const connectSockets = (id) => {\r\n\r\n    if (room && loggedinUser) {\r\n      SocketService.on(`updateRoom ${room._id}`, async ({ updatedRoom, userId }) => {\r\n        if (userId !== loggedinUser._id) {\r\n          props.loadRoomById({ roomId: updatedRoom._id })\r\n        }\r\n      });\r\n    }\r\n    if (loggedinUser) {\r\n      SocketService.on(`updateUser ${loggedinUser._id}`, (updatedUser) => {\r\n        let user = StorageService.load('user')\r\n        if (loggedinUser._id === user._id) updateUser(updatedUser)\r\n      });\r\n      SocketService.on(`updateUserWithoutAudio ${loggedinUser._id}`, (updatedUser) => { props.updateUser(updatedUser) })\r\n    }\r\n  }\r\n\r\n  const disconnectSockets = () => {\r\n    console.log('disconnect sockets');\r\n    if (room) SocketService.off(`updateRoom ${room._id}`)\r\n    if (loggedinUser) {\r\n      SocketService.off(`updateUser ${loggedinUser._id}`)\r\n      SocketService.off(`updateUserWithoutAudio ${loggedinUser._id}`)\r\n    }\r\n  }\r\n\r\n  const updateUser = (updatedUser) => {\r\n    let audio = new Audio(audioNotification);\r\n    if (updatedUser) {\r\n      props.updateUser(updatedUser)\r\n      audio.play()\r\n    } else {\r\n      console.log(\"ERROR IN UPDATE USER\");\r\n    }\r\n  }\r\n\r\n  const showNotification = (text, type) => {\r\n    new Noty({\r\n      text,\r\n      type,\r\n      theme: 'bootstrap-v4',\r\n      layout: 'topRight',\r\n      animation: {\r\n        open: 'animated bounceInRight', // Animate.css class names\r\n        close: 'animated bounceOutRight' // Animate.css class names\r\n      },\r\n      timeout: 1500\r\n    }).show();\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    connectSockets()\r\n    if (loggedinUser) console.log('connect user sockets', loggedinUser._id);\r\n    if (room) console.log('connect room sockets', room._id);\r\n    return () => {\r\n      disconnectSockets()\r\n      if (room) SocketService.off(`updateRoom ${room._id}`)\r\n\r\n    }\r\n\r\n  }, [loggedinUser, room]);\r\n\r\n  useEffect(() => {\r\n    SocketService.setup()\r\n\r\n\r\n    return () => {\r\n      console.log('disconnecet user sockets', loggedinUser._id);\r\n      if (room) console.log('disconnecet room sockets', room._id);\r\n      disconnectSockets()\r\n      SocketService.terminate()\r\n\r\n    };\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <NavBar user={loggedinUser} showNotification={showNotification} />\r\n        <RoutePage onConnectSocket={connectSockets} showNotification={showNotification} />\r\n      </Router>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room: state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n  saveRoom,\r\n  loadRoomById,\r\n  getUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  \r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    loggedinUser: null\r\n}\r\n\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            if (!action.user) return {...state, loggedinUser: action.user }\r\n            else return {...state, loggedinUser: {...action.user } }\r\n        case 'GET_USER':\r\n            return {...state, loggedinUser: action.user }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\n\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':            \r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CURR_CONTACT':\r\n            return { ...state, currContact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    if (contact._id === action.contact._id) return action.contact;\r\n                    return contact;\r\n                })\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => {\r\n                    return contact._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    rooms: [],\r\n    currRoom: null\r\n}\r\n\r\n\r\nexport default function RoomReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_ROOMS':\r\n            return { ...state, rooms: action.rooms }\r\n        case 'SET_CURR_ROOM':\r\n            return { ...state, currRoom: action.room }\r\n        case 'UPDATE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.map(room => {\r\n                    if (room._id === action.room._id) {\r\n                        //after problems fixed return it to one line term\r\n                        console.log('id match!');\r\n                        \r\n                        return action.room;\r\n                    }\r\n                    return room;\r\n                })\r\n            }\r\n        case 'DELETE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.filter(room => {\r\n                    return room._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: [...state.rooms, action.room]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport UserReducer from './reducers/UserReducer';\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport RoomReducer from './reducers/RoomReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer,\r\n    room: RoomReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\n\r\nexport default store\r\n\r\n\r\n//*********STOREEEEE****************\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App.jsx'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/plus.867418af.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c79dce59.png\";","module.exports = __webpack_public_path__ + \"static/media/pin.5f588246.svg\";","module.exports = __webpack_public_path__ + \"static/media/x-mark.002e9675.svg\";"],"sourceRoot":""}