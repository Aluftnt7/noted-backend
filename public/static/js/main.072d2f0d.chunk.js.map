{"version":3,"sources":["assets/sound/sp-tune.mp3","assets/svg/cross.svg","assets/svg/arrow.svg","assets/svg/loading.svg","assets/svg/upload.svg","assets/svg/save.svg","assets/svg/friends.svg","assets/svg/ok.svg","assets/png/petek-logo.png","services/SocketService.js","services/StorageService.js","services/HttpService.js","services/UtilService.js","services/CloudinaryService.js","services/RoomService.js","actions/RoomActions.js","cmps/ButtonMenu.jsx","cmps/Note/NoteText.jsx","cmps/Note/NoteImg.jsx","cmps/Note/NoteVideo.jsx","cmps/Note/NoteTodo.jsx","cmps/Note/NoteLoc.jsx","cmps/icons/StarIcon.jsx","cmps/icons/CircleIcon.jsx","cmps/icons/ColorPaletteIcon.jsx","cmps/Note/Features.jsx","cmps/icons/RemoveIcon.jsx","cmps/icons/EditIcon.jsx","cmps/icons/SaveIcon.jsx","cmps/NotePreview.jsx","cmps/Loading.jsx","cmps/NoteList.jsx","cmps/Filter.jsx","cmps/Note/InputText.jsx","cmps/Note/InputImg.jsx","services/YoutubeApiService.js","cmps/Note/InputVideo.jsx","cmps/Note/InputTodo.jsx","services/MapService.js","cmps/icons/GpsIcon.jsx","cmps/Note/InputLoc.jsx","pages/BoardPage.jsx","services/UserService.js","actions/UserActions.js","services/ContactService.js","actions/ContactActions.js","cmps/ContactPreview.jsx","cmps/ContactList.jsx","pages/ContactPage.jsx","cmps/User/AvatarEdit.jsx","pages/HomePage.jsx","cmps/Notification/NotificationFriend.jsx","cmps/Notification/NotificationResponse.jsx","cmps/Notification/NotificationNote.jsx","cmps/Notification/NotificationPreview.jsx","cmps/Notification/NotificationList.jsx","pages/InboxPage.jsx","pages/SignUp.jsx","RoutePage.jsx","cmps/BurgerMenu.jsx","cmps/NavBar.jsx","App.jsx","serviceWorker.js","store/reducers/UserReducer.js","store/reducers/ContactReducer.js","store/reducers/RoomReducer.js","store/index.js","index.js","assets/svg/plus.svg","assets/png/user.png","assets/svg/pin.svg","assets/svg/x-mark.svg"],"names":["module","exports","socket","setup","io","terminate","on","eventName","cb","off","emit","data","StorageService","save","key","value","console","log","item","JSON","stringify","localStorage","setItem","load","getItem","parse","axios","Axios","create","withCredentials","HttpService","endpoint","ajax","a","method","url","res","response","status","UtilService","makeId","length","txt","possible","i","charAt","Math","floor","random","getRandomChuck","get","uploadImg","ev","UPLOAD_URL","formData","FormData","target","append","files","fetch","body","secure","then","json","catch","err","error","room","prm","_id","userId","roomId","RoomService","query","critirea","params","URLSearchParams","getById","filterBy","queryParams","property","set","remove","id","checkIsValidUser","loadRoomById","dispatch","type","saveRoom","notes","isEdit","setNoteType","setNoteInputType","setNoteData","useState","isOpen","setIsOpen","slideSpeed","direction","spacing","className","iconResting","style","fontSize","nativecolor","iconActive","backgroundColor","onClick","size","icon","fill","note","header","src","alt","width","allow","title","mapDispatchToProps","connect","state","currRoom","currTodoIdx","setCurrTodoIdx","setIsNewTodo","isNewTodo","editedTodo","setEditedTodo","newTodo","setNewTodo","progress","setProgress","editInputRef","createRef","newTodoInputRef","toggleIsDone","idx","isDone","SocketService","useEffect","doneTodosCount","reduce","acc","todo","prog","parseInt","culcProgress","current","focus","text","PlusIcon","map","checked","readOnly","ref","onChange","e","xmark","splice","removeTodo","completed","labelSize","placeholder","ArrowIcon","todoToAdd","push","addTodo","name","height","bootstrapURLKeys","center","coords","yesIWantToUseGoogleMapApiInternals","defaultZoom","distanceToMouse","onGoogleApiLoaded","maps","Marker","position","lat","lng","PinIcon","renderMarkers","isPinned","viewBox","xmlns","d","version","xmlnsXlink","x","y","xmlSpace","props","enableBackground","clipRule","fillRule","togglePinned","user","setNoteColor","isPalleteOpen","setIsPalleteOpen","changeColor","color","StarIcon","pinnedNotes","find","CircleIcon","removeNote","saveRoomChanges","setIsEdit","NoteType","NoteText","NoteImg","NoteVideo","NoteTodo","NoteLoc","noteRef","paintNote","bgColor","createdBy","imgUrl","EditIcon","SaveIcon","RemoveIcon","format","createdAt","Features","Loading","loading","notesForDisplay","setNotesForDisplay","fixedNotes","unshift","NotePreview","setFilterBy","moveToContact","placeHolder","minLength","debounceTimeout","term","onKeyDown","keyCode","preventDefault","setNoteHeader","handleSubmit","onSubmit","hidden","onUploadImg","inputRef","click","API_KEY","YoutubeApiService","youtubeQuery","items","addVideo","videos","setVideos","searchYoutubeVideos","queryStr","youtubeVideos","video","videoId","snippet","thumbnails","default","noteData","currTodo","setCurrTodo","textInput","React","useRef","xMark","todoIdx","filter","saveIcon","GAPI_KEY","MapService","searchLocs","searchAddress","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","split","join","results","locs","setLocs","selectedLoc","setSelectedLoc","addressInputRef","searchLoc","locations","fetchUserCoords","userPos","latitude","longitude","accurateAddressIdx","address","address_components","short_name","dataObj","geometry","location","GpsIcon","loc","place_id","formatted_address","setLocNote","resetCurrRoom","updateUser","loggedinUser","noteType","noteHeader","noteInputType","isUploading","setIsUploading","isValidUser","setIsValidUser","newNote","InputType","InputText","InputImg","InputVideo","InputTodo","InputLoc","loadRoom","match","CloudinaryService","secure_url","onHandleSubmit","Date","now","minimalUser","UserService","getMinimalUser","friend","friends","currFriend","friendId","noteId","findIndex","history","Filter","onFilter","isMarkerShown","ButtonMenu","NoteList","currNote","KEY","credentials","userName","fullName","password","notifications","avatarImg","removeItem","msg","updatedUser","signUp","update","login","logout","updateImgAtContacts","getLoggedinUser","getUser","contacts","ContactService","filteredFriends","includes","getContactById","contact","deleteContact","index","saveContact","c","_updateContact","_addContact","getEmptyContact","loadContacts","onAddFriend","moveToRoom","isFriendSent","setIsFriendSent","isFriend","setIsFriend","setRoomId","toggleIsFriend","friendReqSent","addFriendImg","handelClick","onMoveToRoom","ContactPreview","stopPropagation","ContactList","AvatarEdit","isLoading","setIsLoading","userImgUrl","Object","assign","toUpperCase","slice","notification","onApprove","onDecline","isApproved","onDeleteNotification","to","NotificationType","NotificationFriend","NotificationResponse","NotificationNote","fromNow","NotificationPreview","currNotification","NotificationList","SignUp","newUser","isSignUp","onChangeHandler","setState","resetInput","toggleSignUp","prevState","Swal","fire","confirmButtonText","confirmButtonColor","padding","background","backdrop","connectSockets","this","onConnectSocket","label","Component","RoutePage","isInSignupPage","prevProps","path","exact","render","routerProps","component","HomePage","ContactPage","BoardPage","InboxPage","pathname","withRouter","BurgerMenu","menuOpen","chuckJoke","closeMenu","handleLogout","isClicked","right","onStateChange","handleStateChange","activeClassName","toggleClick","logo","createBrowserHistory","updatedRoom","audio","Audio","audioNotification","play","NavBar","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","currContact","rooms","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.072d2f0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sp-tune.a3eeb710.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cross.21df9a01.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.15b12873.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.a4b15b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.926d5c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.d5a09bc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/friends.e8f88cde.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.251fc800.svg\";","module.exports = __webpack_public_path__ + \"static/media/petek-logo.e7a6391d.png\";","import io from 'socket.io-client';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/' :\r\n    '//localhost:3030'\r\nvar socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit,\r\n}\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb)\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb)\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    \r\n    socket.emit(eventName, data)\r\n}\r\n\r\n","function save(key, value) {\r\n    console.log('$$$SAVE INVOKED$$$$', value);\r\n    let item = JSON.stringify(value);\r\n    localStorage.setItem(key, item);\r\n}\r\nfunction load(key) {\r\n    console.log('$$$LOAD INVOKED$$$$');\r\n    let item = localStorage.getItem(key)\r\n    let value = JSON.parse(item);\r\n    return value;\r\n}\r\n\r\n\r\nexport const StorageService = {\r\n    save,\r\n    load\r\n}","// import router from '@/router'\r\n// import store from '@/store'\r\n\r\nimport Axios from 'axios';\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nconst BASE_URL = process.env.NODE_ENV !== 'development'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nexport const HttpService =  {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        console.log('httpservice data:', data);\r\n        const res = await axios({\r\n            method,\r\n            url: `${BASE_URL}${endpoint}`,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            return false\r\n            // throw new Error('error:  http.service page')\r\n            // router.push('/');\r\n        }\r\n    }\r\n}\r\n\r\n","import axios from 'axios';\r\n\r\n\r\n\r\nexport const UtilService = {\r\n    makeId,\r\n    getRandomChuck\r\n    // getRandomMeme\r\n}\r\n\r\nfunction makeId(length = 12) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nasync function getRandomChuck(){\r\n    const res = await axios.get(`https://api.chucknorris.io/jokes/random`);\r\n    return res.data.value\r\n}\r\n// async function getRandomMeme(){\r\n//     const res = await axios.get(`https://meme-api.herokuapp.com/gimme/dankmemes/1`);\r\n//      let imgObj = {imgUrl:res.data.memes[0].url, imgHeader:res.data.memes[0].title }\r\n//      return imgObj\r\n// }","function uploadImg(ev) {\r\n    const CLOUD_NAME = \"tamir\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n        if (ev.target) {\r\n            formData.append('file', ev.target.files[0])\r\n        } else {\r\n            formData.append('file', ev)\r\n        }\r\n    formData.append('upload_preset', 'u1inrfbp'); // second parameter is the upload preset\r\n\r\n    return fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData,\r\n            secure:true\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport default {\r\n    uploadImg\r\n}","import { HttpService } from './HttpService';\r\n\r\nfunction query(critirea) {\r\n    const params = new URLSearchParams(critirea);\r\n    return HttpService.get(`room?${params}`);\r\n}\r\n\r\n\r\nfunction getById(filterBy) {\r\n    const queryParams = new URLSearchParams();\r\n    if (filterBy) {\r\n        for (const property in filterBy) {\r\n            if (filterBy[property]) {\r\n                queryParams.set(property, filterBy[property])\r\n            }\r\n        }\r\n        return HttpService.get(`room?${queryParams}`);\r\n    }\r\n}\r\n\r\n\r\n\r\n// function getById(filterBy) {\r\n//     console.log(id);\r\n//     return HttpService.get(`room/${id}`);\r\n// }\r\n\r\n\r\n\r\n\r\nfunction remove(id) {\r\n    return HttpService.delete(`room/${id}`);\r\n}\r\n\r\nasync function save(room) {\r\n    let prm;\r\n\r\n    if (room._id) prm = HttpService.put(`room/${room._id}`, room);\r\n    else {\r\n        prm = HttpService.post('room', room);\r\n    }\r\n    const res = await prm;\r\n    return res;\r\n}\r\n\r\n\r\nasync function checkIsValidUser(userId, roomId) {\r\n    return HttpService.post(`room/${roomId}/validate`, { userId, roomId })\r\n}\r\n\r\n\r\nexport const RoomService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    checkIsValidUser\r\n}\r\n\r\n\r\n\r\n","import { RoomService } from '../services/RoomService'\r\n\r\n// LIST\r\nexport function loadRooms(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            const rooms = await RoomService.query(filterBy);\r\n            dispatch({ type: 'SET_ROOMS', rooms })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadRoomById(filterBy) {\r\n    console.log('filterBy in actions',filterBy);\r\n    \r\n    return async dispatch => {\r\n        try {\r\n            const room = await RoomService.getById(filterBy);\r\n            dispatch({ type: 'SET_CURR_ROOM', room })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrRoom() {\r\n    console.log('made it');\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const room = null\r\n            dispatch({ type: 'SET_CURR_ROOM', room })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveRoom(room) {\r\nconsole.log(room.notes);\r\n\r\n    return async dispatch => {\r\n        const isEdit = !!room._id;\r\n        room = await RoomService.save(room);\r\n        if (isEdit) dispatch({ type: 'SET_CURR_ROOM', room })\r\n        // dispatch({ type: 'UPDATE_ROOM', room }) \r\n        else dispatch({ type: 'ADD_ROOM', room })\r\n        return room;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteRoom(id) {\r\n    return async dispatch => {\r\n        await RoomService.remove(id);\r\n        dispatch({ type: 'DELETE_ROOM', id })\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport {\r\n    FloatingMenu,\r\n    MainButton,\r\n    ChildButton,\r\n} from 'react-floating-button-menu';\r\nimport MdAdd from '@material-ui/icons/Add';\r\nimport MdClose from '@material-ui/icons/Clear';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport LocIcon from '@material-ui/icons/Room';\r\n\r\n// import SvgIcon from '@material-ui/core/SvgIcon';    //PROBABLY NOT NEEDED\r\n// import styled from 'styled-components' //PROBABLY NOT NEEDED\r\n\r\nexport default ({ setNoteType, setNoteInputType, setNoteData }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    return (\r\n        <FloatingMenu\r\n            slideSpeed={500}\r\n            direction=\"up\"\r\n            spacing={8}\r\n            isOpen={isOpen}\r\n            className=\"button-menu\"\r\n        >\r\n            <MainButton\r\n                iconResting={<MdAdd style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                iconActive={<MdClose style={{ fontSize: 20 }} nativecolor=\"white\" />}\r\n                backgroundColor=\"black\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                size={56}\r\n            />\r\n            <ChildButton\r\n                icon={<TextFieldsIcon style={{ fontSize: 20, fill: '#51a255' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteText'); setIsOpen(!isOpen); setNoteInputType('InputText') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ImageIcon style={{ fontSize: 20, fill: '#28b5f2' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteImg'); setIsOpen(!isOpen); setNoteInputType('InputImg') }}\r\n            />\r\n            <ChildButton\r\n                icon={<VideocamIcon style={{ fontSize: 20, fill: '#ff0000' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteVideo'); setIsOpen(!isOpen); setNoteInputType('InputVideo') }}\r\n            />\r\n            <ChildButton\r\n                icon={<ListIcon style={{ fontSize: 20, fill: '#ffa350' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteTodo'); setIsOpen(!isOpen); setNoteInputType('InputTodo'); setNoteData([]) }}\r\n            />\r\n              <ChildButton\r\n                icon={<LocIcon style={{ fontSize: 20, fill: '#800080' }} nativecolor=\"black\" />}\r\n                backgroundColor=\"white\"\r\n                size={40}\r\n                className={!isOpen && 'hidden'}\r\n                onClick={() => { setNoteType('NoteLoc'); setIsOpen(!isOpen); setNoteInputType('InputLoc'); setNoteData(null) }}\r\n            />\r\n        </FloatingMenu>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-text\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <p>{note.data}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    return (\r\n        <div className=\"note-img\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <img src={note.data} alt={note.data} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ note }) => {\r\n    const formattedVidLink = () => {\r\n        return 'https://www.youtube.com/embed/' + note.data\r\n    }\r\n    return (\r\n        <div className=\"note-video\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            <iframe width=\"100%\" allow=\"fullscreen\" src={formattedVidLink()} title=\"Video Player\"></iframe>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, createRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport ProgressBar from '@ramonak/react-progress-bar';\r\n\r\nimport SocketService from '../../services/SocketService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport xmark from '../../assets/svg/cross.svg'\r\nimport ArrowIcon from '../../assets/svg/arrow.svg'\r\n\r\nimport { saveRoom } from '../../actions/RoomActions';\r\n//TODO: IMPROVE EDIT INPUT AND MINUS UI +++ reflect trough socket\r\n\r\nconst NoteTodo = ({ note, saveRoom, room, userId, isEdit, currTodoIdx, setCurrTodoIdx, setIsNewTodo, isNewTodo }) => {\r\n    const [editedTodo, setEditedTodo] = useState('');\r\n    const [newTodo, setNewTodo] = useState('');\r\n    const [progress, setProgress] = useState(0)\r\n    const editInputRef = createRef();\r\n    const newTodoInputRef = createRef()\r\n\r\n    const toggleIsDone = async (idx) => {\r\n        if (isEdit) return\r\n        note.data[idx].isDone = !note.data[idx].isDone\r\n        await saveRoom(room)\r\n        SocketService.emit(\"roomUpdated\", { room, userId });\r\n    }\r\n\r\n\r\n    const addTodo = () => {\r\n\r\n        let todoToAdd = { text: newTodo, isDone: false }\r\n\r\n        note.data.push(todoToAdd);\r\n        setIsNewTodo(false)\r\n        setNewTodo('')\r\n        newTodoInputRef.current.value = ''\r\n    };\r\n\r\n    const removeTodo = (idx) => {\r\n        note.data.splice(idx, 1)\r\n    }\r\n\r\n    const culcProgress = () => {\r\n        let doneTodosCount = note.data.reduce((acc, todo) => {\r\n            if (todo.isDone) acc++\r\n            return acc;\r\n        }, 0);\r\n        let prog = parseInt(doneTodosCount / note.data.length * 100)\r\n        setProgress(prog)\r\n    }\r\n\r\n    useEffect(() => {\r\n        culcProgress()\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if (editInputRef.current) editInputRef.current.focus()\r\n        if (currTodoIdx !== '' && editInputRef.current) note.data[currTodoIdx].text = editedTodo\r\n    }, [editedTodo, currTodoIdx])\r\n\r\n    return (\r\n        <div className=\"note-todo\">\r\n            <div className=\"todo-header\">\r\n                {note.header && <h4>{note.header}</h4>}\r\n                {isEdit && <img src={PlusIcon} className=\"new-todo-btn\" onClick={() => { setIsNewTodo(true) }} />}\r\n            </div>\r\n            <ul>\r\n                {!!note.data.length && note.data.map((todo, idx) => {\r\n                    return (\r\n                        <li key={todo.text} onClick={() => {\r\n                            if (isEdit) {\r\n                                setCurrTodoIdx(idx);\r\n                                setEditedTodo(todo.text)\r\n                            }\r\n                        }}>\r\n                            <div>\r\n                            <input type=\"checkbox\" onClick={(ev) => toggleIsDone(idx)} checked={todo.isDone} readOnly />\r\n                            {(currTodoIdx !== idx) && <span className={todo.isDone ? 'done' : ''} >{todo.text}</span>}\r\n                            </div>\r\n                            {(isEdit && currTodoIdx === idx) && <input type=\"text\" value={editedTodo} ref={editInputRef} onChange={(e) => { setEditedTodo(e.target.value); }} />\r\n                            }\r\n                            {isEdit && <img src={xmark} className=\"remove-todo-btn\" onClick={() => removeTodo(idx)} />}\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <div className=\"progress-bar\">\r\n            <ProgressBar completed={progress} labelSize={!progress ? '0' : '0.75rem' }/>\r\n            </div>\r\n            {isNewTodo && <div>\r\n                <input type=\"text\" placeholder=\"New Todo\" ref={newTodoInputRef} onChange={e => setNewTodo(e.target.value)} />\r\n                <img src={ArrowIcon} className=\"add-todo-btn\" onClick={() => addTodo()} />\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n//checkbox read only prop makes error go away, we will let it stay for a while\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    saveRoom,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTodo);","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nimport PinIcon from '../../assets/svg/pin.svg'\r\n\r\n\r\n\r\nexport default ({ note }) => {\r\n \r\n    \r\nconst renderMarkers = (map, maps) => {\r\n    let marker = new maps.Marker({\r\n    position: { lat: note.data.coords.lat, lng: note.data.coords.lng},\r\n    map,\r\n    icon:PinIcon\r\n    });\r\n    return marker;\r\n   };\r\n\r\n    return (\r\n        <div className=\"note-loc\">\r\n            {note.header && <h4>{note.header}</h4>}\r\n            {note.data.name && <h6>{note.data.name}</h6>}\r\n           {note && <div style={{ height: '30vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA' }}\r\n                    center={note.data.coords}\r\n                    yesIWantToUseGoogleMapApiInternals={true}\r\n                    defaultZoom={18} \r\n                    distanceToMouse={() => { }}\r\n                    onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n                    >\r\n                    {/* <PinIcon\r\n                        lat={note.data.coords.lat}\r\n                        lng={note.data.coords.lng}\r\n                    /> */}\r\n                </GoogleMapReact>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default ({ isPinned }) => {\r\n\r\n    return <svg className={isPinned ? 'star-icon pinned' : 'star-icon'} viewBox=\"0 -10 511.98685 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.902344c-3.351563-10.367188-12.546875-17.730469-23.425782-18.710938l-147.773437-13.417968-58.433594-136.769532c-4.308593-10.023437-14.121093-16.511718-25.023437-16.511718s-20.714844 6.488281-25.023438 16.535156l-58.433594 136.746094-147.796874 13.417968c-10.859376 1.003906-20.03125 8.34375-23.402344 18.710938-3.371094 10.367187-.257813 21.738281 7.957031 28.90625l111.699219 97.960937-32.9375 145.089844c-2.410156 10.667969 1.730468 21.695313 10.582031 28.09375 4.757813 3.4375 10.324219 5.1875 15.9375 5.1875 4.839844 0 9.640625-1.304687 13.949219-3.882813l127.46875-76.183593 127.421875 76.183593c9.324219 5.609376 21.078125 5.097657 29.910156-1.304687 8.855469-6.417969 12.992187-17.449219 10.582031-28.09375l-32.9375-145.089844 111.699219-97.941406c8.214844-7.1875 11.351563-18.539063 7.980469-28.925781zm0 0\"  /></svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default ({ fill }) => {\r\n\r\n    return <svg className=\"circle-icon\" style={{ fill }} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 512 512\" xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\" />\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"color-pallete-icon\" enableBackground=\"new 0 0 512.037 512.037\" viewBox=\"0 0 512.037 512.037\" xmlns=\"http://www.w3.org/2000/svg\"><g>\r\n        <g clipRule=\"evenodd\" fillRule=\"evenodd\">\r\n            <path d=\"m237.033 233.985 41.012 41.013 64.978-69.184 153.518-163.455c7.154-7.617 7.389-19.481 0-26.87s-19.253-7.154-26.87 0l-163.455 153.519z\" fill=\"#6d91ac\" />\r\n            <path d=\"m278.045 274.998-41.012-41.013c-68.762 18.425-23.075 64.087-57.278 98.291 28.514 16.463 98.291-4.426 98.29-57.278z\" fill=\"#f4e9e2\" />\r\n            <path d=\"m179.754 332.276c34.203-34.203-11.484-79.866 57.278-98.291l69.183-64.977c-7.007-13.059-10.558-27.482-10.655-41.924-.175-26.127 24.949-56.528-41.774-63.75-63.943-6.921-130.337 14.12-179.356 63.14-85.915 85.916-85.915 225.211 0 311.127 85.916 85.916 225.211 85.916 311.127 0 49.019-49.019 70.061-115.413 63.14-179.356-7.222-66.723-37.623-41.6-63.75-41.774-14.442-.097-28.866-3.648-41.925-10.655l-64.978 69.184c.002 52.85-69.775 73.739-98.29 57.276zm5.074-164.71c-15.307 6.34-32.857-.929-39.197-16.236s.929-32.856 16.236-39.197 32.857.929 39.198 16.236c6.339 15.307-.93 32.856-16.237 39.197zm-66.154 66.13c-6.34 15.307-23.89 22.576-39.197 16.236-15.307-6.341-22.576-23.89-16.236-39.197s23.89-22.577 39.197-16.236 22.576 23.89 16.236 39.197zm-.017 93.538c6.34 15.307-.929 32.857-16.236 39.197s-32.856-.929-39.197-16.236c-6.34-15.307.929-32.857 16.236-39.197s32.857.929 39.197 16.236zm159.669 66.171c15.307-6.34 32.857.929 39.198 16.236 6.34 15.307-.929 32.856-16.236 39.197s-32.857-.929-39.197-16.236c-6.341-15.307.928-32.857 16.235-39.197zm-93.539-.016c15.307 6.34 22.576 23.89 16.236 39.197-6.341 15.307-23.89 22.576-39.197 16.236-15.308-6.341-22.577-23.89-16.236-39.197 6.341-15.308 23.89-22.577 39.197-16.236zm159.693-66.114c6.34-15.307 23.89-22.577 39.197-16.236 15.307 6.34 22.576 23.889 16.236 39.197-6.341 15.307-23.89 22.577-39.197 16.236-15.308-6.341-22.577-23.89-16.236-39.197z\" fill=\"#ddb9a3\" />\r\n            <path d=\"m145.63 151.33c6.341 15.307 23.89 22.576 39.197 16.236 15.307-6.341 22.576-23.89 16.236-39.197s-23.89-22.577-39.198-16.236c-15.306 6.34-22.575 23.89-16.235 39.197z\" fill=\"#000\" />\r\n            <path d=\"m118.674 233.696c6.34-15.307-.929-32.856-16.236-39.197s-32.857.929-39.197 16.236c-6.341 15.307.929 32.856 16.236 39.197 15.307 6.34 32.856-.929 39.197-16.236z\" fill=\"#ffa350\" />\r\n            <path d=\"m118.657 327.234c-6.341-15.307-23.89-22.577-39.197-16.236s-22.577 23.89-16.236 39.197 23.89 22.576 39.197 16.236 22.576-23.889 16.236-39.197z\" fill=\"#f78888\" />\r\n            <path d=\"m184.787 393.389c-15.307-6.341-32.856.929-39.197 16.236s.929 32.857 16.236 39.197 32.856-.929 39.197-16.236c6.341-15.308-.929-32.857-16.236-39.197z\" fill=\"#fff59d\" />\r\n            <path d=\"m278.326 393.405c-15.307 6.34-22.576 23.89-16.236 39.197 6.341 15.307 23.89 22.577 39.197 16.236s22.576-23.89 16.236-39.197-23.89-22.576-39.197-16.236z\" fill=\"#90ccf4\" />\r\n            <path d=\"m344.48 327.275c-6.341 15.307.929 32.856 16.236 39.197s32.857-.929 39.197-16.236-.929-32.856-16.236-39.197-32.857.929-39.197 16.236z\" fill=\"#4caf50\" /></g>\r\n        <g>\r\n            <path d=\"m75.633 301.76c-20.377 8.44-30.088 31.886-21.648 52.263 6.375 15.388 21.303 24.693 37.008 24.693 5.091 0 10.267-.979 15.255-3.045 20.377-8.44 30.088-31.885 21.648-52.262-8.441-20.378-31.884-30.09-52.263-21.649zm22.961 55.433c-10.188 4.219-21.911-.635-26.132-10.824-4.22-10.189.636-21.912 10.824-26.132 2.495-1.033 5.081-1.522 7.627-1.522 7.852 0 15.317 4.653 18.504 12.347 4.221 10.188-.634 21.911-10.823 26.131z\" />\r\n            <path d=\"m54.002 237.522c4.089 9.872 11.777 17.56 21.648 21.648 4.99 2.067 10.163 3.045 15.255 3.045 15.704 0 30.634-9.306 37.007-24.693 8.44-20.377-1.271-43.822-21.647-52.262-9.872-4.089-20.744-4.089-30.615 0s-17.559 11.777-21.647 21.648c-4.09 9.871-4.09 20.743-.001 30.614zm18.478-22.96c2.044-4.936 5.888-8.78 10.824-10.824 2.468-1.022 5.061-1.533 7.653-1.533s5.187.511 7.654 1.533c10.188 4.22 15.044 15.942 10.824 26.131-4.221 10.188-15.944 15.045-26.131 10.824-4.936-2.044-8.78-5.888-10.824-10.824-2.045-4.935-2.045-10.371 0-15.307z\" />\r\n            <path d=\"m158.04 176.805c4.936 2.044 10.121 3.066 15.308 3.066 5.185 0 10.372-1.022 15.307-3.066 9.871-4.089 17.559-11.777 21.648-21.648 4.088-9.871 4.088-20.744 0-30.615s-11.776-17.559-21.647-21.648-20.744-4.089-30.615 0c-9.872 4.088-17.56 11.776-21.648 21.648-4.088 9.871-4.088 20.744 0 30.614 4.087 9.871 11.775 17.56 21.647 21.649zm-3.171-44.61c2.044-4.936 5.888-8.779 10.824-10.824 2.468-1.022 5.06-1.533 7.653-1.533s5.186.511 7.654 1.533c4.936 2.044 8.779 5.888 10.824 10.824 2.044 4.936 2.044 10.372 0 15.307-2.044 4.936-5.888 8.78-10.824 10.824-4.936 2.044-10.372 2.044-15.308 0s-8.779-5.889-10.824-10.825c-2.043-4.934-2.043-10.37.001-15.306z\" />\r\n            <path d=\"m157.999 458.06c4.99 2.067 10.163 3.045 15.255 3.045 15.704 0 30.634-9.306 37.007-24.693 4.089-9.871 4.089-20.744 0-30.615s-11.777-17.56-21.648-21.648c-9.872-4.089-20.744-4.089-30.615 0s-17.559 11.777-21.648 21.648c-8.439 20.378 1.272 43.823 21.649 52.263zm-3.17-44.608c2.044-4.936 5.889-8.78 10.824-10.824 2.468-1.022 5.061-1.533 7.653-1.533s5.186.511 7.654 1.533c4.935 2.044 8.779 5.888 10.823 10.824s2.044 10.372 0 15.308c-4.22 10.188-15.941 15.043-26.131 10.824-10.188-4.222-15.043-15.944-10.823-26.132z\" />\r\n            <path d=\"m274.499 458.077c4.936 2.044 10.121 3.066 15.307 3.066s10.372-1.022 15.307-3.067c9.872-4.088 17.56-11.776 21.648-21.648 4.088-9.871 4.088-20.744 0-30.614-4.088-9.871-11.776-17.56-21.648-21.648-9.871-4.089-20.743-4.089-30.614 0-20.377 8.44-30.088 31.885-21.648 52.263 4.089 9.871 11.777 17.559 21.648 21.648zm7.654-55.433c2.468-1.022 5.061-1.533 7.654-1.533s5.186.511 7.654 1.533c4.936 2.044 8.779 5.888 10.824 10.824 2.044 4.936 2.044 10.372 0 15.307-2.044 4.936-5.888 8.779-10.824 10.824s-10.372 2.044-15.307 0c-4.936-2.044-8.78-5.888-10.824-10.824-4.221-10.189.634-21.911 10.823-26.131z\" />\r\n            <path d=\"m372.144 378.756c15.704 0 30.633-9.305 37.007-24.693 4.089-9.871 4.089-20.744 0-30.615-4.089-9.872-11.777-17.56-21.648-21.648-20.377-8.441-43.821 1.271-52.262 21.647-8.44 20.377 1.271 43.822 21.647 52.262 4.99 2.068 10.164 3.047 15.256 3.047zm-18.426-47.654c4.22-10.188 15.943-15.043 26.131-10.824 10.188 4.22 15.044 15.943 10.824 26.131s-15.94 15.044-26.132 10.824c-10.187-4.22-15.042-15.942-10.823-26.131z\" />\r\n            <path d=\"m503.612 8.418c-11.14-11.14-29.056-11.235-40.788-.218l-153.092 143.787c-2.685-8.018-4.114-16.474-4.171-24.97-.032-4.704 1.005-9.935 2.103-15.473 2.426-12.244 5.176-26.121-3.679-38.173-7.985-10.868-23.594-17.216-49.122-19.979-53.057-5.746-106.697 7.146-151.041 36.294-4.615 3.034-5.897 9.234-2.864 13.849s9.235 5.897 13.849 2.864c40.475-26.605 89.448-38.369 137.903-33.124 23.692 2.565 32.195 7.907 35.156 11.938 3.398 4.625 2.334 11.564.178 22.443-1.243 6.273-2.529 12.76-2.484 19.494.091 13.626 3.004 27.178 8.454 39.597l-62.038 58.267c-45.251 13.055-46.243 39.977-47.04 61.685-.537 14.623-1 27.252-12.254 38.506-2.198 2.199-3.249 5.294-2.843 8.376.406 3.083 2.222 5.801 4.915 7.355 7.952 4.591 18.161 6.829 29.188 6.829 15.456 0 32.515-4.398 47.203-12.878 22.479-12.979 35.411-32.679 36.773-55.795l57.365-61.078c12.421 5.451 25.968 8.364 39.597 8.455 6.758.047 13.221-1.241 19.494-2.483 10.881-2.155 17.82-3.219 22.444.178 4.03 2.961 9.373 11.464 11.938 35.156 6.886 63.618-15.082 126.021-60.27 171.208-81.879 81.879-215.105 81.879-296.984 0-70.092-70.09-81.507-180.985-27.142-263.682 3.034-4.615 1.752-10.815-2.863-13.849-4.615-3.035-10.816-1.753-13.849 2.863-28.631 43.552-41.621 96.267-36.578 148.438 5.112 52.886 28.654 102.738 66.29 140.374 43.441 43.441 101.2 67.365 162.635 67.365s119.193-23.924 162.634-67.365c49.492-49.491 73.552-117.833 66.011-187.503-2.763-25.528-9.112-41.136-19.979-49.121-12.052-8.855-25.93-6.105-38.174-3.679-5.538 1.097-10.771 2.144-15.473 2.102-8.498-.057-16.952-1.486-24.97-4.171l143.786-153.094c11.018-11.731 10.923-29.647-.218-40.788zm-262.467 309.149c-15.374 8.876-32.501 11.493-44.984 9.672 7.8-13.57 8.323-27.813 8.763-39.806.725-19.763 1.231-33.205 29.232-42.183l33.719 33.72c-1.761 21.055-17.265 33.132-26.73 38.597zm248.107-282.054-211.432 225.118-26.42-26.42 225.117-211.432c3.809-3.577 9.499-3.673 12.953-.218 3.455 3.455 3.359 9.144-.218 12.952z\" />\r\n            <path d=\"m74.438 136.473c5.523 0 10-4.477 10-10s-4.477-10-10-10h-.007c-5.523 0-9.996 4.477-9.996 10s4.48 10 10.003 10z\" />\r\n        </g>\r\n    </g>\r\n    </svg>\r\n\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport StarIcon from '../icons/StarIcon'\r\nimport CircleIcon from '../icons/CircleIcon'\r\nimport ColorPalleteIcon from '../icons/ColorPaletteIcon'\r\n\r\nexport default ({ togglePinned, note, user, setNoteColor }) => {\r\n    const [isPalleteOpen, setIsPalleteOpen] = useState(false)\r\n\r\n\r\n    const changeColor = (color) => {\r\n        setNoteColor(color)\r\n        setIsPalleteOpen(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"features-container\">\r\n            <i onClick={() => togglePinned(note)}><StarIcon isPinned={user.pinnedNotes.find(id => id === note._id) ? true : false} /></i>\r\n            <div className=\"color-pallete\">\r\n                {/* <img src={colorPallete} alt=\"Change Color\" className=\"color-pallete-icon\" onClick={() => setIsPalleteOpen(!isPalleteOpen)} /> */}\r\n                <i onClick={() => setIsPalleteOpen(!isPalleteOpen)}><ColorPalleteIcon /></i>\r\n                {isPalleteOpen && <div className=\"colors-container\">\r\n                    <i onClick={() => changeColor('#ffa350')}><CircleIcon fill=\"#ffa350\" /></i>\r\n                    <i onClick={() => changeColor('#f78888')}><CircleIcon fill=\"#f78888\" /></i>\r\n                    <i onClick={() => changeColor('#fff59d')}><CircleIcon fill=\"#fff59d\" /></i>\r\n                    <i onClick={() => changeColor('#90ccf4')}><CircleIcon fill=\"#90ccf4\" /></i>\r\n                    <i onClick={() => changeColor('#4caf50')}><CircleIcon fill=\"#4caf50\" /></i>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <svg className=\"remove-icon\"  viewBox=\"0 0 512 512\"  xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m256 512c-141.160156 0-256-114.839844-256-256s114.839844-256 256-256 256 114.839844 256 256-114.839844 256-256 256zm0-475.429688c-120.992188 0-219.429688 98.4375-219.429688 219.429688s98.4375 219.429688 219.429688 219.429688 219.429688-98.4375 219.429688-219.429688-98.4375-219.429688-219.429688-219.429688zm0 0\" /><path d=\"m347.429688 365.714844c-4.679688 0-9.359376-1.785156-12.929688-5.359375l-182.855469-182.855469c-7.144531-7.144531-7.144531-18.714844 0-25.855469 7.140625-7.140625 18.714844-7.144531 25.855469 0l182.855469 182.855469c7.144531 7.144531 7.144531 18.714844 0 25.855469-3.570313 3.574219-8.246094 5.359375-12.925781 5.359375zm0 0\" /><path d=\"m164.570312 365.714844c-4.679687 0-9.355468-1.785156-12.925781-5.359375-7.144531-7.140625-7.144531-18.714844 0-25.855469l182.855469-182.855469c7.144531-7.144531 18.714844-7.144531 25.855469 0 7.140625 7.140625 7.144531 18.714844 0 25.855469l-182.855469 182.855469c-3.570312 3.574219-8.25 5.359375-12.929688 5.359375zm0 0\" /></svg>)\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"edit-icon\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n        viewBox=\"0 0 477.873 477.873\"  xmlSpace=\"preserve\">\r\n        <g>\r\n            <g>\r\n                <path d=\"M392.533,238.937c-9.426,0-17.067,7.641-17.067,17.067V426.67c0,9.426-7.641,17.067-17.067,17.067H51.2\r\n           c-9.426,0-17.067-7.641-17.067-17.067V85.337c0-9.426,7.641-17.067,17.067-17.067H256c9.426,0,17.067-7.641,17.067-17.067\r\n           S265.426,34.137,256,34.137H51.2C22.923,34.137,0,57.06,0,85.337V426.67c0,28.277,22.923,51.2,51.2,51.2h307.2\r\n           c28.277,0,51.2-22.923,51.2-51.2V256.003C409.6,246.578,401.959,238.937,392.533,238.937z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n            <g>\r\n                <path d=\"M458.742,19.142c-12.254-12.256-28.875-19.14-46.206-19.138c-17.341-0.05-33.979,6.846-46.199,19.149L141.534,243.937\r\n           c-1.865,1.879-3.272,4.163-4.113,6.673l-34.133,102.4c-2.979,8.943,1.856,18.607,10.799,21.585\r\n           c1.735,0.578,3.552,0.873,5.38,0.875c1.832-0.003,3.653-0.297,5.393-0.87l102.4-34.133c2.515-0.84,4.8-2.254,6.673-4.13\r\n           l224.802-224.802C484.25,86.023,484.253,44.657,458.742,19.142z M434.603,87.419L212.736,309.286l-66.287,22.135l22.067-66.202\r\n           L390.468,43.353c12.202-12.178,31.967-12.158,44.145,0.044c5.817,5.829,9.095,13.72,9.12,21.955\r\n           C443.754,73.631,440.467,81.575,434.603,87.419z\"/>\r\n            </g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n        <g>\r\n        </g>\r\n    </svg>\r\n\r\n\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"save-icon\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m490.647 133.435c-.101-.103-128.128-129.127-128.02-129.019-2.927-2.938-6.813-4.416-10.627-4.416-13.006 0-293.619 0-305 0-16.542 0-30 13.458-30 30v452c0 16.542 13.458 30 30 30h418c16.542 0 30-13.458 30-30v-338c0-3.958-1.564-7.755-4.353-10.565zm-217.647-103.435v66c0 8.284 6.716 15 15 15s15-6.716 15-15v-66h34v115h-162v-115zm192 452h-418v-452h98v130c0 8.284 6.716 15 15 15h192c8.284 0 15-6.716 15-15v-108.587l98 98.766z\" /><path d=\"m96 241c-8.284 0-15 6.716-15 15v176c0 8.284 6.716 15 15 15h320c8.284 0 15-6.716 15-15v-176c0-8.284-6.716-15-15-15zm305 176h-290v-146h290z\" /><path d=\"m160 335h48c8.284 0 15-6.716 15-15s-6.716-15-15-15h-48c-8.284 0-15 6.716-15 15s6.716 15 15 15z\" /></g></svg>\r\n\r\n\r\n}\r\n","import React, { useEffect, useState, createRef } from 'react'\r\nimport Moment from 'react-moment';\r\n\r\n\r\nimport NoteText from './Note/NoteText'\r\nimport NoteImg from './Note/NoteImg'\r\nimport NoteVideo from './Note/NoteVideo'\r\nimport NoteTodo from './Note/NoteTodo'\r\nimport NoteLoc from './Note/NoteLoc'\r\nimport Features from './Note/Features'\r\n\r\nimport RemoveIcon from '../cmps/icons/RemoveIcon'\r\nimport EditIcon from '../cmps/icons/EditIcon'\r\nimport SaveIcon from '../cmps/icons/SaveIcon'\r\n\r\nexport default ({ note, user, removeNote, saveRoomChanges, togglePinned }) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [isNewTodo, setIsNewTodo] = useState(false);\r\n    const [currTodoIdx, setCurrTodoIdx] = useState('');\r\n\r\n    const cmps = {\r\n        NoteText,\r\n        NoteImg,\r\n        NoteVideo,\r\n        NoteTodo,\r\n        NoteLoc\r\n    }\r\n    const NoteType = cmps[note.type];\r\n\r\n    const noteRef = createRef();\r\n\r\n    const setNoteColor = (color) => {\r\n        note.bgColor = color\r\n        saveRoomChanges()\r\n    }\r\n\r\n    const paintNote = () => {\r\n        if (note.bgColor) noteRef.current.style.backgroundColor = note.bgColor\r\n    }\r\n\r\n    const saveTodoEdits = () => {\r\n        saveRoomChanges();\r\n        setCurrTodoIdx('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        paintNote()\r\n        if (note.createdBy._id !== user._id) return\r\n        if (note.createdBy.imgUrl !== user.imgUrl) {\r\n            note.createdBy.imgUrl = user.imgUrl\r\n            saveRoomChanges()\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        paintNote()\r\n    }, [note.bgColor]);\r\n\r\n    return (\r\n        <div className=\"note-preview\" >\r\n            <div className={user._id === note.createdBy._id ? 'user-container' : 'friend-container'}>\r\n                <img src={note.createdBy.imgUrl} alt=\"Note creator avatar\" className=\"avatar avatar-s\" />\r\n                <div className=\"note-container\" ref={noteRef}>\r\n                    <div className=\"note-header\">\r\n                        <div>\r\n                            {/* {((note.type === 'NoteTodo' || note.type === 'NoteText') && !isEdit) && <img src={editIcon} alt=\"Edit note\" className=\"edit-btn\" onClick={() => setIsEdit(true)} />} */}\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && !isEdit) && <i onClick={() => setIsEdit(true)}><EditIcon /></i>}\r\n                            {((note.type === 'NoteTodo' || note.type === 'NoteText') && isEdit) && <i onClick={() => { setIsEdit(false); saveTodoEdits() }}><SaveIcon /></i>}\r\n                            {/* {((note.type === 'NoteTodo' || note.type === 'NoteText') && isEdit) && <img src={saveIcon} alt=\"Save changes\" className=\"save-btn\" onClick={() => { setIsEdit(false); saveRoomChanges(); setCurrTodoIdx('') }} />} */}\r\n                            <i onClick={() => removeNote(note._id)}><RemoveIcon /></i>\r\n                        </div>\r\n                        <Moment format=\"MM/DD/YY ,HH:mm\">{note.createdAt}</Moment>\r\n                    </div>\r\n                    <NoteType note={note} user={user} isEdit={isEdit} currTodoIdx={currTodoIdx} setCurrTodoIdx={setCurrTodoIdx} setIsNewTodo={setIsNewTodo} isNewTodo={isNewTodo} />\r\n                    <Features togglePinned={togglePinned} note={note} user={user} setNoteColor={setNoteColor} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import loading from \"../assets/svg/loading.svg\";\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst Loading = () => {\r\n    return <div>\r\n         <img src={loading} alt=\"loading\" className=\"loading\"/>\r\n    </div>;\r\n}\r\n\r\nexport default Loading;","import React, { useEffect, useState } from 'react'\r\nimport NotePreview from './NotePreview'\r\nimport Loading from '../cmps/Loading'\r\n\r\nexport default ({ notes, user, removeNote, saveRoomChanges, togglePinned, setNoteType }) => {\r\n\r\n    const [notesForDisplay, setNotesForDisplay] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fixedNotes = []\r\n        notes.map(note => {\r\n            user.pinnedNotes.find(id => id === note._id) ?\r\n                fixedNotes.unshift(note) : fixedNotes.push(note)\r\n        })\r\n        setNotesForDisplay(fixedNotes)\r\n    }, [notes])\r\n\r\n    return (\r\n\r\n        <div className=\"note-list\" onClick={() => setNoteType('')}>\r\n            {notesForDisplay.length ? notesForDisplay.map(note => {\r\n                return (\r\n                    <NotePreview\r\n                     note={note} \r\n                     key={note._id} \r\n                     user={user} \r\n                     removeNote={removeNote} \r\n                     saveRoomChanges={saveRoomChanges} \r\n                     togglePinned={togglePinned} />\r\n                )\r\n            }) : <Loading />}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nexport default ({ filterBy, setFilterBy, moveToContact, placeHolder }) => {\r\n\r\n    const onKeyHandler = (ev) => {\r\n        if (ev.keyCode === 13) {\r\n            ev.preventDefault()\r\n            moveToContact()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <DebounceInput\r\n                minLength={0}\r\n                className=\"filter-input\"\r\n                debounceTimeout={300}\r\n                type=\"text\"\r\n                placeholder={placeHolder ? placeHolder : 'Search Contacts'}\r\n                onChange={e => setFilterBy({ ...filterBy, term: e.target.value })}\r\n                onKeyDown={onKeyHandler}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport default ({ setNoteData, setNoteHeader, handleSubmit }) => {\r\n\r\n\r\n    return (\r\n        <form className=\"input-text\" onSubmit={handleSubmit}>\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input className=\"input-data\" placeholder=\"Say Something\" type=\"text\" onChange={e => setNoteData(e.target.value)} />\r\n            <button hidden>Save</button>\r\n        </form>\r\n    )\r\n}\r\n//save button is a temp solution to onSubmit with enter key","import React, { createRef } from 'react';\r\n\r\nimport uploadImg from '../../assets/svg/upload.svg'\r\n\r\nexport default ({ setNoteHeader, onUploadImg }) => {\r\n\r\n    const inputRef = createRef();\r\n\r\n\r\n    const onUploadImgHandler = () => {\r\n        inputRef.current.click()\r\n        // setNoteType('NoteImg');\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-img\">\r\n            <input className=\"input-header\" placeholder=\"Img Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <input type=\"file\" onChange={(ev) => { onUploadImg(ev); }} ref={inputRef} hidden />\r\n            <img src={uploadImg} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { onUploadImgHandler() }} />\r\n        </section >\r\n    );\r\n};\r\n\r\n","import axios from 'axios';\r\n//AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM RAN'S KEY\r\n//AIzaSyD09tfK-pjT-G6kEZmXRfeicoKR-neGKNU alt key\r\nconst API_KEY = 'AIzaSyDD1nIJuc1thshvoaRykKhVDjI8-kbDSFM' \r\nconst limit = 15;\r\n\r\n\r\nexport const YoutubeApiService = {\r\n    youtubeQuery\r\n}\r\n\r\n\r\nasync function youtubeQuery(query) {\r\n    try {\r\n        const res = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&videoEmbeddable=true&type=video&key=${API_KEY}&q=${query}&maxResults=${limit}`);\r\n        return res.data.items;\r\n    } catch (err) {\r\n        console.log('Error while fetching videos',err); \r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { YoutubeApiService } from '../../services/YoutubeApiService'\r\n\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\n\r\nexport default ({ addVideo, setNoteHeader }) => {\r\n    const [videos, setVideos] = useState([]);\r\n    const searchYoutubeVideos = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setVideos([])\r\n            return\r\n        }\r\n        const youtubeVideos = await YoutubeApiService.youtubeQuery(queryStr);\r\n        setVideos(youtubeVideos)\r\n    }\r\n\r\n    return (\r\n        <section className=\"input-video\">\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n            className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Video\"\r\n                onChange={e => searchYoutubeVideos(e.target.value)}\r\n            />\r\n            {!!videos.length &&<h1>Add video!</h1>}\r\n            {!!videos.length && videos.map(video => {\r\n                return (\r\n                    <div className=\"video-card\" key={video.id.videoId}>\r\n                        <img src={video.snippet.thumbnails.default.url} alt=\"Video Thumbnail\" />\r\n                        <h6>{video.snippet.title}</h6>\r\n                        <img src={PlusIcon} className=\"add-button\" alt=\"Plus Icon\" onClick={() => { addVideo(video.id.videoId); setVideos([]) }} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </section >\r\n    );\r\n};","import React, { useState } from 'react'\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\nimport PlusIcon from '../../assets/svg/plus.svg'\r\nimport saveIcon from '../../assets/svg/save.svg'\r\n\r\n\r\nexport default ({ setNoteHeader, setNoteData, handleSubmit, noteData }) => {\r\n    const [currTodo, setCurrTodo] = useState('');\r\n\r\n    const textInput = React.useRef();\r\n\r\n    const addTodo = () => {\r\n        setNoteData([\r\n            ...noteData, {\r\n                text: currTodo,\r\n                isDone: false\r\n            }])\r\n        setCurrTodo('')\r\n        textInput.current.value = ''\r\n    };\r\n\r\n    const handleRemoveTodo = (todoIdx) => {\r\n        setNoteData(noteData.filter((todo, idx) => todoIdx !== idx))\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-todo\">\r\n            <input type=\"text\" placeholder=\"Header?\" className=\"input-header\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <ul>\r\n                {!noteData.length && <h5>No Todo's Added</h5>}\r\n                {!!noteData.length && noteData.map((todo, idx) => {\r\n                    return (\r\n                        <li className=\"todo\" key={todo.text}>\r\n                            <span>{todo.text}</span>\r\n                            <img src={xMark} onClick={() => handleRemoveTodo(idx)} className=\"x-mark\" alt=\"Remove Todo\" />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <div className=\"add-todo-container\">\r\n                <input type=\"text\" placeholder=\"task?\" className=\"input-task\" ref={textInput} onChange={e => setCurrTodo(e.target.value)} />\r\n                <img src={PlusIcon} className=\"add-button\" onClick={() => addTodo()} alt=\"Add todo\" />\r\n            </div>\r\n            <img src={saveIcon} className=\"add-button\" onClick={handleSubmit} alt=\"Save\" />\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n// const GAPI_KEY = 'AIzaSyDT_ajKa9WIv5XuaigihgiGJKXyRAXIV7o';\r\nconst GAPI_KEY = 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA';\r\n// const GAPI_KEY = 'AIzaSyAfOgP37XV4mv6RcyxIwOk1ajVevIhN2TM'; \r\n\r\nexport const MapService = {\r\n    searchLocs,\r\n    searchAddress, \r\n    getPosition,\r\n    GAPI_KEY\r\n}\r\n\r\n\r\nasync function searchLocs(txt) {\r\n\r\n    const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${txt.split(\" \").join('+')}&key=${GAPI_KEY}&language=en&region=US`)\r\n    try {\r\n        return res.data.results\r\n        // var position=res.data.results[0].geometry.location ;\r\n        // const address_components_Length =res.data.results[0].address_components.length;   \r\n        // var results=res.data.results[0].address_components;\r\n\r\n\r\n        // for (var i=0;i<address_components_Length;i++){\r\n        //     for (var j=0;j<results[i].types.length;j++){\r\n        //         if(results[i].types[j]==='country'){\r\n        //             var country=results[i].long_name;\r\n        //             var short_country =results[i].short_name; //short name country          \r\n        //         }   \r\n        //         if(results[i].types[j]==='locality'){\r\n        //             var city=results[i].long_name;\r\n        //             // var shortCity =results[i].short_name; //short name city   \r\n        //         }   \r\n\r\n        //         if(results[i].types[j]==='administrative_area_level_1')\r\n        //         {\r\n        //             var region=results[i].long_name;                    \r\n        //         }   \r\n\r\n        //     }\r\n        // }        \r\n        // position.country=country;\r\n        // position.short_country=short_country;\r\n        // // position.city=city;\r\n        // position.region=region;\r\n        //  return position    \r\n\r\n    }\r\n    catch (error) {\r\n        console.error('Address not found');\r\n    }\r\n}\r\n\r\nasync function searchAddress(coords) {\r\n\r\n    const res = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coords.lat},${coords.lng}&key=${GAPI_KEY}&language=en&region=US`)\r\n    try {\r\n        return res.data.results\r\n    }\r\n    catch (error) {\r\n        console.error('Address not found');\r\n    }\r\n}\r\n\r\n\r\n// FOR USER\r\nfunction getPosition() {\r\n    return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject)\r\n    })\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return <svg className=\"gps-icon\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n    viewBox=\"0 0 384 384\"  xmlSpace=\"preserve\">\r\n<g>\r\n   <g>\r\n       <path d=\"M192,136c-30.872,0-56,25.12-56,56s25.128,56,56,56s56-25.12,56-56S222.872,136,192,136z M192,216\r\n           c-13.232,0-24-10.768-24-24s10.768-24,24-24s24,10.768,24,24S205.232,216,192,216z\"/>\r\n   </g>\r\n</g>\r\n<g>\r\n   <g>\r\n       <path d=\"M368,176h-32.944C327.648,109.368,274.632,56.352,208,48.944V16c0-8.832-7.168-16-16-16c-8.832,0-16,7.168-16,16v32.944\r\n           C109.368,56.352,56.352,109.368,48.944,176H16c-8.832,0-16,7.168-16,16c0,8.832,7.168,16,16,16h32.944\r\n           C56.352,274.632,109.368,327.648,176,335.056V368c0,8.832,7.168,16,16,16c8.832,0,16-7.168,16-16v-32.944\r\n           c66.632-7.408,119.648-60.424,127.056-127.056H368c8.832,0,16-7.168,16-16C384,183.168,376.832,176,368,176z M192,304\r\n           c-61.76,0-112-50.24-112-112S130.24,80,192,80s112,50.24,112,112S253.76,304,192,304z\"/>\r\n   </g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n\r\n\r\n\r\n}\r\n","import React, { useState, useEffect, createRef } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nimport { MapService } from '../../services/MapService'\r\n\r\nimport PinIcon from '../../assets/svg/pin.svg'\r\nimport SaveIcon from '../icons/SaveIcon'\r\nimport GpsIcon from '../icons/GpsIcon'\r\n\r\nexport default ({ setNoteHeader, setNoteData, noteData, handleSubmit }) => {\r\n\r\n    const [locs, setLocs] = useState([]);\r\n    const [selectedLoc, setSelectedLoc] = useState(null)\r\n    const addressInputRef = createRef();\r\n\r\n    const searchLoc = async (queryStr) => {\r\n        if (!queryStr) {\r\n            setLocs([])\r\n            return\r\n        }\r\n        let locations = await MapService.searchLocs(queryStr)\r\n        setLocs(locations)\r\n    }\r\n\r\n    const renderMarkers = (map, maps) => {\r\n        let marker = new maps.Marker({\r\n        position: { lat: selectedLoc.lat, lng: selectedLoc.lng},\r\n        map,\r\n        icon:PinIcon\r\n        });\r\n        return marker;\r\n       };\r\n\r\n\r\n    const setLocNote = (loc) => {\r\n        let dataObj = { name: loc.formatted_address, coords: loc.geometry.location }\r\n        setSelectedLoc(dataObj.coords)\r\n        setNoteData(dataObj)\r\n    }\r\n\r\n    const fetchUserCoords = async () => {\r\n        let userPos = await MapService.getPosition()\r\n        if (!userPos) return\r\n        let coords = { lat: userPos.coords.latitude, lng: userPos.coords.longitude }\r\n        setSelectedLoc(coords)\r\n        let res = await MapService.searchAddress(coords)\r\n        if (res) {\r\n            let accurateAddressIdx = res[1] ? 1 : 0\r\n            let address = res[accurateAddressIdx].address_components[accurateAddressIdx].short_name\r\n            let dataObj = { coords: res[accurateAddressIdx].geometry.location }\r\n            if (address) dataObj.name = address\r\n            setNoteData(dataObj)\r\n        }\r\n\r\n    }\r\n\r\n    const saveNoteLoc = () => {\r\n        handleSubmit()\r\n        setSelectedLoc(null)\r\n        addressInputRef.current.value = ''\r\n    }\r\n    useEffect(() => {\r\n        fetchUserCoords()\r\n    }, [selectedLoc])\r\n\r\n\r\n    return (\r\n        <div className=\"input-loc\" >\r\n            <input className=\"input-header\" placeholder=\"Note Header\" type=\"text\" onChange={e => setNoteHeader(e.target.value)} />\r\n            <DebounceInput\r\n                className=\"search-input\"\r\n                minLength={0}\r\n                debounceTimeout={500}\r\n                type=\"text\"\r\n                placeholder=\"Search Location\"\r\n                ref={addressInputRef}\r\n                onChange={e => searchLoc(e.target.value)}\r\n            />\r\n            <i onClick={() => fetchUserCoords()}><GpsIcon /></i>\r\n            {!!locs.length && locs.map(loc => {\r\n                return (\r\n                    <div className=\"loc-card\" key={loc.place_id}>\r\n                        <h6 onClick={() => { setLocNote(loc) }}>{loc.formatted_address}</h6>\r\n                    </div>\r\n                )\r\n            })}\r\n            {/* {noteData.name && <h6>{noteData.name}</h6>} */}\r\n            {selectedLoc && <div style={{ height: '30vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDGBQTVrw0MAb3SQ9UbI1sMEz9UNedEXzA' }}\r\n                    center={selectedLoc}\r\n                    distanceToMouse={() => { }}\r\n                    yesIWantToUseGoogleMapApiInternals={true}\r\n                    defaultZoom={18}\r\n                    onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\r\n\r\n                    >\r\n                </GoogleMapReact>\r\n            </div>}\r\n            {noteData && <i onClick={() => saveNoteLoc()}><SaveIcon /></i>}\r\n            <button onClick={() => console.log('noteData:', noteData)}>Test</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { UtilService } from '../services/UtilService'\r\nimport SocketService from '../services/SocketService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\nimport { loadRoomById, saveRoom, resetCurrRoom } from '../actions/RoomActions';\r\nimport { updateUser } from '../actions/UserActions';\r\nimport ButtonMenu from '../cmps/ButtonMenu'\r\nimport NoteList from '../cmps/NoteList'\r\nimport Filter from '../cmps/Filter'\r\nimport Loading from '../cmps/Loading'\r\nimport InputText from '../cmps/Note/InputText'\r\nimport InputImg from '../cmps/Note/InputImg'\r\nimport InputVideo from '../cmps/Note/InputVideo'\r\nimport InputTodo from '../cmps/Note/InputTodo'\r\nimport InputLoc from '../cmps/Note/InputLoc'\r\nimport { UserService } from '../services/UserService';\r\nimport { RoomService } from '../services/RoomService';\r\n\r\n\r\nconst BoardPage = (props) => {\r\n    const [noteType, setNoteType] = useState('');\r\n    const [noteHeader, setNoteHeader] = useState('');\r\n    const [noteData, setNoteData] = useState('');\r\n    const [noteInputType, setNoteInputType] = useState('InputText');\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [filterBy, setFilterBy] = useState('');\r\n    const [isValidUser, setIsValidUser] = useState(null)\r\n    if (props.room) var { notes } = props.room\r\n    const newNote = {\r\n        header: noteHeader,\r\n        data: noteData,\r\n        type: noteType\r\n    }\r\n    const cmps = {\r\n        InputText,\r\n        InputImg,\r\n        InputVideo,\r\n        InputTodo,\r\n        InputLoc\r\n    }\r\n    const InputType = cmps[noteInputType];\r\n\r\n    const loadRoom = async () => {\r\n        const roomId = props.room ? props.room._id : props.match.params.id;\r\n        if(props.room){\r\n          checkIsValidUser()\r\n           await props.loadRoomById({ term: filterBy.term, roomId })\r\n           return  \r\n        } \r\n        await props.loadRoomById({ term: filterBy.term, roomId });\r\n    }\r\n\r\n    \r\n    const saveRoomChanges = async () => {\r\n        await props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n    }\r\n    const onUploadImg = async (ev) => {\r\n        if (noteType === 'NoteImg') {\r\n            const imgUrl = await CloudinaryService.uploadImg(ev)\r\n            setNoteData(imgUrl.secure_url)\r\n            setIsUploading(true)\r\n        }\r\n    }\r\n    const onAddVideo = (videoId) => {\r\n        setNoteData(videoId)\r\n        setIsUploading(true)\r\n    }\r\n    // const onAddLoc = (loc) => {\r\n    //     setNoteData(loc)\r\n    //     setIsUploading(true)\r\n    // }\r\n    const onFilterHandler = (filterBy) => {\r\n        setFilterBy(filterBy)\r\n    };\r\n    const onHandleSubmit = async (ev) => {\r\n        const { user } = props\r\n        if (ev) ev.preventDefault()\r\n        newNote._id = UtilService    .makeId(24)\r\n        newNote.createdAt = Date.now()    //maybe server side should handle it\r\n        let minimalUser = UserService.getMinimalUser(user._id, user.imgUrl)\r\n        newNote.createdBy = minimalUser\r\n        const friend = user.friends.find(currFriend => currFriend.roomId === !props.room._id ? props.match.params.id : props.room._id  )\r\n        props.room.notes.unshift(newNote)\r\n        props.saveRoom(props.room)\r\n        SocketService.emit(\"added note\", ({ room: props.room, user: props.user, friendId: friend._id }));\r\n        setNoteHeader('')\r\n        setNoteData('')\r\n        setNoteType('')\r\n        setIsUploading(false)\r\n    }\r\n    const togglePinned = (note) => {\r\n        let choosenNote = props.user.pinnedNotes.find(id => note._id === id)\r\n        !choosenNote ? props.user.pinnedNotes.push(note._id) : props.user.pinnedNotes.splice(note._id, 1)\r\n        let idx = props.room.notes.findIndex(currNote => note._id === currNote._id)\r\n        props.room.notes.splice(idx, 1, note)\r\n        props.saveRoom(props.room)\r\n        props.updateUser(props.user)\r\n    }\r\n    const removeNote = async (noteId) => {\r\n        let idx = props.room.notes.findIndex(note => note._id === noteId)\r\n        props.room.notes.splice(idx, 1)\r\n        await props.saveRoom(props.room)\r\n        SocketService.emit(\"roomUpdated\", { room: props.room, userId: props.user._id });\r\n    }\r\n    const checkIsValidUser = async () => {\r\n        const { user, room } = props\r\n        let isValid = await RoomService.checkIsValidUser(user._id, room._id)\r\n        isValid ? setIsValidUser(true) : props.history.push('/')\r\n    }\r\n  \r\n    useEffect(() => {\r\n        loadRoom()\r\n        return () => { props.resetCurrRoom() };\r\n    }, []);\r\n    useEffect(() => {\r\n        if (props.room) checkIsValidUser()\r\n    }, [props.room]);\r\n    useEffect(() => {\r\n        if ((noteData && noteType === 'NoteImg') ||\r\n            noteType === 'NoteVideo') {\r\n            onHandleSubmit()\r\n        }\r\n    }, [isUploading]);\r\n    useEffect(() => {\r\n        loadRoom()\r\n    }, [filterBy]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"board-page\">\r\n            {(isValidUser && notes) ? <div className=\"note-add\">\r\n                <Filter \r\n                 filterBy={filterBy}\r\n                 setFilterBy={setFilterBy}\r\n                 onFilter={onFilterHandler} \r\n                 placeHolder={\"Search for notes\"} />\r\n                {noteType && <InputType\r\n                    isMarkerShown={true}\r\n                    onUploadImg={onUploadImg}\r\n                    addVideo={onAddVideo}\r\n                    handleSubmit={onHandleSubmit}\r\n                    setNoteHeader={setNoteHeader}\r\n                    setNoteData={setNoteData}\r\n                    noteData={noteData}\r\n                />}\r\n                <ButtonMenu setNoteType={setNoteType} setNoteInputType={setNoteInputType} setNoteData={setNoteData} />\r\n            </div> : <Loading />}\r\n            {(isValidUser && notes) && <div>\r\n                {!!notes.length && <NoteList notes={notes} user={props.user} removeNote={removeNote} saveRoomChanges={saveRoomChanges} togglePinned={togglePinned} setNoteType={setNoteType}/>}\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        room: state.room.currRoom,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadRoomById,\r\n    saveRoom,\r\n    resetCurrRoom,\r\n    updateUser\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardPage);","import { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\nimport avatarImg from '../assets/png/user.png'\r\nimport BoardPage from '../pages/BoardPage';\r\n\r\n\r\nconst KEY = 'user';\r\n\r\nasync function getLoggedinUser() {\r\n    var user = StorageService.load(KEY);\r\n    if (!user) return null\r\n    user = await HttpService.get(`user/${user._id}`)\r\n    return user\r\n}\r\n\r\nasync function getById(id) {\r\n    const user = await HttpService.get(`user/${id}`)\r\n    return user\r\n}\r\n\r\nasync function signUp(credentials) {\r\n    let user = {\r\n        userName: credentials.userName,\r\n        fullName: credentials.fullName,\r\n        password: credentials.password,\r\n        pinnedNotes: [],\r\n        notifications: [],\r\n        pinnedNotes: [],\r\n        imgUrl: credentials.imgUrl ? credentials.imgUrl : avatarImg,\r\n        joinedAt: Date.now(),\r\n        friends: []\r\n    };\r\n\r\n    user = await HttpService.post('auth/signup', user)\r\n    StorageService.save(KEY, user);\r\n    // getUser()\r\n    return user;\r\n}\r\n\r\nasync function login(credentials) {\r\n    const user = await HttpService.post('auth/login', credentials)\r\n    if (!user) return null\r\n    StorageService.save(KEY, user);\r\n    return user;\r\n}\r\n\r\n\r\nasync function logout() {\r\n    localStorage.removeItem(KEY)\r\n    const msg = await HttpService.post('auth/logout');\r\n    return (msg)\r\n}\r\n\r\nasync function update(user) {\r\n    const updatedUser = await HttpService.put(`user/${user._id}`, user)\r\n    StorageService.save(KEY, updatedUser);\r\n    return updatedUser\r\n}\r\n\r\nasync function updateImgAtContacts(userId, imgUrl) {\r\n    await HttpService.put(`user/${userId}/update`, { userId, imgUrl })\r\n}\r\n\r\n\r\nfunction getMinimalUser(_id, imgUrl) {\r\n    return {\r\n        _id,\r\n        imgUrl\r\n    }\r\n}\r\n\r\nexport const UserService = {\r\n    getById,\r\n    signUp,\r\n    update,\r\n    login,\r\n    logout,\r\n    getMinimalUser,\r\n    updateImgAtContacts,\r\n    getLoggedinUser\r\n}","import { UserService } from '../services/UserService'\r\n\r\nexport function signUp(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.signUp(user);\r\n        dispatch({ type: 'SET_USER', newUser })\r\n    }\r\n}\r\nexport function login(user) {\r\n    return async dispatch => {\r\n        const newUser = await UserService.login(user);                \r\n        dispatch({ type: 'SET_USER', user:newUser })\r\n    }\r\n}\r\nexport function logout() {\r\n    const user = null\r\n    return async dispatch => {\r\n        await UserService.logout();\r\n        dispatch({ type: 'SET_USER', user })\r\n    }\r\n}\r\n\r\nexport function getUser() {\r\n    return async dispatch => {\r\n        const user = await UserService.getLoggedinUser();\r\n        dispatch({ type: 'GET_USER', user })\r\n    }\r\n}\r\nexport function updateUser(user) {\r\n    console.log('@@@user in actions@@@', user);\r\n    return async dispatch => {\r\n        const updatedUser = await UserService.update(user);\r\n        dispatch({ type: 'SET_USER', user: updatedUser })\r\n    }\r\n}\r\n","import { UtilService } from './UtilService'\r\nimport { StorageService } from './StorageService'\r\nimport { HttpService } from './HttpService.js'\r\n\r\n\r\nconst CONTACT_KEY = 'contacts';\r\n\r\nvar contacts = [{\r\n        \"_id\": \"aa56640269f443a5d64b32ca\",\r\n        \"fullName\": \"Eyal Golan\",\r\n        \"userName\": \"Eyalush\",\r\n        \"friends\": []\r\n    },\r\n    {\r\n        \"_id\": \"ba56640269f443a5d64b32cb\",\r\n        \"fullName\": \"Omer Adam\",\r\n        \"userName\": \"Omerush\",\r\n        \"friends\": []\r\n    },\r\n    {\r\n        \"_id\": \"ca56640269f443a5d64b32cc\",\r\n        \"fullName\": \"Zohar Argov\",\r\n        \"userName\": \"Ha Melech\",\r\n        \"friends\": []\r\n    }\r\n];\r\n\r\n// function sort(arr) {\r\n//     return arr.sort((a, b) => {\r\n//         if (a.userName.toLocaleLowerCase() < b.userName.toLocaleLowerCase()) {\r\n//             return -1;\r\n//         }\r\n//         if (a.userName.toLocaleLowerCase() > b.userName.toLocaleLowerCase()) {\r\n//             return 1;\r\n//         }\r\n\r\n//         return 0;\r\n//     })\r\n// }\r\n\r\n// function query(filterBy = null) {\r\n//     return new Promise((resolve, reject) => {\r\n//         var contactsToReturn = StorageService.load(CONTACT_KEY);\r\n//         if (!contactsToReturn || !contactsToReturn.length) {\r\n//             contactsToReturn = [...contacts]\r\n//             StorageService.save(CONTACT_KEY, contactsToReturn)\r\n//         }\r\n//         contacts = [...contactsToReturn]\r\n//         if (filterBy && filterBy.term) {\r\n//             contactsToReturn = filter(filterBy.term)\r\n//         }\r\n//         contactsToReturn ? resolve(sort(contactsToReturn)) : reject(`Contacts not found!`)\r\n//     })\r\n// }\r\nfunction query(filterBy, user) {\r\n    if (filterBy.term && user) {\r\n        var filteredFriends = user.friends.filter(friend => {\r\n            return friend.userName.includes(filterBy.term) || friend.fullName.includes(filterBy.term)\r\n        })\r\n        return filteredFriends.length ? filteredFriends : ''\r\n    }\r\n    const queryParams = new URLSearchParams();\r\n        if (filterBy) {\r\n            for (const property in filterBy) {\r\n                if (filterBy[property]) {\r\n                    queryParams.set(property, filterBy[property])\r\n                }\r\n            }\r\n            console.log(queryParams);\r\n            return HttpService.get(`user?${queryParams}`);\r\n        }\r\n\r\n}\r\n// function query(filterBy, user) {\r\n//     console.log(filterBy);\r\n//     console.log(user);\r\n//     // if (!filterBy.term) return []\r\n//     const queryParams = new URLSearchParams();\r\n//     if (filterBy) {\r\n//         for (const property in filterBy) {\r\n//             if (filterBy[property]) {\r\n//                 queryParams.set(property, filterBy[property])\r\n//             }\r\n//         }\r\n//         console.log(queryParams);\r\n//         return HttpService.get(`user?${queryParams}`);\r\n//     }\r\n//     // return HttpService.get('user');\r\n// }\r\n\r\n\r\n\r\nfunction getContactById(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const contact = contacts.find(contact => contact._id === id)\r\n        contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(contact => contact._id === id)\r\n        if (index !== -1) {\r\n            contacts.splice(index, 1)\r\n        }\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contacts)\r\n    })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n    return new Promise((resolve, reject) => {\r\n        const index = contacts.findIndex(c => contact._id === c._id)\r\n        if (index !== -1) {\r\n            contacts[index] = contact\r\n        }\r\n        // console.log('(edit)Contacts after replace ', contacts)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n    // console.log('add contact')\r\n    return new Promise((resolve, reject) => {\r\n        contact._id = UtilService.makeId()\r\n        contacts.push(contact)\r\n            // console.log('(ADD)Contacts after push ', contacts)\r\n        StorageService.save(CONTACT_KEY, contacts)\r\n        resolve(contact)\r\n    })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n    // console.log('save contact', contact)\r\n    return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n    return {\r\n        fullName: '',\r\n        userName: '',\r\n    }\r\n}\r\n\r\n// function filter(term) {\r\n//     term = term.toLocaleLowerCase()\r\n//     return contacts.filter(contact => {\r\n//         return contact.userName.toLocaleLowerCase().includes(term) ||\r\n//             contact.fullName.toLocaleLowerCase().includes(term)\r\n//     })\r\n// }\r\n\r\nexport const ContactService = {\r\n    query,\r\n    getContactById,\r\n    deleteContact,\r\n    saveContact,\r\n    getEmptyContact\r\n}","import { ContactService } from '../services/ContactService'\r\n\r\n// LIST\r\nexport function loadContacts(filterBy,user) {\r\n    return async dispatch => {\r\n        try {\r\n            const contacts = await ContactService.query(filterBy,user);\r\n            console.log('contacts in actions', contacts);\r\n            dispatch({ type: 'SET_CONTACTS', contacts })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n// READ\r\nexport function loadContactById(id) {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = await ContactService.getContactById(id);\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR', err)\r\n        }\r\n    }\r\n}\r\n\r\n//RESET\r\nexport function resetCurrContact() {\r\n    return async dispatch => {\r\n        try {\r\n            const contact = null\r\n            dispatch({ type: 'SET_CURR_CONTACT', contact })\r\n        } catch (err) {\r\n            console.log('ERROR:', err)\r\n        }\r\n    }\r\n}\r\n\r\n// UPDATE + CREATE\r\nexport function saveContact(contact) {\r\n    return async dispatch => {\r\n        const isEdit = !!contact._id\r\n        contact = await ContactService.saveContact(contact);\r\n        if (isEdit) dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        else dispatch({ type: 'ADD_CONTACT', contact })\r\n        return contact;\r\n    }\r\n}\r\n\r\n// REMOVE\r\n\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', id })\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport addFriendImg from '../assets/svg/friends.svg'\r\nimport friendReqSent from '../assets/svg/ok.svg'\r\n\r\n\r\nexport default ({ contact, onAddFriend, loggedinUser, moveToRoom }) => {\r\n\r\n\r\n    const [isFriendSent, setIsFriendSent] = useState(false)\r\n    const [isFriend, setIsFriend] = useState(false)\r\n    const [roomId, setRoomId] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (!loggedinUser) return\r\n        let friend = loggedinUser.friends.find(friend => { return friend._id === contact._id })\r\n        if (friend) {\r\n            setIsFriend(true)\r\n            setRoomId(friend.roomId)\r\n        } else {\r\n            setIsFriend(false)\r\n        }\r\n    },[loggedinUser, contact._id]);\r\n\r\n    const toggleIsFriend = (ev) => {\r\n        ev.preventDefault()\r\n        setIsFriendSent(true)\r\n\r\n    }\r\n\r\n    const handelClick = (ev) => {\r\n        onAddFriend(contact._id);\r\n        toggleIsFriend(ev)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contact-preview\" onClick={(ev) => {if(isFriend) moveToRoom(ev,roomId) }}>\r\n            <img src={contact.imgUrl} alt={`${contact.userName}`} className=\"avatar avatar-s\" />\r\n            <div className=\"user-name-container\">\r\n                <span>Full Name: {contact.fullName}</span>\r\n                <span>User Name: {contact.userName}</span>\r\n            </div>\r\n            {!contact.roomId &&\r\n                <img src={isFriendSent || isFriend ? friendReqSent : addFriendImg}\r\n                    alt=\"\"\r\n                    className=\"add-friend-img\"\r\n                    onClick={(ev) => isFriend || isFriendSent ? toggleIsFriend(ev) : handelClick(ev)} />}\r\n        </div>\r\n    );\r\n};","import React, {useEffect} from 'react'\r\n\r\nimport ContactPreview from './ContactPreview'\r\nexport default (props) => {\r\n    const { onAddFriend, loggedinUser, onMoveToRoom } = props\r\n\r\n\r\n    return (\r\n        <div className=\"contact-list\">\r\n            {props.contacts.map(contact => {\r\n                return (\r\n                    <ContactPreview\r\n                        contact={contact}\r\n                        onAddFriend={onAddFriend}\r\n                        loggedinUser={loggedinUser}\r\n                        key={contact._id}\r\n                        moveToRoom={onMoveToRoom}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadContacts } from '../actions/ContactActions';\r\nimport { loadRoomById } from '../actions/RoomActions';\r\n\r\nimport Filter from '../cmps/Filter'\r\nimport ContactList from '../cmps/ContactList'\r\n\r\nconst ContactPage = (props) => {\r\n    const [filterBy, setFilterBy] = useState({ term: '', roomId: '' })\r\n    const { contacts, user } = props\r\n\r\n\r\n\r\n    const onMoveToRoom = async (ev,roomId) => {   \r\n        console.log(ev);    \r\n        ev.stopPropagation()\r\n        if(!props.history){\r\n        await props.loadRoomById({ roomId });\r\n        return\r\n        } \r\n        props.history.push(`/board/${roomId}`);\r\n    }\r\n\r\n    const loadContacts = async () => {\r\n        console.log(props);\r\n        await props.loadContacts(filterBy, user);\r\n    };\r\n\r\n    const handleKeyPress = () => {\r\n        if (props.contacts.length === 1) {\r\n            let id = props.contacts[0]._id\r\n            props.history.push(`/board/${id}`);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadContacts()\r\n    }, [filterBy])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {user && <div>\r\n                <Filter\r\n                    filterBy={filterBy}\r\n                    setFilterBy={setFilterBy}\r\n                    moveToContact={handleKeyPress} />\r\n                {!!contacts && <ContactList onMoveToRoom={onMoveToRoom} loggedinUser={user} contacts={contacts.length ? contacts : user.friends}></ContactList>}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts,\r\n        user: state.user.loggedinUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts,\r\n    loadRoomById\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage);","import React from 'react';\r\nimport avatarImg from '../../assets/png/user.png'\r\nimport Loading from \"../Loading\";\r\n\r\n\r\nexport const AvatarEdit = (props) => {\r\n\r\n  // var [{imgUrl}] = useState(props)\r\n  const { imgUrl, isLoading } = props\r\n  return <div className=\"avatar-edit\">\r\n    <label>\r\n      <input type=\"file\" onChange={(ev) => props.onUploadImg(ev)} hidden />\r\n      {isLoading ? <Loading /> : <img src={imgUrl ? imgUrl : avatarImg} alt=\"\" className=\"avatar avatar-m\"  />}\r\n    </label>\r\n    {/* <h1>above</h1>\r\n    <div className=\"test-img\" style={{ backgroundImage: `url(${imgUrl})` }}></div>\r\n    <h1>under</h1> */}\r\n  </div>;\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUser, updateUser } from '../actions/UserActions';\r\nimport ContactPage from '../pages/ContactPage'\r\nimport BoardPage from '../pages/BoardPage'\r\nimport { loadContacts } from '../actions/ContactActions';\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\nimport ContactList from '../cmps/ContactList'\r\nimport Filter from '../cmps/Filter'\r\n\r\nimport SocketService from '../services/SocketService'\r\nimport { UserService } from '../services/UserService'\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\nconst HomePage = (props) => {\r\n  const [filterBy, setFilterBy] = useState({ term: '' })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { user, contacts,room } = props;\r\n\r\n\r\n  const loadContacts = async () => {\r\n    await props.loadContacts(filterBy);\r\n  };\r\n\r\n  const onUploadImg = async (ev) => {\r\n    setIsLoading(true)\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n    props.updateUser(updatedUser)\r\n    UserService.updateImgAtContacts(user._id, userImgUrl.secure_url)\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const onAddFriend = (friendId) => {\r\n    const { userName, fullName, _id, imgUrl } = user\r\n    let userId = _id\r\n    let notification = {\r\n      userName,\r\n      fullName,\r\n      type: 'NotificationFriend',\r\n      imgUrl\r\n    }\r\n    SocketService.emit('Add Friend', { notification, userId, friendId })\r\n  }\r\n\r\n\r\n\r\n  const onMoveToRoom = (ev, roomId) => {\r\n    console.log(ev);\r\n    ev.stopPropagation()\r\n    props.history.push(`/board/${roomId}`);\r\n  }\r\n\r\n  const capitalize = (name) => {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    props.getUser()\r\n    console.log('balsssssssssssssss@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');\r\n    if (!props.user) props.history.push(\"/signup\")\r\n    loadContacts()\r\n  }, [])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    loadContacts()\r\n  }, [filterBy])\r\n\r\n\r\n  return (\r\n    <div>\r\n        {user &&\r\n          <div className=\"home-page\">\r\n            <div className=\"mobile\">\r\n            {user.userName && <h2>Hi There {capitalize(user.userName)}</h2>}\r\n            <AvatarEdit imgUrl={user.imgUrl} onUploadImg={onUploadImg} isLoading={isLoading} />\r\n            <h6>Let's add contacts veze</h6>\r\n            <Filter filterBy={filterBy} setFilterBy={setFilterBy} />\r\n            {contacts && <ContactList onMoveToRoom={onMoveToRoom} contacts={contacts} onAddFriend={onAddFriend} loggedinUser={user} />}\r\n            </div>\r\n        <div className=\"desktop\">\r\n          <section className=\"contact-page-desktop\">\r\n        <ContactPage/>\r\n          </section>\r\n        {room && <section className=\"board-page-desktop\">\r\n        <BoardPage/>\r\n        </section>}\r\n        </div>\r\n        </div>\r\n      }\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room:state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  updateUser,\r\n  loadContacts,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n// import React, { Component } from 'react'\r\n// import { connect } from 'react-redux';\r\n// import Avatar from 'react-avatar';\r\n\r\n// import { getUser,updateUser } from '../actions/UserActions';\r\n// import { loadContacts } from '../actions/ContactActions';\r\n\r\n// import { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n// import ContactList from '../cmps/ContactList'\r\n// import Filter from '../cmps/Filter'\r\n\r\n// import SocketService from '../services/SocketService'\r\n// import {UserService} from '../services/UserService'\r\n// import CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\n\r\n\r\n// class HomePage extends Component {\r\n//   state = {\r\n//     filterBy: { term: '' },\r\n//     isLoading: false\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.props.getUser()\r\n//     if (!this.props.user) this.props.history.push(\"/signup\")\r\n//     this.loadContacts()\r\n//   }\r\n\r\n//   loadContacts = async () => {\r\n//     await this.props.loadContacts(this.state.filterBy);\r\n//   };\r\n\r\n//   onUploadImg = async (ev) => {\r\n//     let user = this.props.user\r\n//     this.setState({ isLoading: true })\r\n//     let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n//     const updatedUser = Object.assign(user, { imgUrl: userImgUrl.secure_url })\r\n//     this.props.updateUser(updatedUser)\r\n//     UserService.updateImgAtContacts(user._id, userImgUrl.secure_url)\r\n//     this.setState({ isLoading: false })\r\n//   }\r\n\r\n//   onAddFriend = (friendId) => {\r\n//     const { userName, fullName, _id, imgUrl } = this.props.user\r\n//     let userId = _id\r\n//     let notification = {\r\n//       userName,\r\n//       fullName,\r\n//       type: 'NotificationFriend',\r\n//       imgUrl\r\n//     }\r\n//     SocketService.emit('Add Friend', { notification, userId, friendId })\r\n//   }\r\n\r\n//   onFilterHandler = (filterBy) => {\r\n//     this.setState((prevState) => {\r\n//       return {\r\n//         filterBy: {\r\n//           ...prevState.filterBy,\r\n//           ...filterBy,\r\n//         },\r\n//       };\r\n//     }, this.loadContacts);\r\n\r\n//   };\r\n\r\n//   onMoveToRoom = (ev, roomId) => {\r\n//     console.log(ev);\r\n//     ev.stopPropagation()\r\n//     this.props.history.push(`/board/${roomId}`);\r\n//   }\r\n\r\n//   capitalize = (name) => {\r\n//     return name.charAt(0).toUpperCase() + name.slice(1);\r\n//   };\r\n\r\n\r\n\r\n//   render() {\r\n//     const { user, contacts } = this.props;\r\n//     const { isLoading } = this.state\r\n\r\n//     return (\r\n//       <div>\r\n//         {user &&\r\n//           <div className=\"home-page\">\r\n//             {user.userName && <h2>Hi There {this.capitalize(user.userName)}</h2>}\r\n//             <AvatarEdit imgUrl={user.imgUrl} onUploadImg={this.onUploadImg} isLoading={isLoading} />\r\n//             <h6>Let's add contacts veze</h6>\r\n//             <Filter filterBy={this.state.filterBy} onFilter={this.onFilterHandler} />\r\n//             {contacts && <ContactList onMoveToRoom={this.onMoveToRoom} contacts={contacts} onAddFriend={this.onAddFriend} loggedinUser={user} />}\r\n//           </div>\r\n//         }\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     user: state.user.loggedinUser,\r\n//     contacts: state.contact.contacts,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   getUser,\r\n//   updateUser,\r\n//   loadContacts,\r\n\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default ({ notification,onApprove,onDecline }) => {    \r\n    return (\r\n        <div className=\"notification-friend\">\r\n            <p>{notification.fullName} wants to start a board with you</p>\r\n            <button onClick={()=>onApprove(notification)}>Approve</button>\r\n            <button onClick={()=>onDecline(notification)}>Decline</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ({ notification }) => {\r\n    return (\r\n        <div className=\"notification-response\">\r\n            <p>{notification.fullName} has {notification.isApproved ? 'Approved' : 'Declined'} your request</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default ({ notification, onDeleteNotification }) => {\r\n\r\n    const {userName, roomId} = notification\r\n\r\n    return (\r\n        <Link to={`/board/${roomId}`} >\r\n        <div className=\"notification-note\" onClick={onDeleteNotification}>\r\n            <p>{userName} just Added A note! go check it out</p>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationFriend from './NotificationFriend'\r\nimport NotificationResponse from './NotificationResponse'\r\nimport NotificationNote from './NotificationNote'\r\nimport Moment from 'react-moment';\r\n\r\nimport xMark from '../../assets/svg/x-mark.svg'\r\n\r\n\r\n\r\nexport default ({ notification,onApprove, onDecline, onDeleteNotification }) => {\r\n    const cmps = {\r\n        NotificationFriend,\r\n        NotificationResponse,\r\n        NotificationNote\r\n    }\r\n  \r\n\r\n    const NotificationType = cmps[notification.type];\r\n    return (\r\n        <div className=\"notification-preview\">\r\n            <div className=\"notification-header\">\r\n                <img src={notification.imgUrl} className=\"avatar avatar-xs\" alt=\"User Avatar\"/>\r\n                <div>\r\n            <NotificationType notification={notification} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}/>\r\n            <Moment fromNow>{notification.createdAt}</Moment>\r\n                </div>\r\n            <img src={xMark} onClick={()=> onDeleteNotification(notification)} className=\"x-mark\" alt=\"Close\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NotificationPreview from './NotificationPreview'\r\n\r\nexport default ({notifications, onApprove, onDecline,onDeleteNotification}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"notification-list\">\r\n            {notifications.map(notification => {\r\n                return (\r\n                    <NotificationPreview notification={notification} key={notification._id} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification}  />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateUser } from '../actions/UserActions';\r\n\r\nimport SocketService from '../services/SocketService'\r\n\r\n\r\nimport NotificationList from '../cmps/Notification/NotificationList';\r\n\r\nconst InboxPage = (props) => {\r\n\r\n  const { user } = props\r\n\r\n  const onApprove = (notification) => {\r\n\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"approve\", { notification, user });\r\n\r\n  }\r\n  const onDecline = (notification) => {\r\n    onDeleteNotification(notification)\r\n    SocketService.emit(\"decline\", { notification, user });\r\n  }\r\n\r\n  const onDeleteNotification = (notification) => {\r\n    const idx = user.notifications.findIndex(\r\n      currNotification => currNotification._id === notification._id\r\n    );\r\n    user.notifications.splice(idx, 1);\r\n    props.updateUser(user)\r\n  }\r\n\r\n  const handleForbiddenUser = () => {\r\n    if(props.match.params.id !== user._id) props.history.push('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleForbiddenUser()\r\n  }, [])\r\n  \r\n\r\n  return (\r\n    (!user) ? <h1>Inbox is empty</h1> :\r\n      <div>\r\n        {user && <div>\r\n          {!!user.notifications.length && <NotificationList notifications={user.notifications} onApprove={onApprove} onDecline={onDecline} onDeleteNotification={onDeleteNotification} ></NotificationList>}\r\n        </div>\r\n        }\r\n      </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    room: state.room.currRoom,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxPage);","import React, { Component } from \"react\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport Loading from \"../cmps/Loading\";\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\n// import SocketService from '../services/SocketService'\r\n\r\nimport { signUp } from '../actions/UserActions'\r\nimport { login } from '../actions/UserActions'\r\nimport { getUser } from '../actions/UserActions'\r\nimport { connect } from \"react-redux\";\r\nimport CloudinaryService from '../../src/services/CloudinaryService'\r\n\r\nimport { AvatarEdit } from '../cmps/User/AvatarEdit'\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n  state = {\r\n    newUser: {\r\n      userName: '',\r\n      fullName: '',\r\n      password: '',\r\n      imgUrl: '',\r\n    },\r\n    isSignUp: false,\r\n    isLoading: false,\r\n    isDone:false\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('hi from signUp', this.state.newUser);\r\n    \r\n    this.getLoggedinUser();\r\n  }\r\n\r\n  getLoggedinUser = async () => {\r\n    await this.props.getUser()\r\n    if (this.props.user) this.props.history.push('/')\r\n  }\r\n\r\n  onChangeHandler = (ev) => {\r\n    const { value, name } = ev.target;\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        [name]: value\r\n      }\r\n    })\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({\r\n      newUser: {\r\n        userName: '',\r\n      fullName: '',\r\n      password: '',\r\n      imgUrl: '',\r\n      }\r\n    })\r\n  }\r\n\r\n  onUploadImg = async (ev) => {\r\n    this.setState({ isLoading: true })\r\n    let userImgUrl = await CloudinaryService.uploadImg(ev)\r\n    this.setState({\r\n      newUser: {\r\n        ...this.state.newUser,\r\n        imgUrl: userImgUrl.secure_url\r\n      }\r\n    })\r\n    this.setState({ isLoading: false })\r\n  }\r\n\r\n  connectSockets(id) {\r\n    this.props.onConnectSocket(id)\r\n  }\r\n\r\n  toggleSignUp = () => {\r\n    this.setState(prevState => ({\r\n      isSignUp: !prevState.isSignUp\r\n    }));\r\n  }\r\n\r\n  onHandleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    this.setState({ isDone: true })\r\n    this.state.isSignUp ?\r\n      await this.props.signUp({ ...this.state.newUser })\r\n      : await this.props.login({ ...this.state.newUser })\r\n    await this.getLoggedinUser();\r\n    if (!this.props.user) {\r\n      Swal.fire({\r\n        title: 'Wrong password or Username.',\r\n        width: 300,\r\n        confirmButtonText: \"Say what?\",\r\n        confirmButtonColor: \"yellow\",\r\n        padding: '1em',\r\n        background: '#fff url(https://sweetalert2.github.io/images/trees.png)',\r\n        backdrop: `\r\n        rgba(0,0,123,0.4)\r\n        url(\"https://sweetalert2.github.io/images/nyan-cat.gif\")\r\n        left top\r\n        no-repeat\r\n        `\r\n      })\r\n      this.props.history.push(\"/signup\")\r\n      this.resetInput()\r\n      this.setState({ isDone: false })\r\n      return\r\n    }\r\n    this.connectSockets(this.props.user._id)\r\n    this.props.history.push(\"/\")\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { isSignUp, isLoading, isDone } = this.state\r\n    const { imgUrl } = this.state.newUser\r\n    return (\r\n      isDone ? <Loading/> :  \r\n      <div className=\"signup-form\">\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          {isSignUp ? <h1>SignUp</h1> :<h1>Login</h1> }\r\n          {isSignUp && <AvatarEdit onUploadImg={this.onUploadImg} imgUrl={imgUrl} isLoading={isLoading} />}\r\n          {isSignUp && <MDBInput label=\"Full Name\" name=\"fullName\" value={this.state.newUser.fullName || ''} onChange={this.onChangeHandler} />}\r\n          <MDBInput label=\"UserName\" type=\"text\" name=\"userName\" value={this.state.newUser.userName || ''} onChange={this.onChangeHandler} />\r\n          <MDBInput label=\"Password\" type=\"password\" name=\"password\" value={this.state.newUser.password || ''} onChange={this.onChangeHandler} />\r\n          <button>{isSignUp ? 'SignUp' : 'Login'}</button>\r\n          {!isSignUp && <h2 onClick={this.toggleSignUp}>Don't Have an account? Sign Up!</h2>}\r\n          {isSignUp && <h2 onClick={this.toggleSignUp}>Head Back to Login</h2>}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  signUp,\r\n  getUser,\r\n  login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from \"react\";\r\nimport { getUser } from \"./actions/UserActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport InboxPage from './pages/InboxPage'\r\n\r\nimport ContactPage from './pages/ContactPage'\r\nimport BoardPage from './pages/BoardPage'\r\nimport SignUp from './pages/SignUp'\r\n\r\nimport Loading from './cmps/Loading'\r\nclass RoutePage extends React.Component {\r\n\r\n  async componentDidMount() {\r\n    await this.props.getUser(); \r\n    if (!this.isInSignupPage && !this.props.user) {\r\n    this.props.history.push('/signup')\r\n    }\r\n  }\r\n\r\n  get isInSignupPage() {\r\n    return this.props.location.pathname === \"/signup\";\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.props.location !== prevProps.location &&\r\n      !this.props.user &&\r\n      !this.isInSignupPage\r\n    ) {\r\n      this.props.history.push(\"/signup\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.isInSignupPage && !this.props.user) return <Loading />\r\n\r\n    return (\r\n      <div className=\"router-page\">\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/signup\" exact render={(routerProps) => <SignUp {...routerProps} onConnectSocket={this.props.onConnectSocket} />} />\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/contact\" component={ContactPage} />\r\n            <Route path=\"/board/:id\" component={BoardPage} />\r\n            <Route path=\"/inbox/:id\" exact component={InboxPage} />\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(RoutePage));\r\n","import React from \"react\";\r\nimport { stack as Menu } from \"react-burger-menu\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport { UtilService } from '../services/UtilService'\r\nimport { getUser } from '../actions/UserActions'\r\nimport { logout } from '../actions/UserActions'\r\n\r\n\r\n\r\nclass BurgerMenu extends React.Component {\r\n  state = {\r\n    menuOpen: false,\r\n    chuckJoke: ''\r\n  };\r\n\r\n  async componentDidMount () {    \r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke });     \r\n   \r\n  }\r\n\r\n async  componentWillUpdate () {\r\n    if(this.props.isClicked && !this.state.menuOpen ) {\r\n      this.setState({ menuOpen: true });\r\n    }\r\n\r\n    \r\n  }\r\n   \r\n\r\n \r\n  \r\n  closeMenu = async (ev) => {\r\n    if (ev) {\r\n      this.handleLogout()\r\n    }\r\n    \r\n    this.setState({ menuOpen: false });\r\n    let chuckJoke = await UtilService.getRandomChuck()\r\n    this.setState({ chuckJoke }); \r\n    };\r\n  \r\n  \r\n  handleLogout =  () => {\r\n     this.props.logout()\r\n    // this.props.history.push('/signup')\r\n  }\r\n\r\n\r\n  async handleStateChange(state) {\r\n\r\n    this.setState({ menuOpen: state.isOpen });\r\n    // this.props.onOpenMenu(state.isOpen)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { menuOpen, chuckJoke } = this.state\r\n    const { user } = this.props\r\n    if (!user) return ''\r\n\r\n    return (\r\n      <Menu right isOpen={menuOpen} onStateChange={(state) => this.handleStateChange(state)}>\r\n        <NavLink activeClassName=\"active\" exact to=\"/\" onClick={() => this.closeMenu()}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/contact\" exact onClick={() => this.closeMenu()}>\r\n          Contacts\r\n        </NavLink>\r\n        {user.notifications.length && <span className=\"notification-count\">{user.notifications.length}</span>}\r\n        <NavLink activeClassName=\"active\" to={`/inbox/${user._id}`} exact onClick={() => this.closeMenu()}>\r\n          Inbox\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/signup\" exact onClick={() => this.closeMenu(logout)}  >\r\n          Logout\r\n        </NavLink>\r\n        <div className=\"menu-footer\">\r\n         <h5>{chuckJoke}</h5>\r\n        {/* <img src={imgObj.imgUrl} alt=\"\"/> */}\r\n        </div>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  getUser,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(BurgerMenu));\r\n\r\n","import React ,{useState ,useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport logo from '../../src/assets/png/petek-logo.png'\r\nimport BurgerMenu from './BurgerMenu';\r\n\r\n\r\n\r\nexport default (props) => {\r\n\r\n  const { user } = props\r\n  const [isClicked, toggleClick] = useState(false)\r\n   \r\n  useEffect(() => {\r\n    return () => {\r\n      toggleClick(false)\r\n    };\r\n  }, [isClicked])\r\n  \r\n\r\n  return (\r\n     <nav className=\"main-navbar\">\r\n        <Link to={`/`} className=\"home-link\" >\r\n        <img src={logo} alt=\"logo\" className=\"logo\"/>\r\n        </Link>\r\n       {user && !!user.notifications.length && <span className=\"notification-count nav-count\" onClick={() => {toggleClick(true)}} >{user.notifications.length}</span>}\r\n       <BurgerMenu isClicked={isClicked} />\r\n    </nav>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport './App.scss';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport audioNotification from '../src/assets/sound/sp-tune.mp3'\r\n\r\nimport SocketService from './services/SocketService'\r\nimport { StorageService } from './services/StorageService'\r\nimport { updateUser, getUser } from '../src/actions/UserActions';\r\nimport { saveRoom, loadRoomById } from '../src/actions/RoomActions';\r\n\r\nimport RoutePage from './RoutePage'\r\nimport NavBar from './cmps/NavBar';\r\n\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = (props) => {\r\n  const loggedinUser = props.user;\r\n  const room = props.room\r\n\r\n  const connectSockets = (id) => {\r\n    // getUser()\r\n    SocketService.setup()\r\n\r\n    if (room && loggedinUser) {\r\n      SocketService.on(`updateRoom ${room._id}`, async ({ updatedRoom, userId }) => {\r\n        console.log('&&&&&UPDATE ROOM INVOKED');\r\n        if (userId !== loggedinUser._id) {\r\n          console.log('&&&&&after condition updatedRoom._id');\r\n          props.loadRoomById({ roomId: updatedRoom._id })\r\n        }\r\n      });\r\n    }\r\n    if (loggedinUser) {\r\n      SocketService.on(`updateUser ${loggedinUser._id}`, (updatedUser) => {\r\n        console.log('TEST',updatedUser);\r\n        // console.log('$$UPDATED USER FROM SOCKET$$', updatedUser);\r\n        // console.log('$$USER$$:', loggedinUser.userName)\r\n        let user = StorageService.load('user')\r\n        console.log('Storage:', user.userName)\r\n        if (loggedinUser._id === user._id) updateUser(updatedUser)\r\n      });\r\n      SocketService.on(`updateUserWithoutAudio ${loggedinUser._id}`, ( updatedUser ) => { props.updateUser(updatedUser) })\r\n    }\r\n  }\r\n\r\n  const disconnectSockets = () => {\r\n    if (room) SocketService.off(`updateRoom ${room._id}`)\r\n    SocketService.off(`updateUser ${loggedinUser._id}`)\r\n    SocketService.off(`updateUserWithoutAudio ${loggedinUser._id}`)\r\n  }\r\n\r\n  const updateUser = (updatedUser) => {\r\n    let audio = new Audio(audioNotification);\r\n    if (updatedUser) {\r\n      props.updateUser(updatedUser)\r\n      audio.play()\r\n    } else {\r\n      console.log(\"ERROR IN UPDATE USER\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    connectSockets()\r\n    if (loggedinUser) console.log('connect user sockets', loggedinUser._id);\r\n    if (room) console.log('connect room sockets', room._id);\r\n    return () =>{\r\n          if (room) SocketService.off(`updateRoom ${room._id}`)\r\n\r\n    }\r\n \r\n  }, [loggedinUser, room]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n        console.log('disconnecet user sockets', loggedinUser._id);\r\n        if (room) console.log('disconnecet room sockets', room._id);\r\n        disconnectSockets()\r\n        SocketService.terminate()\r\n      \r\n    };\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <NavBar user={props.user} />\r\n        <RoutePage onConnectSocket={connectSockets} />\r\n      </Router>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedinUser,\r\n    contacts: state.contact.contacts,\r\n    room: state.room.currRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser,\r\n  saveRoom,\r\n  loadRoomById,\r\n  getUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  \r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    loggedinUser: null\r\n}\r\n\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            console.log(action.user);\r\n            if (!action.user) return { ...state, loggedinUser: action.user }\r\n            else return { ...state, loggedinUser: { ...action.user } }\r\n        case 'GET_USER':\r\n            return { ...state, loggedinUser: action.user }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\n\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':            \r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CURR_CONTACT':\r\n            return { ...state, currContact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    if (contact._id === action.contact._id) return action.contact;\r\n                    return contact;\r\n                })\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => {\r\n                    return contact._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    rooms: [],\r\n    currRoom: null\r\n}\r\n\r\n\r\nexport default function RoomReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_ROOMS':\r\n            return { ...state, rooms: action.rooms }\r\n        case 'SET_CURR_ROOM':\r\n            return { ...state, currRoom: action.room }\r\n        case 'UPDATE_ROOM':\r\n            console.log('UPDATE_ROOM invoked rooms:', state.rooms)\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.map(room => {\r\n                    if (room._id === action.room._id) {\r\n                        //after problems fixed return it to one line term\r\n                        console.log('id match!');\r\n                        \r\n                        return action.room;\r\n                    }\r\n                    return room;\r\n                })\r\n            }\r\n        case 'DELETE_ROOM':\r\n            return {\r\n                ...state,\r\n                rooms: state.rooms.filter(room => {\r\n                    return room._id !== action.id\r\n                })\r\n            }\r\n        case 'ADD_ROOM':\r\n            console.log('UPDATE_ROOM ', action.room);\r\n            return {\r\n                ...state,\r\n                rooms: [...state.rooms, action.room]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport UserReducer from './reducers/UserReducer';\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport RoomReducer from './reducers/RoomReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer,\r\n    room: RoomReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\n\r\nexport default store\r\n\r\n\r\n//*********STOREEEEE****************\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.scss';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App.jsx'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/plus.867418af.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c79dce59.png\";","module.exports = __webpack_public_path__ + \"static/media/pin.5f588246.svg\";","module.exports = __webpack_public_path__ + \"static/media/x-mark.002e9675.svg\";"],"sourceRoot":""}